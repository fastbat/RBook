Fix incorrect link in lite dev guideThis fix fixes incorrect link in lite dev guide
TF-TRT: Improve logAdd more information to the log including unsupported ops.
R1.11i need to build tensorflow  v1.11
Python API documentation fixesThis PR fixes some minor grammatical and typo errors in the Python tf.data APIs that I came across while working with the code.
"Add RCCL package and ops.These contributed RCCL ops are based on the NCCL ops. Due to the intentional similarities of the RCCL API to the NCCL1 API, in most cases, these can be used as a drop-in replacement for NCCL when compiling with ROCm."
Bugfix: remove first arg instead of `self`Bugfix: remove first arg instead of self to make the function more robust and works for classmethod
"Abs, Ceil ops for TFLITECEIL basic ops for tensorflow lite"
"Add float16 support for tf.qrThis fix tries to address the issue raised in #23830 where tf.qr does not support float16 data types.
This fix adds the float16 support for tf.qr."
Updated PR for \Fold BN after depthwise conv\(#21023)Original PR is here
Preventing crash when building with local MKLPreventing crash when MKL include dir. contains something else (e.g. fortran defs.).
[TFLite] Add options for benchmark_model and label_image to allow fp16 for fp32 modelsAdd options for benchmark_model and label_image to allow running fp32 models with fp16. Useful when testing NNPAI accelerators with fp16 capability.
Fix deprecated divWhile running test I noticed the following warning:
"update mklml version to make it consistent with mkldnn.We found mkldnn version was updated in 13440cc but did not update the mklml version.
This PR update the mklml to latest version to make it consistent with the mkldnn version."
Enable while_loop to support timeoutThis PR fixes #22217.
"Add option to disable ncclIn platforms like embedded systems, nccl is not supported and doesn't make sense. This PR adds a bazel config flag to disable nccl portions of TF for such platforms."
Add helloNo description provided.
"fix tf.Saver save and restore bug under distributed setting(with ps, master and worker)This pull request allow using more than one PS in distributed training, saving and restore models without using any shared file stream. The following issues will be fixed, although it is closed:tensorflow/tensor2tensor#394#6374"
Update graph_transformations.htypo
[tflite] set eigen threads to 0 when recommended_num_threads == 1Avoid creating unused idle thread
"Fixed technical issues with README.mdImproved the README.md file to adhere to more technical writing standards. Concision was improved, errors were fixed, and formality is increased"
Fix #22455.RdmaAdapter is allocated outside of RdmaMgr so that ibv_device is available to the static visitor registration.
CMake build updateI am trying to separate changes in cmake and TF core code changes in two PRs regarding this old PR
"Add example to import_meta_graph docstringBased on the super insightful example by @mrry on Stackoverflow (https://stackoverflow.com/a/38834095/1063607), which many users suggested should be in the official documentation."
Fixed link path \apis.md\Improvement of link disconnection by document movement.
Update README.mdimproving readability.
Fix a TypeErrorWe cannot concatenate string and FailedPreConditionError
[Intel MKL] Quantized (int8) Pooling SupportThis PR adds support for quantized pooling op with MKL-DNN. It also includes many clang-format changes.
fix spelling errorfix spelling error for documents.
"[Bug fix]fix bug of reusing MirroredVariables failed in MirroredStrategyThe bug will be triggered in the following else branch when using MirroredStrategy. create_zeros_slot will pick up the VarHandleOp in current tower to create auxiliary variables. However, in the case of replica_id > 0, the variable_scope will set reuse=True in MirroredStrategy. It will use the replica_idth of MirroredVaraible to create auxiliary variable and this variable cannot be reused  because of its new name(xxx/replica_1) ."
"Fix paths used in scriptFix paths used in script, broke with migration from contrib"
Fix issue in expanding of mask in keras.backend.rnnFollow up on #23632. The axis argument is missing in array_ops.expand_dims which leads to that outputs with more than 2 dimensions cannot be masked.
FastGFile deprecated warning fixedfix FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version. problem.
"tensorflow/lite/tools/make: fix download_dependencies pathBecause of the move out of contrib, the path now needs one less '..'."
Fix dead links in toco documentsFixed dead links in toco documents.
[XLA] Simplify transposes that are really reshapesA transpose like
Fix ValueError by image.transform in eager modeThis fix tries to address the issue raised in #23654 where in eager mode tf.contrib.image.transform will throw out
Exclude the log_dir from the metadata pathThe metadata path should exclude the log directory. See tensorflow/tensorboard#247.
"Added missing export for `profiler.ProfileContext`The instruction here says ""please use tf.profiler.xxx instead of tf.contrib.tfprof.xxx"". However, this is not exported yet."
"OptimizationPass::POST_REWRITE_FOR_EXEC after Grappler optimizationI found there is graph optimization ordering difference between PartitionedCallOp and GraphExecutionState.
I think OptimizationPass::POST_REWRITE_FOR_EXEC should be applied after Grappler optimization because we can not add the graph conversion between Grappler optimization and graph partitioning."
"Add converters for MaxPool3D-related OpsThis PR adds the converters for MaxPool3D, MaxPool3DGrad, and MaxPool3DGradGrad."
Fix the issue where distributions.percentile does not support eager modeThis fix tries to address the issue in #23619 where distributions.percentile in eager mode throws:
INTEL MKL: updating golden apiThis is to update the golden api so the api_compatibility_test passes.
"[INTEL MKL] Fix memory leak issue in MklFusedBatchNormfix the memory leak bug in mkl batch norm, free the temp weight buffer used for MKL-DNN weight memory primitive."
"Moving batch_get_value out of the for loopFollowing the issue posted here, moving the extremely expensive batch_get_value call out of the for loop speeds up weight saving like a million times"
"update rpi build pathlite folder is no longer under contrib folder, I found these two scripts need update"
"Support the new cuDNN RNN padding mask operationWe added code to support the new cuDNN RNN padding mask operation, which can accept a batch of sequences with variable lengths. We added a new parameter of ""sequence_lengths"" to the old API, meaning only if it is provided, we will call the new operation."
Java does not need operations like'& 0xff'in the process of strong rotation. Reducing this operation can reduce many calculations and improve performance.Java does not need operations like'& 0xff'in the process of strong rotation. Reducing this operation can reduce many calculations and improve performance.
"RendezvousMgr & CancellationMgr are already aborted, shouldn't send R…PC call any more"
"Install abseil headers to cmake shared library buildSince commit 5f00451 tensorflow::StringPiece is replaced by
absl::string_view, so abseil headers should be installed to shared
library build to fix compilation error for out-of-source build."
Fix broken OrderedEnqueuer class in keras.utils.data_utilsThe OrderedEnqueuer class in tensorflow.python.keras.utils.data_utils isn't working at the head of the master branch when use_multiprocessing=True. For example:
"Add a new Batched NMS OPThis change adds a new Batched NMS operation (called NonMaxSuppressionLite). The entire NMS operation for all batches and across all classes is performed in one kernel operation.
The change also adds unit tests for the new kernel operation."
"update references and unify citation styleRefer to published work if possible.
Use (author-year) style in text and have links in References field of docs."
Fix bug in image_captioning_with_attention.ipynbFixes #23465 as discussed in the issue's comments.
"Implement TFLite Micro's preprocessor with CMSIS libs; create Apollo3 testsThe purpose of this pull request is to implement a portion of the TFLite Micro code using the ARM CMSIS-DSP libs. More specifically, we implement a fixed-point version of the preprocessing function that takes raw audio samples and turns them into a spectrogram."
"Correct error messages in graph transforms.Correct copy-pasted mistakes in error messages in transforms: remove_attribute, rename_attribute, rename_op."
"Change `int` to `uint` or `size_t` where applicableChange int to uint or size_t where applicable.
Based on compiler warnings & common sense."
"Update imports from contrib to tf.profilerThe instruction here says ""please use tf.profiler.xxx instead of tf.contrib.tfprof.xxx"""
"Add option for inferring op attributes from inputsIn graph execution mode, the NodeDefBuilder will take care of inferring type and number attributes from operation inputs as they are added. Eager execution does not support for now. Unfortunately, some clients, as in Java, assume this feature to be present in both cases."
Update download_dependencies.shAfter removing contrib from the path to lite there is one less step back to make.
"Update beam_search_decoder.py#22172
probably not the neatest way to update my previous pull request..."
"Fix the compute_output_shape issue in tf.keras.layers.BidirectionalThis PR fixes #23299, where tf.keras.layers.Bidirectional does not work in some cases under eager execution mode because the output shape from the forward layer may not be as expected."
"Fix the C2678 MSVC compilation errorMSVC 14.15 returns the C2678 error during a compilation of the
'tensorflow/core/kernels/data/scan_dataset_op.cc' unit:"
Fix BZL_FILE_PATH detection in building tensorflow liteCurrently it will cause an error.Could not find tensorflow/workspace.bzl: Likely you are not running this from the root directory of the repository.
"Should use '_train_distribution' because Estimator doesn't have attribute '_distribution'When I use tf.contrib.distribute.MirroredStrategy and training_hooks for one Estimator, like:"
"API documentation updates for tf.b*This PR contains miscellaneous API documentation updates that cover the API functions whose names start with ""tf.b"". Some of the changes correct typos, while others document aspects of these functions that weren't obvious to me without reading the source code."
"Improve shape function of tf.sparse_reduce_sumThis fix tries to address the issue raised in #23114 where
the shape function of tf.sparse_reduce_sum did not
infer the shape even if the input shape were known."
Fix concat optimization infinite loopThis is a fix for the issue identified in #23383
Fix downloading protobuf dependencyProtobuf has been failing due to its repository having dependencies. Downloading the .tar.gz form GitHub doesn't work because it does not bring its dependencies with it.
Fix the case when input value are MirroredVariable for assign_moving_averageFix the case when the input value of assign_moving_average are type of Mirrored. (#23291)
"Fixed some spellings in core.Just some minor spell checks in /core. Please, double check."
Fix the issue for class_weight used with tf.datasetThis fix tries to address the issue raised in #22275 where class_weight used with tf.dataset will result in:
Added note on weight decay for tf.contrib.opt optimizers.Addresses: #22763
fix missing `#` in code example of `tf.keras.layers.Embedding`NA
"Add required compilation options to build libtensorflow-lite.aThis PR fixes generating some object files for libtensorflow-lite.a without -fPIC for linux.
I think makefiles for other systems are likely to have the same problem."
"Use bash in makefile to avoid unknown [[ errorWhen building tflite with makefile using this command,"
Add scaling op and transform to contrib.imageThis add scale and scales_to_projective_transforms ops to contrib.image. This is useful for efficient data augmentation since we can compose transformations.
Bug fix + tests: keras.backend.batch_dotNo description provided.
Fix T-distribution sampling parameterTo sample a chi-square (df=n) distribution requires a gamma distribution with shape = df/2 and rate = 2. I believe this is a mistype by the previous contributor. For reference: https://stats.stackexchange.com/questions/118676/relationship-between-gamma-and-chi-squared-distribution
Merge pull request #1 from tensorflow/masterUpdata my repo
"[XLA] Remove dependency on having a GPU to run jit testsThis test is set up to require the GPU device, but not all systems have a GPU device in them."
Added org.tensorflow.Tensor.create() methods that are an order of mag…nitude faster on android.
"Prevent memory leak by storing strings instead of StringPiece in vectorThis fixes a memory leak where a StringPiece stored in a vector, hence the AttrVec here, outlives the const char* buffer he has been initialized with."
"Added implementation of an absolute_name_scope and a unit test.This PR adds a new name_scope called absolute_name_scope which builds on name_scope but allows reusing name_scopes without creating a new name_scope which is normally uniquified by adding a _N.
Based on the discussion in #9545"
"[Features]mixed precision support enhancement using decoratorThis feature realize the automatic/constant loss scaling algorithm in Backprop, which can help preserve small gradient magnitudes ( ref to  https://docs.nvidia.com/deeplearning/sdk/mixed-precision-training/index.html)
Mixed precision with loss scaling is already support by tf.contrib.mixed_precision.LossScaleOptimizer,  with the following usage:"
"Fix documentation for deprecated argsWhile reading the API docs, I noticed that some of the deprecation notices seem to have missing pieces. For example, this notice in tf.math.argmax:"
"Update cast_op_test for ARM behavior-Casting ""np.inf"" to an integer on ARM results in a positive value, instead of a negative value, similar to Power
-Casting ""np.nan"" to an integer on ARM results in 0 instead of the integer's minimum value"
"Disable denormal_test on aarch64 platformFlushing denormals is not yet implemented on the ARM architecture, similar to the other platforms discussed here: #11902"
verbs: make sure the memory region to send from is registeredFixes #23220
Updating issue templates to add StackOverflow linksNo description provided.
TypoNo description provided.
Remove redundant word \the\No description provided.
Fix error that bugs Keras during multi-gpu with batch normalizationHere are the issues that lead to this bug:keras-team/keras#10008keras-team/keras#10490
"Add support for ppc64le in dockerfilesEnable dockerfile editing environment for ppc64le
Add new .Dockerfile and .partial.Dockerfile files for ppc64le architecture."
"Implement server Stop methodCurrently ""Stop"" function is not implemented in GrpcServer. It leads to the fact, that GrpcServer can't be used inside other processes (like in #23022). I've implemented stop method so that server stops and doesn't abort the process during destructor execution."
"Allow the method `model_to_estimator` to have a regression signatureUp to now, the method model_to_estimator that converts a Keras model into an tf.estimator.Estimator
does not permit to change the parameters' dictionary export_outputs of the instance of the tf.estimator.EstimatorSpec returned by this function. (see https://www.tensorflow.org/api_docs/python/tf/estimator/EstimatorSpec)."
Add Linux and Android makefileNo description provided.
Fix comments to match usageFix comments of sparse_softmax_cross_entropy_with_logits to match usage.
[Intel-MKL] Fold subdivmul based batchnorms onto convlution and biasaddThis PR folds BatchNorms that are of form Sub-RealDiv-Mul format into the Conv2d present before and BiasAdd node present after.
"Updates to documentation for root package and tf.a*This PR contains miscellaneous API documentation updates that cover the root package tf and all the API functions whose names start with tf.a. Some of the changes correct typos, while others document aspects of these functions that weren't obvious to me without reading the source code."
Document undocumented ops in check_ops.pyThis PR adds API documentation for two public functions in check_ops.py that were previously undocumented.
MKL DNN: cleaning mkl softamx kernelCleaned up Intel MKL ML related code. The intention is to stop supporting MKL ML (closed source library) code and have the MKL DNN code (Open sourced library) to be the default code path.
MKL DNN: cleaning up MKL ML code in LRN kernelCleaned up Intel MKL ML related code. The intention is to stop supporting MKL ML (closed source library) code and have the MKL DNN code (Open sourced library) to be the default code path.
"[Intel-Mkl] Redundant transpose removal: transpose(to \NHWC\)+ conv2d(NHWC) + transpose(back to \NCHW\) -> conv2d.This is a pattern found in Keras-based models. When using ""NCHW"" format dataset, Keras will insert 2 extra ""Transpose"" ops before/after every CNN ops, because only ""NHWC"" format is supported in CPU mode."
Remove the unnecessary namespace aliasesThis PR removes some namespace aliases in dataset.h as the related files have been moved over to the tensorflow::data namespace.
"Update the tests and benchmark for tf.data.Dataset.list_filesThis PR uses MatchingFilesDataset to replace matching_files in  tf.data.Dataset.list_files. Besides, it adds a benchmarking test and changes some variable names to be more readable in the test file."
"Update feature_column_v2.pyOr should be:
y_0 = 1.0 / 2.0 * ( w_a + w_ b) + w_d + b
y_1 = w_c + 1.0 / 3.0 * ( w_e + w_ f + w_g) + b"
Update feature_column_v2_test.pyNo description provided.
Remove duplicate variable assignment.No description provided.
Fix issue 22298add storing variable created in variable scope in _VariableStore class
[Redo of #23090] Clean up binary element-wise assertionsThe working branch off of which PR #23090 was based was destroyed in a tragic git accident. This PR is a redo of the same changes.
"Add uint8 support for Pad with GPUThis fix tries to address some of the issue raised in #17823,
where Pad with GPU does not support uint8. This fix adds the uint8 support."
add shape info for convenienceNo description provided.
add print interpreter apiNo description provided.
"Make shared S3 file system lib linkableMy (and I think most) linkers expect shared object files to start with lib, so using the target s3_file_system.so resulted in an error along the lines of error: cannot find -ls3_file_system, because this target creates a file named s3_file_system.so as opposed to libs3_file_system.so."
[Docker] Upgraded images to Ubuntu 18.04 LTS.Upgraded all Docker base images to 18.04.
"Add bullet points so Reduction values are clearerCurrently it's these items are all in one line in https://www.tensorflow.org/api_docs/python/tf/losses/Reduction, which is hard to visualize."
"change libcudnn7 version to 7.0.5.15Founded incompatibilities with my laptop GPU in ubuntu 18. ""cuda_dnn.cc:360] Possibly insufficient driver version: 390.48.0"". It was solved downgrading CuDNN"
Update feature_column.pyAllow multiple calls of input_layer to have the same root variable scope.
"support dynamic shape for conv3dFix #16834, #15572, #15655, #15696, #16834, #20379, #22771."
Add Apache Arrow Support to TensorFlow DatasetApache Arrow is a standard format for in-memory columnar data. It provides a cross-language platform for systems to communicate and operate on data efficiently.
Updated Tensor.javaMade variables more understandable and Documented some parts of the code. 総
"[XLA] Add simple HLO if conversion passkConditional operations are currently generally disallowed in parallel contexts
(e.g. in mapped computations). The julia XLA frontend was running into this limitation
quite a bit, because existing julia code tends to use the terniary operator for select,
e.g. to describe the derivative of a max call (and thus a relu) - see the
definitions of the derivatives of max athttps://github.com/JuliaDiff/DiffRules.jl/blob/master/src/rules.jl#L94"
remove noisy warning in StepCounterHookfix #21523
"Update to bazel-0.18.0 and use try-importBazel-0.18.0 adds a try-import option that will non-fatally try and
import a file. Use this for the configure options so that .bazelrc does
not need to change. ./configure rewriting .bazelrc makes using the git
repo annoying because the file is changed."
[bazel] Use tmp dir for intermediate NVCC source filesMore info can be provided if needed to repro the bug in question.
[INTEL MKL] Clean up MKL_ML code for BatchNorm opClean up BatchNorm op by removing legacy MKL-ML code.
[Intel MKL] Update Eigen to get new optimization contributed by IntelUpdate Eigen to get these feature:
"shard segment reduction op to multi threadsshards the segment reduction op to multi threads when computing with CPU, so as to speed up the op."
"Fix indentation in CRFThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
README UpdatesClarification of code examples for fast copy-paste replication. (I did run the code myself and encountered those little missing elements)
"[aarch64] make aws sdk work on aarch64bazel build //tensorflow/tools/pip_package:build_pip_package
requires AWS SDK by default. but platform part was not built
on aarch64"
"Add soversion to librariesPreviously the libs were just ""libtensorflow.so"" without any version.
This adds the version to the library and adds the appropriate symlinks
to the full name from the base and soversion."
"Add (init) symbol names prefixed with an underscoreThe command: python -c 'from tensorflow.contrib import tensorrt as trt' fails
with:"
TFTRT User provided INT8 quantization scalesTF-TRT now supports the following quantization nodes:
[Intel MKL] Adding support for Depthwise 2D Convolution (fwd)No description provided.
Ios lite simple app improvmentadd photo selection and image preview for tensorflow lite simple app
"Updated terminology changes in bazel scriptsNote:  This is a replacement/updated version of PR #20996.  Based on community feedback, it is now simplified and backwards compatible."
"User defined optimization listCurrently if user adds an optimizer to rewrite_config.optimizer list, default optimizers are disabled and user defined optimizers run. However if user modifies custom_optimizers list, optimizers in the list is appended to the default optimizers list. This PR makes the behavior for optimizers and custom_optimizers list identical in this respect."
"Fixed false error triggering in ps distribution strategy for local runThe ParameterServerStrategy throws an error from _verify_destinations_not_different_worker when applied locally, where only one worker is available. The cause seems to be the line"
Update README.mdNo description provided.
"Improve TOCO outputCurrently the output is a binary string contain \n characters, making the output not very readable. This change makes renders the output as the user expects."
Pass custom_objects as args in TocoConverter.from_keras_model_filePass custom_objects as an argument to TocoConverter.from_keras_model_file() to allow for things like custom Keras layers.
"[ROCm] StreamExecutor logic for ROCm platform (PR 20709 continued)This is really the continuation of PR 20709.
Filing this new PR as that one was closed out by the tensorflowbutler"
Update math_ops.pyadding erfniv in reference to # TODO(phawkins): implement erfinv
"Fix bug in add_n's handling of IndexedSlicesThe fix for #15943 (#21494) modified the Python add_n op to allow IndexedSlices in its arguments. This fix introduced a bug in how add_n handles an input consisting of a single IndexedSlices object. Specifically, add_n returns the values field of the IndexedSlices object, when it should return the tensor representation of the object."
"Make colocations be compatible with DistributionStrategy in SyncReplicasOptimizerThis is a compatibility improvement related to DistributionStrategy.  The ops.colocate_with in 'SyncReplicasOptimizer' should be replaced with distribution.colocate_with_vars to support DistributionStrategy. Otherwise, this colocation will be ignored and the self._local_step will be placed on PS."
Skip record reader for cloud file systemAddressing this #22598
"[XLA/tfcompile] fix type of enum for build with MSVCcpu_function_runtime.h: When using bitfields, MSVC only merges same-sized types. Therefore I changed the type of the ""Kind"" enum to match the type of size_."
Fix validating callback type for distributed KerasNo description provided.
Modify: fix name problem when export and import graph def of boosted_…tensorflow/python/framework/importer.py
"[WIP] Load CUDA libraries dynamicallyPrior to this commit, TensorFlow was built in two flavours: CPU-only and CPU/GPU. The latter version was dynamically linked with CUDA and therefore required CUDA libraries to be installed in the host system. This change replaces dynamic linking with dynamic loading for all of the CUDA libraries but cudart. This would allow to ship a single TensorFlow build which works for both cases."
"include <cstring> in a few places that use itThis is a bit of a drive-by, but I was doing some builds with c++17 and triSYCL, but fell across these 3 errors with gcc version 8.1.1 20180712 (Red Hat 8.1.1-5) (GCC)  on Fedora 28."
fix: slot and primary can be different shapeSee github issue #19457
"Performance optimization on SparseConcatOp.Previous 'SparseConcatOp' uses a reorder-concat-reorder implementation. In the 'Reorder' function, a sort would be performed, which decides that the overall complexity would be O(NlogN). In large (maybe rare but occurred in our production env) cases, time consumption is significant."
"Tensorflow Lite optimized build for i.MX6 SOCThis is a basic build to create an optimized tensorflowlite library to
run on the cortex-a9 based i.MX6"
Accepts `PathLike` objects for dataset readersContinuation from #17465
"Fix Embedding layer to check invalid inputsBug: If users set input_length for Embedding layer incorrectly, it should throw exception(existing not). Otherwise, the downstream layers compute shape incorrect and throw confused exception.
I have fixed this at keras-team/keras#11091, but it's different from tf.keras. keras-team/keras makes this check in compute_output_shape which was executed always. But tf.keras only calls compute_output_shape in deferred mode, so we need to move this check to other place. Actually it makes more sense to move it to _assert_input_compatibility which is used to check the inputs legal, and would be run in all mode."
"[WIP] Variable Length CuDNN LSTMs/RNNsHi! Started working on implementing variable sequence lengths in cudnn. Getting close, but also need to implement Pack/Unpack operations to make things useful. Hopefully will have this working within a week or so. Should be a huge performance difference."
"[xrt] Add a simple cc_binary serverRight now xrt isn't included in any of the standard ways to
spin up a grpc server, making it tough to play with it without
making any local modifications to the build system. This patch
adds a small server binary that includes xrt and simply listens
on localhost:8470."
"move SymGrad and RCall kernels to functional_opsThis moving of SymbolicGradient and RemoteCall is because
their OPs are defined in ops/functional_ops.h ."
"Option: Use fused_batch_norm instead of batch_norm for layer normalizationtf.nn.fused_batch_norm uses cudnn for GPU acceleration, tf.nn.batch_normalization does not. This PR adds the option of using fused_batch_norm instead of batch_normalization. It is an opt-in option because fused_batch_norm only improves runtimes on GPUs and does not support double precision tensors."
Add hessian computation for sparse softmax xent.Closes #9368
Add support for SquaredDifference in TFLiteIssue #21526
"Fix ps0 OOM when workers too many.When training with MonitoredTrainingSession in distributed mode,
all ops related with report_uninitialized_xxx will be placed on ps0,
which may lead to OOM when workers up to thousands."
Updated `Dataset.shard` documentationUpdated the Dataset.shard documentation to warn of the potential implications of invoking Dataset.repeat before Dataset.shuffle.
"Added axis parameter to tf.losses.softmax_cross_entropy. Fixes #20866The internal implementation of tf.losses.softmax_cross_entropy, uses nn.softmax_cross_entropy_with_logits_v2 which has a dim argument with a default value of -1. The new argument axis=-1 wraps the dim argument of nn.softmax_cross_entropy_with_logits_v2. Documentations also updated.
This will fix #20866"
"Add libtensorflow_cc.so to pip_package BUILDThis allows to run inference from C++ code if we link against the libtensorflow_cc.so library that will get installed under /usr/local/lib/python2.7/dist-packages/tensorflow by default. Otherwise, this library doesn't get installed there and there's no other way to run inference from C++ using Tensorflow AFAIK."
Rot90ND for rotating image tensors with general shapesThis request addresses the feature request raised in #21104
Fix batch normalization in canned DNN EstimatorsThis PR fixes the implementation of batch normalization in canned DNN estimators.  Batch normalization should be applied after the inputs but before the activation function.
Support addition of gradient operations in a graph for golangrelated to  #21404
"add LU operation and return factorized matrices, related to issue #6992related to #6992 and
reopen for pull request #16185"
"remove warnings when compiling this as a c header.There are some compile errors with visual studio 2017.
These consts are not c compatible"
initializer should support TensorShapeFix #21838.
"kernel register bug fixIf the right kernel found, don't set was_attr_mismatch true."
Improve correctness of auto_parallelThis PR improves the correctness of current auto_parallel in grappler.
add op to tf_op_files.txtadd op to tensorflow/contrib/makefile/tf_op_files.txt to fix problem of op not registered
Add support of CTC float64Signed-off-by: Andrii Prymostka andrey.primostka@gmail.com
"Update Bazel NDK revision compatibilityUpdated Bazel compatible Android NDK version. I also tried to re-word the docs to require less revision in the future.
Demo app on Bazel 0.16.1 + NDK16 compiled without issue as a sanity check."
ci_build: Upgrade the Python 'six' compatibility moduleNo description provided.
"Print output of predictions in simple estimator example for DistributionStrategyResolved the TODO (cc @anj-s) that asked to print meaningful results from the Estimator's predictions.
Collects all elements yielded by the generator in a list and prints that list instead of the generator object.
Results in the following output: Prediction results: [{'logits': array([1.0162734], dtype=float32)}, ..., {'logits': array([1.0162734], dtype=float32)}]."
"Upgrade gradle to fix a resolution errorI am never an expert of gradle, but I needed these changes to avoid Failed to resolve: androidx.test.espresso:espresso-core:3.1.0-alpha3 when building the demo app.  See #20828."
adding libnsync.a when available.iOS needs these flags to build:
"Fix embedding_ops_test on AVX512 buildsThis commit modifies the embedding_ops_test unit test so that it
passes on AVX512 builds.  The test compares the result of an embedding
operation to a precomputed expected result, both of which are computed
using square roots.  The test appears to fail on AVX512 builds as the
embedding operation makes use of Eigen's fast vectorized square root
algorithm for doubles, which can return slightly different results to
those computed using numpy.  As the test expects both results to be
identical it fails on AVX512 builds, even though the difference
between the results is insignificant.  This commit fixes the issue by
modifying the equality tests to use assertAllClose instead of
assertAllEqual.  Note that the test passes in its current form on AVX2
builds as Eigen does not yet implement an AVX2 version of the fast
square root algorithm for doubles."
Fix CropAndResize opPrevent floating point arithmetic influence on CropAndResize op
Support Azure Blob Storage Filesystem for TensorFlowOriginal noted work in #18852 and this is for that work to support Azure blob storage FileSystem for TensorFlow.
"Added some missing int32 GPU kernel registrations.@alextp This helps prevent some performance degradation when allowing soft placement. The issue is that gradient updates are often colocated with the variables they are applied to. When using resource variables, the missing int32 kernel registrations can cause the whole colocation group to be placed on the CPU incurring a big performance penalty. The added int32 kernel registrations follow the same ""fake"" GPU kernel pattern used in various places (such as the ""Concat"" and ""ConcatV2"" ops, for example)."
Unnecessary character in logging.hUnnecessary new line character at line 229 .
"change the swap threshold by adding an elastic percentageOriginally, heuristic memory swapping feature won't improve much on the batch size, that's because IdentifySwappingCandidates are fully trusting the statically analysis.
Per my experiment, this did not improve the batch size at all."
fix 'channels_first' conv3d with None shape inputsuse array_ops.shape such that 'channels_first' conv3d can support None shape inputs.
"avoid url error exceptionTo Avoid falling into url error exception, I changed the order of exceptions."
batch_normalization layers docs (issue #21229)Addresses issue #21229. Changes Notes to Cautions as batch normalization layers do not work properly without taking into account the caution in the Note.
"doc: fix typo in api_guides/cc/guide.mdWhen I was learning the cc api from official site, I found the calculation result  and the comment doesn't match, so I send this PR."
Manually call right-operand version of binary ops to preserve error message#12454
"Bijector mapping  deep tuple fixRight now, Bijector _Mapping's _deep_tuple doesn't allow nested dicts. This problem causes some of the conditioning not to work. See:  #21543. This PR is a possible way to fix the issue."
"Fix documentation on softmax_cross_entropy_with_logits_v2In this example we see that the x_entropy shape does not equal the shape of labels as stated in the original documentation, it is of shape [batch_size]."
enable double precision for SparseTensorDenseMatMul on GPUTrivial changes (just adding some extra macro calls)
"Fix incorrect check logic for state_forget_sig gateState_forget_sig does not have Split operation as an input.
Instead it has Add operation and Add has a Split."
HParams: Clarify what happens when a new value is input to some methodsThe current docstrings don't state that the methods don't accept new hyperparameters.
"Add correlation cost layer from FlowNetThis adds a new operation to compute the correlation layer used in
FlowNet: Learning Optical Flow with Convolutional Networks by
Dosovitskiy et al."
"Add support for unknown batch sizes in group_norm.Previously, the group_norm layer did not work when the batch size was not known (as is the case when using e.g. tf.data.Dataset.batch)."
Support empty inputs in some maxpool kernels. (#21338)This only partially remedies #21338. A more serious issue is that such bugs cannot be detected by the unit test framework and the cudaError will leak into other ops.
Fix nadam optimizerResolves issues #15035 and #13980.
add throttle_step to Evalspec and  support estimator evaluation trigger with throttle_steptry to implement throttle_step settings discussed in #17650ｼ蛍sing throttle_step to trigger evaluation can be more robust to different GPU load縲
Intel MKL DNN: Adding support of fusing Pad and Conv2D Operators in MKL DNNIdea of fusing Pad and Conv2d:
"Update cwise_op_mul_2.ccBuilding for tf 1.9 for iOS and running custom network. Building with ANDROID_TYPES_FULL.
Solve issue:
No OpKernel was registered to support Op 'Mul' with these attrs. Registered devices: [CPU], Registered kernels:
device='CPU'; T in [DT_INT32]"
"Support constant value tensor shape for tf.constantThis fix tries to address the issue raised in #21267 where
it was not possible to provide a tensor to the shape argument
of tf.constant:"
"Add WeightNorm wrapper layerAdds a wrapper for Weight Normalization as requested in #14070 & #10125 .
Contains optional data dependent initialization for eager execution, and works on both keras.layers and tf.layers"
Added NTM implementationThis PR adds a Neural Turing Machine implementation as described in https://arxiv.org/abs/1807.08518 to the contrib library.
"removed inline functionif one includes the header and does not link with coding.cc gets unresolved error. not the case when you just include extern functions and do not use them, more over this function does not seem to save so much being inlined."
Added dim parameter to tf.losses.softmax_cross_entropyAdded dim parameter to losses.softmax_cross_entropy. Fixes #20866
Add command line option to specify the version of the tensorflow wheelThere is a command line option to build_pip_package.sh (with support in setup.py) for setting the name of the pip package which is created.  This is so that Tensorflow can be called things like tensorflow_gpu.
"Removed allowBackup, label and supportsRtlThis should not be present in a library."
Multiplicative LSTM CellAdded Multiplicative LSTM cell based on:https://arxiv.org/pdf/1609.07959.pdf
Add C++ gradient for CastTested for flakes with:
"Use GPU_PLATFORM_NAME macro to define GPU platform nameInstead of hard-coded ""CUDA"", use a macro which could be set at configure-time
or compile-time."
Switching to Eigen version with HIP support.This PR does the following things.
"[XLA] HloEvaluator - use TF_ASSIGN_OR_RETURN for HandleCall, HandleFusion and HandleConditionalCurrently HandleCall in the HloEvaluator uses ConsumeValueOrDie to get the
value instead of TF_ASSIGN_OR_RETURN. This means that the compiler will fail
when running the HLO ConstantFolding pass on a graph with a call instruction
which has an unhandled instruction in its subcompuation."
[tf.keras] Add custom scalar tensorboard summary for metricsIt can be very useful to view training and validation loss in a single chart inside tensorboard.
[XLA:GPU] add XLA_AMDGPU deviceAdd XLA_AMDGPU device to XLA
Fix support for renorm with float16This PR fixes a bug when using BatchNormalization with renorm set and the input tensor x data type is float16 or bfloat16.
Feature requested by issue 18354: No gradient defined for operation DepthwiseConv2dNativeBackpropFilterFeature requested by issue 18354: No gradient defined for operation DepthwiseConv2dNativeBackpropFilter
Fix invalid check of ShapeForPlaceholderNo description provided.
"Add support for Cyclic Learning RateAdded support for cyclic learning rate as described in: https://arxiv.org/pdf/1506.01186.pdf
Also added functional tests for each policy."
sys/sendfile.h is actually only defined for Linux.For other systems (OS X/FreeBSD) header is missing.
Add OpKernel of QuantizedReluXThis fix tries to address the issue raised in #20514 where no OpKernel was registered to support Op QuantizedReluX.
Input node name correctionCorrect for the error
fix a minor comment issue in commit 034236aa27ae5e40a6fe619d43c94fb01…f529601
bugfix(issue 20043): Parameter save_relative_paths of tf.train.Saver do not work non-local filesystem.Fix the bug on issue 20043:  parameter save_relative_paths of tf.train.Saver do not work non-local filesystem.
"Alternative fix for tf.contrib.ffmpeg.decode_video errorAn alternative fix to #20366 that might be slightly simpler. Basically only parse the width x height information from the ffmpeg output, and rely on the rawvideo size to calculate the number of frames. This might be a little more robust to ffmpeg output changes."
"Add int16 support for Pack on GPUThis fix tries to add int16 support for Pack on GPU, so that the issue raised in #20370 could be addressed."
"New function recursive_fill in image_opsImplementation of a very common post-processing operation in image processing in a efficient manner embedded in a tensorflow graph. This function will iteratively fill the ""holes"" of a binary 2D or 3D image until it cannot fill more. It is also possible to set the sensitivity of the method by establishing a threhsold and a maximum number of iterations. For instance, let the threshold be 8 (or actually any number below or equal to 8)"
TFLite: add NNAPI delegation for RESIZE_BILINEARGentle ping @aselle
Add label smoothing feature in sampled softmaxNo description provided.
"Use CUDA Runtime API instead of Driver API to allow interception using LD_PRELOADThis pull request is to allow low-level MPI libraries like MVAPICH2-GDR that use LD_PRELOAD style interception of CUDA calls to optimize performance. Currently, a CUDA_INVALID_CONTEXT error appears if cuMemAlloc is used. The change to cudaMalloc will allow interception. There are no known side effects of this patch."
Fix Android BuildNo description provided.
[TF Mobile] Adding codes to print Logcat log of statString for analizing the perf…ormance per layers
":bug: since Scaffold has no attribute of global_step, drop this confu…drop confused comment about 窶徃lobal_step窶 field"
Add Apache Parquet support for TensorFlow DatasetApache Parquet is a widely used columnar storage format available in the Hadoop ecosystem.
Make CMake on TensorFlow Incrementally Compile on Windows (#14194)No description provided.
Fixing ELU and SELU GradGradChanging EluGradGrad and SeluGradGrad to match ReluGradGrad
optimize_for_inference script removes dropoutsThis PR is addressing feature request:
"Use Configuration instead of CMAKE_BUILD_TYPE in MSVCThis uses the Configuration passed to MSBuild instead of CMAKE_BUILD_TYPE. You can actually omit CMAKE_BUILD_TYPE during configuration, and the Configuration selected during build is used."
Cleanup usage of the protobuf workspace.Looks like @benoitsteiner added the @com_google_protobuf_cc alias in 4e18625 to support an external repository. I'll let him review.
"Make TensorFlow Lite library for Android targetYou can compile Tensorflow Lite library using Makefile.
It is possible to compile both static and shared library
excluding benchmark tools."
Update download-models.gradleNo description provided.
"[tflite] Extract NEON check function for aarch64For aarch64, we do not have to include cpu-features.h."
"Add int8 support to div operationsI ran into issues when performing division operations using tf.int8 datatypes, getting errors like:"
Swtich to use axis instead of squeeze_dims in tf.squeezeThis PR is to change squeeze_dims to axis in tf.squeeze since the former one is deprecated now.
"[TF mobile] change toolchain to clangChange toolchain to clang, GCC Deprecated on Android ndkhttps://android.googlesource.com/platform/ndk/+/master/docs/Roadmap.md"
Relax type of tf.constant.value to sequenceNo description provided.
"Make TensorFlow Lite library for Android targetYou can compile Tensorflow Lite library using Makefile.
It is possible to compile both static and shared library
including benchmark tools."
Dynamically change image classifier.This is an UI improvement feature.
[INTEL MKL] AVX512 Fix for Eigen Vectorized sqrt/rsqrt FunctionThis PR has two modifications:
Refactor constant global variables as separate file in factorizationThis PR is to refactor and add a common constants.py for global commonly used variables in contrib.factorization.
Fix beam term incorrect usage in BeamSearchDecoderThis PR is to fix #17839.
Added avro record dataset and avro record parse** Added test cases
Add zero padding option to `tf.image.extract_glimpse`There has been several feature request in #16663 and #2134 (comment) asking for zero padding option to tf.image.extract_glimpse.
MKL: Updating Performance Guide DocumentationsNo description provided.
grad of variable size extract_image_patchesFixes #11651
"[WIP] Clean shell scriptsHi,"
"add _div_metric, sensitivity, specificitytf.metrics.sensitivity is identical to tf.metrics.recall. These two metrics accept labels and predictions as parameters, cast predictions to boolean, and then do the computation according to formula:
sensitivity = true_positive / (true_positive + false_negative)
specificity = true_negative / (true_negative + false_positive)"
Implementation of Unpooling operatorAs discussed in #2169
Implement the bilinear initializer opBilinear interpolation is commonly used to initialize upsampling layers like conv2d_transpose. This PR implements a CPU op to initialize the filters.
"Use relative and correct paths to get flatc and schema file.Current visualize.py file uses wrong path for schema file.  In addition, it assume current directory is the top directory of tensorflow, which is inflexible."
"Add stream selection support for `tf.contrib.ffmpeg.decode_video`This fix is a follow up to #16101. In #16101, stream selection support has been added for tf.contrib.ffmpeg.decode_audio.
However, it was still not possible to selectively decode a perticular stream with tf.contrib.ffmpeg.decode_vidio."
"CMake adopt to latest eager runtime and reusable shared library in windows environmentDue to some error in CLA checking #16394, a new pull request is made"
make applications using TFLite work on ARM64 Linux (non-Android) platformsWhen build TF Lite related stuff such as lable_image for tflite on ARMv64 non-Android environment (I am running Debian on an internal development board). I saw something like:
"Add broadcasting support for `tf.where`Adds where_v2 (which will be where in TF 2.0), which has numpy's broadcasting semantics."
Fix LSTM Layer Normalization implementation to match original paperThe Layer Norm paper (https://arxiv.org/abs/1607.06450) applies layer norm to LSTMs by separately normalizing the linear transformation of the inputs and the linear transformation of the recurrent cell state. See equation (20) in the Supplementary Material (page 13).
"Add `colors` support for `tf.image.draw_bounding_boxes`This fix tries to address the issue raised in #15692 where it was not possible to specify the colors for boxes in tf.image.draw_bounding_boxes. Instead, a predefined fixed color table was used to cycle through colors."
"[iOS/tflite] Add ability to build a specific archAdd a flag to build only the arch you want. By default build all.
Also check number of CPUs when invoking the make commands -j"
"Add complex64 and complex128 support for `tf.angle` on GPUIn PR #10643, complex64 and complex128 support have been added for tf.angle on CPU. However, because of the compiling errors, the complex support on GPU is not enabled yet."
"estimator: allow export_outputs to be a TensorWhen someone wants to use tf.estimator.Estimator.export_savedmodel to save the predictions of a model and tf.contrib.predictor.from_saved_model to load the prediction function, it is currently necessary to define boilerplate code. This PR reduces the amount of code."
"improve tf.saved_model.loader.load exceptionIf the tags argument to tf.saved_model.loader.load is wrong, the exception does not help.
First: It says use saved_model_cli, but it take a while to figure out that this is a executable and not a python function.
Second: The required information (allowed tags) is known inside tf.saved_model.loader.load and now it prints this error"
"min_quantize lib and command linea quantize/obfuscate lib
1.without Quantize/DeQuantize ops
2.could obfuscate node names
3.use KMeans instead of simple average slice"
"Add complex dtypes support for `tf.squared_difference`This fix tries to address the issue raised in #14932 where complex dtypes are not supported for tf.squared_difference, which is different from the doc string in math_ops.cc (see BINARY_FEWER)."
Fix issue in tf.nn.softmax where negative dims could only be -1This fix tries to address the issue raised in #14916 where negative dims could only be -1 in tf.nn.softmax.
"Fix crash on closing the app when classifier failed to initializeWhen testing on an API 21 emulator, the classifier fails to initialize.E/TfLiteCameraDemo: Failed to initialize an image classifier."
Implements LayerNormBasicGRUCellLayerNormBasicGRUCell add layer normalization to basic GRU unit.
"Fix the gradient computation of dynamic stitch.Currently the gradient of tf.dynamic_stitch is not correct for duplicated indices. This is
issue #7397. @drasmuss submitted a pull request for this issue, but it was ultimately not merged
due to a performance drop."
"Fixes the long sentences and categorisation in README.mdThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
PullNo description provided.
"Fix incorrect link to version compatibilityWhile looking into tensorflow/java/README.md,
the API stability guarantees retured 404. This
fix made the changeversion_semantics -> version_compat to fix the issue."
"fix tf.Saver save and restore bug under distributed setting(with ps, master and worker)This pull request allow using more than one PS in distributed training, saving and restore models without using any shared file stream. The following issues will be fixed, although it is closed:tensorflow/tensor2tensor#394#6374"
"fix tf.Saver save and restore bug under distributed setting(with ps, master and worker)#6374tensorflow/tensor2tensor#394"
changed the download version of protobuf to 3.6.0Fixed issue #22536
"Unicode error while testingError for inverted question mark : UnicodeEncodeError: 'ascii' codec can't encode character u'\xbf' in position 8: ordinal not in range(128)
Error for not adding u' ' : TypeError: normalize() argument 2 must be unicode, not str"
Patch 1No description provided.
Changed the Makefile version of protobuf to 3.6.0Fixed #22536
Upgrade to v1.11.0No description provided.
Fix broken pathNo description provided.
Update c_api_experimental.hMake it more interesting.
"Support MKL quantized pooling opsThis PR is to support MKL DNN version of quantized pooling operators, include MKL DNN average pooling and max pooling."
"[INTEL MKL] Support MKL quantized concat opThis PR is to support MKL DNN based quantized concat operator. MKL DNN only supports the case that all input tensors have the same quantization range, all other cases will fall back to Eigen implementation."
Fix relative path to reflect new (non-contrib) locationhttps://www.tensorflow.org/lite/rpi
"Fix the output issue in MaxPool3DGradThis PR fixes #23511 .MaxPool3DGrad requires output indices but here says no, so op.outputs for _MaxPool3DGrad will be None, which will cause TypeError: 'NoneType' object has no attribute '__getitem__' as reported by #23511."
"[XLA] Add proto representation of U16/S16 literalsU16/S16 were already handled in most methods of Literal, except
for the serialization and deserialization of protos and a few
other places. Add those, to make allocating U16 literals work
via xrt."
Explicitly import tools/bazel.rcTo fix build with Bazel 0.19.0 or later and it won't break build with old version of BazelFixes #23398
"RendezvousMgr & CancellationMgr are already aborted, shouldn't send R…PC call any more"
"Fix AWS, GCP, HDFS, Kafka and Ignite disable config optionsThe logic implemented in commit 3437098 sets no_<package>_support=true if the no<package> config option is provided, but checks for a false value (in the tensorflow/BUILD file) to disable the package."
Removed no longer supported call `in_eager_execution()`changes to model_analyser.analyse(...):
"Add absl_int128 to abseil librariesThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
[INTEL MKL] Fix build error for //tensorflow/core:platform_port unit test.This PR fixes the build error (shown below) that occurs when running //tensorflow/core:platform_port unit test.
Update year to 2018Update year to 2018 on some files
"Add image-pipe ops for zero-copy image generationAn ops in place of tf.keras.preprocessing.ImageDataGenerator with very high-performance data generation performance loading from on-disk original image directories to GPU directly with ZeroCopy, which could achieve ~96% performance of synthetic dataset training for modern models like Resnet50/Inception3/.."
Quick fix for 462a79b that breaks GDR.Please see #22081 (comment) for the context.
Pretty print the dtype in error message with eagerThis fix is related to #23452 where the dtype in the error message is a non-descriptive integer:
"[TFLite] Fix dependencies script after migrationAfter migration from contrib, the download_dependencies.sh script needs to go one less directory up."
"Update protobuf for Python 3.7 compatUpdating setup.py as requested in #20517 (comment) already uses 3.6.1, see commit 76c4853"
"1.12.0-final cherry-pick request: Fix a bug in tpu.py and xla.py that while creating an identity node…for control input edges under rewrite context, the parent control flow context is lost."
"Make tf.case work in eager mode with dict inputstf.case does not work in eager mode if the caller passes an unordered dictionary of predicate function pairs. In particular, the example code in the API documentation for tf.case doesn't run in eager mode:"
Update version to 1.12.0 finalNo description provided.
1.12.0-final cherry-pick request: AsyncCheckpoints: Add missing 'self' arg to write_graph_fn.PiperOrigin-RevId: 219365527
[nGraph] Updated to nGraph version v0.9.1 and ngraph-tf version v0.7.0This pull request upgrades nGraph to the latest stable releases.
"Should use '_train_distribution' because Estimator doesn't have attribute '_distribution'When I use tf.contrib.distribute.MirroredStrategy and training_hooks for one Estimator, like:"
"[INTEL MKL] clean up code in mkl_concat_ops.cc fileRemove the code block under #ifdef INTEL_MKL_ML_ONLY condition, because INTEL_MKL_ML_ONLY was defeatured."
"add dynamic shape support to dense_image_warpHi, dear tensorflower.
I made a pull request to add dynamic shape input support to
tf.contrib.image.dense_image_warp.
Please review it, or maybe accept it.
I have checked the code style, and tested the code.
Thanks!
PS: This is the corresponding issue #23325"
Avoid index out of range in traceable_stackFix for rstudio/tensorflow#272 which blocks use of devices in TensorFlow 1.11.
"[Intel MKL] Fix docker ffmpeg issueComment in the ""apt-get install"" broke the command stream: https://github.com/NervanaSystems/private-tensorflow/blob/master/tensorflow/tools/ci_build/install/install_deb_packages.sh#L47"
fixed blankspacesfixed some spaces
WIP: Fix max_pool_with_argmax behavior on GPUThe PR is still not done yet.
Update .gitignore for tflite downloads directory.The tflite downloads directory is changed to tensorflow/contrib/lite/tools/make/downloads.
[Intel MKL] Fixes the direct_session_with_tracking_alloc_test failure in public CI builds.This fixes the //tensorflow/core:common_runtime_direct_session_with_tracking_alloc_test failure in the public MKL CI: https://tensorflow-ci.intel.com/job/tensorflow-mkl-linux-cpu/2944/console. @penpornk would you mind taking a look?
Add a line break when logging the graph definitionThis PR adds a line break to make the log of the graph proto easier to read.
Just some tweaks in the readme filesNo description provided.
"Delete legacy Input classFor some strange reasons, the legacy Input class, which has been replaced by Operand a long time ago, reappeared in the main repository."
1.12.0-rc2 cherry-pick request: Fixed the issue that each invocation of model.fit/evaluate/predict… modifies the graph.
"1.12.0-rc2 cherry-pick request: Upgrade setuptools before clean pip install pulls in absl-py.absl-py recently added a version dependency to the package, causing
install to fail on the old setuptools"
1.12.0-rc2 cherry-pick request: Allow empty GCS tokens to be cached.PiperOrigin-RevId: 217159671
Improve shape function of tf.sparse_reduce_sumThis fix tries to address the issue raised in #23114 where the shape function of tf.sparse_reduce_sum did not infer the shape even if the input shape were known. This fix improves the shape function.
Update documentation regarding DockerfilesAs per my note in #23170.
"[XLA:GPU/CuDNN] Add support for 1x1 window reversalCuDNN supports both convolution (CUDNN_CONVOLUTION) and cross correlation
(CUDNN_CROSS_CORRELATION). However, only the latter was hooked up, causing"
1.12.0-rc2 cherry-pick request: Fp16 LSTMBlocKCell and LSTMBlockFusedCellPiperOrigin-RevId: 216632480
1.12.0-rc2 cherry-pick request: Upgrade setuptools before installing absl-py.PiperOrigin-RevId: 218471042
1.12.0-rc2 cherry-pick request: Upgrade setuptools before installing absl-py in remaining scripts.PiperOrigin-RevId: 218730741
1.12.0-rc2 cherry-pick request: Explicitly quote every command piece.PiperOrigin-RevId: 218399942
1.12.0-rc2 cherry-pick request: Don't set TF_PER_DEVICE_MEMORY_LIMIT_MB as a --test_env…if it isn't specified.
"[Features] Enable Variable Partitioning in ParameterServerStrategy graph modeHi @yuefengz ,"
"[Features]mixed precision support enhancement using decoratorThis feature realize the automatic/constant loss scaling algorithm in Backprop, which can help preserve small gradient magnitudes ( ref to  https://docs.nvidia.com/deeplearning/sdk/mixed-precision-training/index.html)
Mixed precision with loss scaling is already support by tf.contrib.mixed_precision.LossScaleOptimizer,  with the following usage:"
pullNo description provided.
1.12.0-rc2 cherry-pick request: Fix string comparison in `configured`PiperOrigin-RevId: 218607372
1.12.0-rc2 cherry-pick request: Various XLA scatter improvements.There are various piper origin CLs cherrypicked into this PR:
Surface the number of threads used by ctx->runner() for ParallelMapIteratorBaseThis PR surfaces the number of threads used by ctx->runner() for ParallelMapIteratorBase::AddTunableParameter().
"1.12.0-rc2 cherry-pick request: Update tensorboard dependency to 1.12.xAlso updated tb-nightly to +1 minor version, 1.13.x."
1.12.0-rc2 cherry-pick request: Declare that stateless random ops are not differentiable in C++ code.PiperOrigin-RevId: 215935319
TFTRT: Add inference examples for classificationThis example can be used to check for accuracy and performance of TF-TRT on image classification models.
"Replacing generator activation from relu to leaky_relu to avoid sparse gradientsThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
Switch from Deprecated to Current Docker Images on Docker HubThis PR is intended as follow-up to the proposal in Issue #23170 to host Tensorflow's currently developed Dockerfile images on Docker Hub.
Allows cond_v2 to return tensors in nested output structures. Resolved merge conflicts and squashed into one commit.@skye Had to reopen the pull request since it got closed for some reason while I was squashing commits
Prevent Empty Checkpointable Data Structure RestoresReferes to Issue #23192
"[INTEL MKL] Register matmul kernel to use Eigen based implementation for int64Recently, int64 has been enabled for matmul in TensorFlow (2d0c812). Since MKL does not support int64 for matmul, I have registered the matmul kernel to fallback to the default Eigen based implementation in such cases."
1.12.0-rc2 cherry-pick request: Removing tf.train.confusion_matrix endpoint.tf.train.confusion_matrix was added in 1.12.0rc0. Removal should be cherrypicked into 1.12.0rc2 so that compatibility breakage is only between rc's.
"Fix build on macOSis needed before <Python.h> to avoid issues with toupper.
Also, switch to using unsigned long long for trt_allocator_test.cc."
PullNo description provided.
1.12.0-rc2 cherry-pick request: Support fp16 types in ScatterNd GPU versionPiperOrigin-RevId: 217749577
1.12.0-rc2 cherry-pick request: Async checkpointing: Save the graph in a background thread.PiperOrigin-RevId: 217747382
1.12.0-rc2 cherry-pick request: Fix triggering of asynchronous checkpoints.PiperOrigin-RevId: 217570792
[Bug fix] Cancelling adding suffix to assign function from outside.This is a small bug fix about naming assign functions. It is unnecessary to adding suffix to name outside because the naming conflict will be automatically handled within the framework when declaring an op.
1.12.0-rc2 cherry-pick request: Check for the presence of a Worker machine when reassigning hooks in …distributed training jobs.
Update versionUpdate TF 1.12 version to 1.12-rc2
Update relnotes with Ignite informationNo description provided.
"[XLA] AlgebraicSimplifier pass - handle And and OrAdd handling of logical And and Or, where:"
"fix keras relu layer bug (wrong arguments type)In tf.keras.layers.ReLU function, the config of arguments(max_value, negative_slope, threshold) become dict but float is the need while tf.keras.models.load_model or tf.contrib.lite.TocoConverter.from_keras_model_file"
"fix keras ReLU layer bugIn tf.keras.layers.ReLU function, the config of arguments(max_value, negative_slope, threshold) become dict but float is the need while tf.keras.models.load_model or tf.contrib.lite.TocoConverter.from_keras_model_file"
add interpreter debug funcNo description provided.
[aborted] Clean up binary element-wise assertionsEdit: Accidentally messed up my branch. Recreating my changes in a new branch and resubmitting this PR.
"Remove TF_NCCL_VERSION from Dockerfile.gpu.ppc64leNow NCCL2 is available in open source and TensorFlow is building
with it as the default there is no need to force the version to 1"
1.12.0-rc2 cherry-pick request: Include .inc files for absl headersNo description provided.
"Fix the issues in API compatibility testWhen running $ bazel-bin/tensorflow/tools/api/tests/api_compatibility_test --update_goldens True, the compatibility test failed due to some files in the estimator module as below. This PR tries to fix this issue."
Enhance CUDA detection.This proposal enhance cmake CUDA related dependency on all cmake compatible platforms.
"Syntax and bug fix for Slurm cluster resolver on issues raised by CI test@frankchn This fixes some bugs and issues rasied by the Ubuntu Python3 PIP CI test #22423 , thanks!"
"Adding determiner to increase clarityThe current phrasing leaves it ambiguous whether the third party is not involved in the conflict at hand, or conflicts in general."
[Experiment] Reformat issue template. <DO NOT MERGE>No description provided.
[Intel MKL] Update README.md links to point to 1.11 whlsNo description provided.
"Completed DCGAN tutorialI have completed the DCGAN tutorial with detailed explanations, a diagram and learning resources. Please review and approve the pull request."
Update version information in preparation for 1.12.0-rc1No description provided.
Add ability to start TensorFlow server from Java APIStandalone Client Mode allows to easily train model utilizing distributed resources. Only one thing we need to do that is to start TensorFlow server on every cluster node we'd like to participate in training. Because of that it's very important to have an ability to start TensorFlow server in different ways and from any environment. I prepared this request as result of discussion on Development List.
"Fix multiprocess support in data_utils.py Enqueuer classesThis was originally to fix #22804, but after some googling it seems multi-process support has been an issue for awhile.  See also:"
Removes reference to TFProf C++ APIAs mentioned in #16821
Make api_compatibility_test pass in Python 3I was (perhaps masochistically) curious what it would take.
"Update the documentation for tf.fftThis fix is related to #17332 (comment). While complex128 has been added in tf, the documentation still says:"
[tf.keras] Remove ominous load warning when using .hdf5 extensionDescription: See issue - #22947
"GDR contrib- Suballocators fixesThis patch includes two fixes, all in the gdr contribution
The 1st one changes the ordering of the calls to gdr memory manager initialization and grpc initialization."
"[XLA] Sink constants into the conditional computation in while loopsModify the WhileLoopConstantSinking  pass so that it sinks the constants into the while loop conditional as well. From my (limited) experiments, this helps the WhileLoopAnalysis::ComputeWhileLoopTripCount function in being able to evaluate and get the trip count (at least for simple while loops created by dynamic_rnns where the original conditional is anded with the max_iterations) ."
Revert \Move bazel.rc to workspace root to support bazel-0.18.0\This reverts commit a74a321.
"Fix MacOSX build failureWhile building tensorflow on MaxOSX
(Apple LLVM version 10.0.0 (clang-1000.11.45.2), Python 2.7.10)
the following build failure surfaced:"
improve Unified Memory performancememory oversubscription
Move stateless ops out of contribPhase two!
r1.12-rc1 cherry-pick request: Explicitly set jdk8 in ci_parameterized_build.shPiperOrigin-RevId: 216946217
Merge branch r1.12 into master.Merging branch r1.12 into master after 1.12.0rc0 release.
allows cond_v2 to return output tensors in nested structuresNo description provided.
Adding our policy on creating new GitHub IssuesNo description provided.
"Update README.mdProvided a link of docker document to start the docker instance.
Added command to access the Notebook on Windows."
[INTEL MKL] Clean up MKL_ML code for Conv backwardClean up Conv backward ops by removing legacy MKL-ML code.
[Features] Support more types for Partitionedvariable assginment methodThis pull request enhances PartitionedVariable assignment function.  List and PartitionedVariable types is supported for right value. Any comments are welcome.
remove support for TFOptimizer in optimizer.getFix #22780.
"r1.12-rc1 cherry-pick request: Update XlaSort to match the underlying HLO.PiperOrigin-RevId: 215745043
PiperOrigin-RevId: 215917470"
"r1.12-rc1 cherry-pick request: Make sure that all operands and outputs of Sort have the same layout.PiperOrigin-RevId: 215324035
PiperOrigin-RevId: 215515611
PiperOrigin-RevId: 216726796"
r1.12-rc1 cherry-pick request: Changes NMS XLA implementation to match that of CPU.PiperOrigin-RevId: 216796208
r1.12-rc1 cherry-pick request: TPUEstimator: Initialize dataset iterators in parallel.PiperOrigin-RevId: 216796462
r1.12-rc1 cherry-pick request: Revert from 'global_steps/sec' back to 'global_step/sec'PiperOrigin-RevId: 216598193
Allows for new tf.cond to deal with functions that return nested outputs tensorsNo description provided.
r1.12-rc1 cherry-pick request: Query whether to enable XLA support on MacOS with no as a default[This originated as a github PR]
r1.12-rc1 cherry-pick request: Fix bug in MklSlice op when allocating output tensor.Intel MKL bug fix cherry-pick. CopyFrom failures in MklToTf op and regression can happen (in the TF-MKL build) if not fixed.
Create GitHub_Issues_Policy.mdNo description provided.
_create_c_op: copy over device placementFixes the following problem
"1.12-rc1 cherry-pick request: Fix use-of-uninitialized-value bug for bfloat16 in MatrixBandPart.MatrixBandPart ends up calling bfloat16() to create a zero value, but the implementation of bfloat16::bfloat16() returned an uninitialized value, not zero."
1.12-rc1 cherry-pick request: Fix Keras support in Python 3.PiperOrigin-RevId: 216770808
[WZ] tmp dir for intermediate NVCC source filesNo description provided.
"1.12-rc1 cherry-pick request: TPUMirroredVariable device and init fixes.Add 'device' property to TPUMirroredVariable, so tf.train.init_from_checkpoint can be supported."
"remove .bazelrc from git treeThis PR removes .bazelrc from the git tree. Since it is modified during the configure, in essence it is a generated file and should not have been placed into the tree in the first place. Instead this PR adds a new file bazel_defaults and uses it to generate .bazelrc file. Also certain flags are such as -c opt and some environment variables that are not necessarily valid under all circumstances are disabled with this PR. Since these are mostly platform specific or override user command-line flags, these should be added with configuration prefixes rather than globally.
With this PR .bazelrc is created from template file and removed from git tree."
Update issue templatesNo description provided.
r1.12-rc1 cherry-pick request: Update to new RBE toolchain with Clang 8.0.0 r340178.PiperOrigin-RevId: 216590129
"Fix typo in estimator with distribution strategy using hooksMove #22867 against master branch
Fix typo while extracting estimator training hooks using distribution strategy.
CC @yuefengz"
"Make nccl2 bazel configuration platform independentThe new NCCL2 bzl build files that build from git source are coded to only work on a single platform (X86_64).
This PR  uses a genrule to check the system architecture and uses that when continuing on to the nvlinker."
1.12-rc1 cherry-pick request: Add mode_override to the TPU embedding enqueue ops.This allows the mode to be overridden at runtime allowing dynamic switching between inference and training modes. Not fully implemented yet.
"1.12-rc1 cherry-pick request: Changed Adam algorithm variant formula ...... from sqrt(max(v, epsilon2)) to sqrt(v + epsilon2) and changed flag name accordingly."
"1.12-rc1 cherry-pick request: Revert constant folding changesTurns out that enabling constant folding for int32 will cause following ops to be constant folded as well, which might generate large output tensors (e.g. Fill/Tile/Pad). It has caused problem for both TPU and GPU folks."
"TF-TRT support conversion for Transpose, ReshapeSupport conversion for Reshape and Transpose ops."
[Intel MKL] Add scripts for creating allreduce based Tensorflow k8s deploymentCreate allreduce based distributed Tensorflow k8s deployment for testing
"Bluepill robot testsThis is a proposed implementation of tests using Robot. If this is accepted, writing more tests like that should be fairly simple."
"Fix typo in estimator with distribution strategy using hooksFix typo while extracting estimator training hooks using distribution strategy.
CC @yuefengz"
Combined the training process and the creation of frozen graphNo description provided.
"Fixed extract_volume_patches doc formatting issueFixed broken formatting.
Pinging @martinwicke in case changing the documentation requires another API review"
"Ensure all bazel options are incorporated during Intel mkl builds.Prior to this fix, mkl devel based container builds would only pickup bazel options defined in parameterized_docker_build.sh and ignore anything produced from the top-level configure.py script.  As a result default options like AWS/GCP and HDFS support would end up not being included."
"Add validation to axis for tf.nn.softmaxThis fix tries to address the issue raised in #22793 where
an invalid axis (outside of [-dim, dim)) still returns
value. This behavior is different from most other ops in
tf like tf.argmax/etc."
update readmeNo description provided.
Tf xla unit testChanges include
"Added bullet points so the values look clearerCurrently it's these items are all in one line in https://www.tensorflow.org/api_docs/python/tf/losses/Reduction, which is hard to visualize."
"[XLA] Query whether to enable XLA support on MacOS with no as a defaultThis relates to https://groups.google.com/forum/#!topic/xla-dev/ddrQKPB9gbI
With the current configure script a MacOS user is never prompted whether they want XLA support, where as the intended behaviour is XLA support should be on by default for Linux and off for MacOS."
[INTEL MKL] Deleting  MKL ML only code in a few ops.No description provided.
"improve contrib/kafka/python/kernel_tests/kafka_test.shThe additional "" for echo messages is probably not necessary. Is that because of a different shell?"
"[INTEL MKL] Fix bug in MklSlice op when allocating output tensor.Wrongly ""+1"" for output shape, that will cause CopyFrom failure in MklToTf op because of tensor size and shape mismatch."
"1.12-rc0 cherry-pick request: Reduce tolerances for rmsprop_test float16, to fix OSS builds.PiperOrigin-RevId: 216200439"
pull latest codepull code
[Documentation] Format example list.Signed-off-by: Marcela Morales Quispe marcela.morales.quispe@gmail.com
[Documentation] Format code block.Signed-off-by: Marcela Morales Quispe marcela.morales.quispe@gmail.com
"fix non_max_suppression_with_overlaps() function callWe found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.
In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed."
1.12-rc0 cherry-pick request: Mark tensorflow/contrib/tpu:datasets_test flakyIt fails 1/1000 runs in OSS builds.
systemlibs: unbundle icuThis uses the same TF_SYSTEM_LIBS method as all the other libs
Add alternate clock_gettime() implementation for macOS < 10.12clock_gettime is not available in macOS SDK < 10.12
"Bug fix: tf.assert_* prints the entire input by default in eager modeWith the exception of assert_equal, all the ops that invoke tf.Assert will print out their input tensors in their entirety by default when running in eager mode. This behavior is different from the behavior when running in graph mode, and it's also somewhat dangerous. For example,"
1.12-rc1 cherry-pick request: Support Keras TPU model to load saved weights and predict.PiperOrigin-RevId: 215920993
"1.12-rc0 cherry-pick request: Fix bug in nonpip builds in ci_parameterized_build.shThe extra spaces were confusing bash's string-line-continuation from
the backslash \ on the previous line."
Clean up the code under INTEL_MKL_ML_ONLYThe code under INTEL_MKL_ML_ONLY is deprecated. This PR is to remove it.
Rel notes 1 12No description provided.
Update state_ops.pyfix a typo in the documentation of function batch_scatter_update.
1.12-rc0 cherry-pick request: Workaround build errors in Android NDK r14b.PiperOrigin-RevId: 215950376
1.12-rc0 cherry-pick request: [tf.data] Fix noisy warning.PiperOrigin-RevId: 215607171
"1.12-rc0 cherry-pick request: [tf.data] Fix bug in `tf.data.experimental.unbatch()`.Previously, if the rank of the input to this transformation was
statically unknown, we would erroneously report that the output is a
scalar, and violate downstream shape integrity checks. Instead, in
that case the output shape should be unknown."
1.12-rc0 cherry-pick request: Do 2 warmup runs in assert_no_new_pyobjects_executing_eagerly.PiperOrigin-RevId: 215944829
remove some blank lines in README.mdremove the ending blank lines in readme.md
"[Performance Optimization] Improve the performance of tf.clip_by_norm when the input is IndexedSlicesCurrently, the tf.clip_by_norm will convert the input to dense tensor and do the clipping. However, the gradients may be IndexedSlices type when encounters with tf.nn.embedding_lookup in forward pass. It may both consume large memory and make computation performance worse."
1.12-rc0 cherry-pick request: Disable tensorrt:unary_test in OSS since it crashes with SEGV.PiperOrigin-RevId: 215814732
1.12-rc0 cherry-pick request: Add xla library into contrib_pyPiperOrigin-RevId: 215774158
[INTEL MKL] Update default TF_BUILD_VERSION to r1.11 and add packagesSigned-off-by: Cong Xu cong.xu@intel.com
Take ALL TESTS PASSED in ticks for good formattingNo description provided.
1.12-rc0 cherry-pick request: Add TF_BUILD_TEST_TIMEOUT to ci_parameterized_build.shPiperOrigin-RevId: 215793932
[tf.data] Fix noisy warning.PiperOrigin-RevId: 215607171
"Add a separator between shape and dtype in cache key encoding.It was possible that we could mix shapes and types (T111 could mean a tensor of dtype 1 and shape (1, 1) or a tensor of dtype 11 and shape (1))."
"Fixed the paper reference for AttentionCellWrapper.Fixed the paper reference for AttentionCellWrapper to a more appropriate one. Because the original reference is wrong, there are various options  (e.g. attn_length, attn_size, attn_vec_size, etc) are not clearly defined, which always brings some confusion.
In fact, it should be AttentionWrapper corresponding to https://arxiv.org/abs/1409.0473 and AttentionCellWrapper corresponding to https://arxiv.org/abs/1601.06733."
MPI libraries maybe located under lib64 or lib32Searching only under lib and not also lib64 or lib32 can break MPI detection on various systems. This patch also searches under lib64 and lib32.
"Fix  error dimensions pointer in add_vector_int32 operand_type and function call in add_squeeze_paramsSince .dimensions in operand_type is data pointer of dimensions, it should equal to pointer values instead of &num_values. Num_values  is the length of the vector. This bug will lead segmentation fault when NNAPI calIs squeeze operation."
Include .inc files for absl headersCurrent setup.py collects only header files from absl package. However header files include .inc files which were not installed into include directory. This PR adds *.inc files into header list.
1.12-rc0 cherry-pick request: Pin wheel=0.31.1 in install_auditwheel.sh to work around issuepypa/auditwheel#102
"Static cast size_t to int in arguments 1,2 to forward_input_or_allocate_output()Static cast size_t to int in arguments 1,2 to forward_input_or_allocate_output()"
fix tf.batch_gather error when feeding int64 indicesfix #22638
1.12-rc0 cherry-pick request: Increase error-epsilon for ProfilingTest::ProfilesAreCollected.PiperOrigin-RevId: 215654327
"Fixed false error triggering in ps distribution strategy for local runThe ParameterServerStrategy throws an error from _verify_destinations_not_different_worker when applied locally, where only one worker is available. The cause seems to be the line"
1.12-0 cherry-pick request: Fix MacOS builds.PiperOrigin-RevId: 215653797
1.12-rc0 cherry-pick request: Reduce batch sizes for some eager tests to prevert OOMs in OSS runsPiperOrigin-RevId: 215651413
"1.12-rc0 cherry-pick request: Fix ci_parameterized_build to pass environment variables to tests.This is particularly important when using --run_under with
parallel_gpu_execute, since the envvars control the execution."
1.12-rc0 cherry-pick request: Disable XLA for Android builds.PiperOrigin-RevId: 215605865
1.12-rc0 cherry-pick request: Change hierarchical_tree_broadcaster_test from small to medium.PiperOrigin-RevId: 215607769
"1.12-1 cherry-pick request: Fix TfLiteTensor invalidation issue when using the Java APIFix an issue where the Java Tensor class would hold a reference
to an invalidated TfLiteTensor instance. This issue was manifest
in certain models that add temporary tensors during execution."
Update README.mdFix sentence structure
"Fix spelling 'a estimator' to 'an estimator'Fix vowel problem.
Use 'an' instead of 'a'"
"fix spellingFix dnn_with_layer_annotations.py 251 line.
Use 'an' instead of 'a' if following word starts with a vowel sound.
so I change 'a estimator' to 'an estimator'"
1.12-rc0 cherry-pick request: Allow GPU memory limit to be configurablePiperOrigin-RevId: 215477724
Change the inherited classes of some dataset opsThis PR fixes the issue #22681
1.12-rc0 cherry-pick request: Disable the cuDNN workarounds if the version number … is new enough to get the corresponding bugs fixed. The bugs that were work-arounded were fixed and verified.
Tensorflow masterNo description provided.
1.12-rc0 cherry-pick request: Pin wheel=0.31.1 to work around issue https://github.com/pypa/auditwheel/issues/102Needed to fix test failures in tensorflow/ubuntu/release/cpu/pip
1.12-rc0 cherry-pick request: Add missing `import unittest` to control_flow_ops_py_test.pyPiperOrigin-RevId: 215485333
"1.12-rc0 cherry-pick request: Disable XLA from raspberry pi builds.There is no known conceptual reason we can't use XLA, but in practice
we have some build issues that will need to be fixed."
1.12-rc0 cherry-pick request: Make Keras/TPU more robust to closed TF sessions.PiperOrigin-RevId: 215313156
1.12-rc0 cherry-pick request: Disable fused_conv tests that don't build in open-source.PiperOrigin-RevId: 215440356
Make Keras/TPU more robust to closed TF sessions.PiperOrigin-RevId: 215313156
Apache Ignite Dataset: Fixes merge artifactsI've checked Ignite Dataset after merge of #22210 and found out several issues:
Update README.mdNo description provided.
hNo description provided.
Update backend.pyadding missing import numpy
Update backend.pyAdding missing import in the commented examples. When trying out that particular example in commented section the TensorFlow and bumpy imports are missing
Fix for the broken \--config=rocm\ build (followup to PR 20277)This is more of a followup to PR #20277
Updating TF release version to 1.12Updating TF release version to 1.12
R0.7No description provided.
Updated RELEASE.mdAdded new CUDA compute capability
"Fix warning for format specifiertensorflow/core/util/command_line_flags.cc:73:37: warning:
format specifies type 'long *' but the argument has type 'int64_t *' (aka 'long long *') [-Wformat]
if (sscanf(arg.data(), ""%ld%c"", &parsed_int64, &extra) != 1) {
~~~     ^~~~~~~~~~~~~
%lld
1 warning generated."
R1.11No description provided.
Fixed bug in tflitecamerademoIt seems that the top K labels should be printed after the inference has been run and the filter has been applied.
"Comment fix: cudnn output tensor data_format conversion.The output tensor data_format conversion in core/kernels/conv_ops.cc should be ""from NCHW to NHWC"" since the called function is functor::NCHWToNHWC<GPUDevice, T, 4>()."
"attention score shapefrom equation 4, the attention score should not be a rank-3 tensor object."
"[INTEL MKL] Fix concat primitive descriptor creation bugWhen there is tensor format mismatch between tf tensor and mkl tensor, the primitive descriptor creation will error out. This fix allows MKL concat op to decide what format to use on its own.
It first creates concat w/o dst_md, then queries dst_pd from concat."
"[Closed] Fix concat primitive descriptor creation bugWhen there is tensor format mismatch between tf tensor and mkl tensor, the primitive descriptor creation will error out. This fix allows MKL concat op to decide what format to use on its own.
It first creates concat w/o dst_md, then queries dst_pd from concat."
"[Closed] Fix concat primitive descriptor creation errorThis fix allows MKL concat op to decide what tensor format to use automatically. It first creates concat w/o dst_md, then queries dst_pd from concat."
"print error information, when the os is not supportedNo description provided."
Fix some documentation errorsNo description provided.
"Update the relative file paths in the comments of tf.data kernel filestf.data kernel files are moved down one directory in this commit. Accordingly, this PR updates the relative paths in several comments of tf.data kernel files that need to be changed."
Modify code in docs to conform to Python syntaxCorrected a very few code in the docs to let it work only by copy-and-paste.
"[nGraph] Fixed the broken unit test buildDue to some recent changes in the bazel files for MKL, the nGraph unit test build was broken. This pull request fixes that and upgrdes the nGraph library references to latest (which contains some bug fixes)."
[INTEL MKL] Removing dead code in slice.With the addition of mkl slice with this commit 08a6cfe  the openMP  based code will not longer be executed
"Added chief to the default device_filters for /job:psThis behaviour matches the description in the _get_default_session_config_distributed docstring, and restores the symmetry of the default device_filters."
"Fix grpc+gdr compile error introduced in 33170cc6.@poxvoculi Most CPU tensors in PS are still managed by cpu_allocator, and I have added a separate path to copy them back to a CPU tensor managed by ProcessState::GetCPUAllocator."
fixed calling Estimator '_distribution' methodThe code is calling a '_distribution' method which no longer exists.  It will produce error message <AttributeError: 'Estimator' object has no attribute '_distribution'> when training mirrored strategy with hooks.
Add abseil_cpp cmake dependence.This patch enhance cmake build and add proper dependency to both external path (by fetching and compiling from scratch) and system path (existing library on the system).
R1.11No description provided.
"Artifact links for ppc64le GPU builds.whl files for tensorflow_gpu..._ppc6le are now hosted on the OSU
Jenkins build server. Nightly builds and Stable Release builds
are provided. I didn't include the version number so we won't need
to update the readme file for every new release"
R0.7No description provided.
122111
"Use scatter operations to speed up adam optimizerOriginal implement uses the whole m and t tensor to do computation, which is not efficient for sparse tensors.
My job speed up by 40x (3500ms -> 90ms for a single step) with this patch"
"fix unbalanced delimiter in benchmark_model docas reported in #22499, there is unbalanced delimiter """
Find NCCL2 debians in Tensorflow configureContinuation of #20155
Update to use python 2-3 compatible function tf_inspect.getfullargspec.RE: Issue #22413
"[INTEL MKL] Enable reorder cache in MklTranspose.Enable reorder primitive reuse in MklTranspose, please review."
Final version strings for 1.11.0No description provided.
Make sure broken tests are filtered out in XLA tests suites.PiperOrigin-RevId: 214311663
Fix memory leak of a Var resource in the multiple variable-handling k…ernels.
1.11.0-final cherry-pick request: Update tensorboard dependency to 1.11.xPiperOrigin-RevId: 214371640
Added the feature to disable MKL support of TensorFlow by environment…al variable TF_DISABLE_MKL=1
[nGraph] Upgraded to the latest nGraph version.Updated the nGraph and ngraph-tf version. These latest version contains several bug fixes and feature enhancements. See this for details: https://github.com/NervanaSystems/ngraph-tf/releases/tag/v0.6.0
"Reduce the size of //tensorflow/tools/pip_package:simple_console_windowsThis change reduce the size of //tensorflow/tools/pip_package:simple_console_windows's zip file from 1000027677 bytes to 47690474 bytes for a CPU build. For GPU build, it will avoid going over 4GB when multiple CUDA compatibility are specified."
"Fix for tf.keras.regularizers.{l1,l2}(0.) with tf.get_variableThis fix tries to address the issue in #22470 where tf.keras.regularizers.{l1,l2}(l=0.) with tf.get_variable returns"
"[r1.11] Fix MPI build failure caused by StringPiece -> absl::string_viewNOTE: This PR is against r1.11, not sure if it is ok as r1.11 is already in rc2."
"[Features] Enable partitioned variable assignmentsPartitionedVariable cannot use assign, assign_add and assign_sub functions in graph mode. In this pull request, I have enabled these functions in graph mode. This is the first step to enable variables partitioner usage in distribution strategy."
"fix doc bug for per_image_standardization (unit norm vs. variance)The first line of the doc states ""Linearly scales image to have zero mean and unit norm.""  This is incorrect - ""unit norm"" is calculated by dividing the vector by its L2 norm, and by definition, when you take the L2 norm of the result, it should evaluate to 1.  The result being calculated here is referred to as ""unit variance"".  Reference: https://en.wikipedia.org/wiki/Feature_scaling"
"Expose TFOptimizer in tf.keras.optimizersThis fix tries to address the issue in #22466 where
TFOptimizer was not exposed in tf.keras.optimizers
like other optimizers."
"Disable the logging for OutofRangeError in testtensorflow.python.framework.test_util.ErrorLoggingSession logs the errors from the tests. However, OutOfRangeError is used in many tf.data Ops as the signal completion,  which makes the ouput of tf.data tests hard to read. This PR disables the loging for OutOfRnageError to make the test log easy to read."
Fix tflite Makefile so it can find absl includesNo description provided.
"Workaround a Notebook bug in in c.NotebookApp.ipSee jupyter/notebook#3946. I found this by
checking package version differences and hunting for recent issues on
Notebook's github page."
"Ordering for configurable and non-configurable optimizersThis PR enables mixing and ordering of non-configurable default optimizers and custom-optimizers, allowing expert users to fine tune the optimizer ordering and injecting custom optimizers between default optimizers. Before this patch, custom optimizers were always executed last."
Workaround a Notebook bug in in c.NotebookApp.ipSee jupyter/notebook#3946. I found this by checking package version differences and hunting for recent issues on Notebook's github page.
Fix control edge issue while constructing TRTEngineOp nodesThis PR fixes an issue with control edges when constructing TRTEngineOp nodes. Duplicate addition of control edges both to the NodeDef and to the graph was breaking schema.
"Add MatchingFilesDatasetOp to improve performance of Dataset.list_filesThis PR aims to add MatchingFilesDatasetOp to improve the performance of Dataset.list_files, which needs to scan the entire directory tree and load the filenames into memory before the next operation starts. More details can be found at this issue (#17810)."
DO NOT MERGE - Update RELEASE.mdNo description provided.
"cluster resolver for slurm workload managerThis creates a new cluster resolver which allows launching of distributed TensorFlow on clusters using Slurm workload manager, which is typically used on HPC systems. The resolver for now can handle homogeneous job allocation with default plane distribution. The resolver can also implicitly expose GPUs to a process according to configurations and specifications where one or more GPUs can be can be allocated to a process. A method is also provided to all processes to ""realize"" which job and task index they are assigned to."
"Change update_op in tf.metrics.aucWe do not need to compute the AUC in the update_op, just to update the confusion matrix value."
"Add GPU complex support for reciprocalThis fix tries to address the issue in #22384 where there
was no GPU complex support for reciprocal. This fix adds
the complex64/128 support for GPU."
Update version strings to rc2No description provided.
[WIP] Add tensor forest classification trainWork in progress
Fix warning in text_classification_character_cnn.pysqueeze_dims was deprecated so switch to axis.
"Fix build failure in verbsWhile looking into #22372, the verbs build fails with the following error:"
[tf.data] Make `tf.contrib.data.reduce_dataset` work when the internal state is a tupleOne issue with the new tf.contrib.data.reduce_dataset is that the internal state can only have one element.
Merge some memory leak fixing changes from master to r1.11No description provided.
Fix typo error in grappler remapper optimizer.No description provided.
Fix bug in tf.keras.metrics.sparse_categorical_accuracyFix #22190
Fixed broken linksNo description provided.
"Added support for half precision type in linear algebra operatorsFixes #22086
Following changes were made:"
"Expand stateless random generators to match their stateful cousinsstateless_random_uniform now takes minval+maxval and handles ints, and stateless_normal/stateless_truncated_normal take mean+stddev.  Additionally, all of the stateless functions now have proper doc strings."
fix for issue #22347fix for #22347 in contrib/graph_editor/transform: clear the colocation attribute when copying the node_def such that the new subgraph can be exported separate from the original copied subgraph
"Fix trt allocator, convert nodes logic, etcThis PR fixes a few things:"
"Inconsistency in shape of cell state in ConvLSTM cell rectifiedFixes issue #21400 : next_state in LSTMStateTuple of ConvLSTM cell should have shape (state_size, output_size) but found (state_size,state_size)"
[INTEL MKL] Adding #error when compiling for MKL ML only.Converting warning to error as the MKL ML only feature is no longer being supported.
Fix the name of MKL dockerfile in update_version.py.No description provided.
Support gradient_multipliers as tensor for optimize_lossThis fix tries to address the issue raised in #22295 where gradient_multipliers for tf.contrib.layers.optimize_loss() does not support tensor as input. This fix update the optimize_loss to allow gradient_multipliers passed as dict of tensors.
Update CONTRIBUTING.md to reflect PR merge processNo description provided.
Support scoped_allocator_ops for renamed device.This fixes #22274.
"Add linear_operator_addition to tensorflow/python/.  A subsequent CLwill remove this from contrib.
linear_operator_addition is hidden from the public API."
[tflite] fix calculating of output pixelsfix an issue reported by issue #22310
Fixed bug in estimator.py where [estimator]._distribution was called …instead of [estimator]._train_distribution causing an AttributeError.
Fixed broken linksNo description provided.
"[INTEL MKL] Fix typo error of an environment variableChange the name of an environment variable
from
TF_MKL_OPTIMIZE_PRIMITVE_MEMUSE
to
TF_MKL_OPTIMIZE_PRIMITIVE_MEMUSE"
R1.10No description provided.
[keras] fix: ReLU had dict argument when load model from ckeck point fileReLU had dict argument when load model from ckeck point file
"[lite]revised a parameter errorHi @MarkDaoust , i found that when firstly use interpreter as a parameter pass into eval_model function, pass interpreter_quant two times to eval_model may be make some people confused."
"[xla] Improve validation of Broadcast shapeIf one misreads the semantics of this instruction, it's easy to cause
an out of bounds access into the dimensions here. Add an extra check
to return a proper error to the user rather than crashing in that
case."
Update broken link to intro on ADAGRADSmall edit to documentation on the tf.train.AdagradOptimizer which had a broken link in the intro.
"Raise warning once only if trainable_weights and _collected_trainable_weights are inconsistentFix #22012
If trainable_weights and _collected_trainable_weights are inconsistent, raise warning only once, not every batch(train_on_batch) which would flood the screen. train_on_batch inside loop is not efficient as each batch would rebuild the train_function, but it's the most simple way to train model like GAN in #22012 . This may not a perfect fix, but at least, don't flood my screen. The updated behavior would be the same as keras-team/keras."
Fix bug of lacking axis when using array_op.concat in _unwrap_and_concat functionThis is a small bug fix. Array_ops.concat should be always passed with two params. But it seems that the axis was missed in _unwrap_and_concat function.
Fix bug of lacking axis when using array_op.concat in _unwrap_and_concat functionThis is a small bug fix. Array_ops.concat should be always passed with two params. But it seems that the axis was missed in _unwrap_and_concat function.
"[Intel MKL] Fixes for unit test failuresChanges in partitioned_function_ops.cc are for passing
Global OpRegistry as default_registry in PartitionedFunction op"
Update 1.11.0-rc0 version strings to 1.11.0-rc1No description provided.
Fix performance issue when training with keras model in eager mode.PiperOrigin-RevId: 212908218
Update BAZEL_VERSION to 0.17.1This fix tries to update BAZEL_VERSION from previous 0.15.0 to 0.17.1. The reason for the update was that PR #19461 depends on a Bazel issue bazelbuild/bazel#5932 which has only been fixed in 0.17.1.
"Conv2DTranspose supports dilationFix #21598
I have implemented this function at keras-team/keras#11029 , just pick it to tf.keras."
Est spec metrics ops check tensorThis PR corresponds to issue #22066. The Tensor-checking part in _check_is_tensor_or_operation is modified to tensor_util.is_tensor() to allow tensor_like inputs as discussed.
Include 1.11 version numbers and release notesNo description provided.
Clean up docs for abs() and accumulate_n()This PR adds some clarifications to the documentation for tf.abs() and reformats the docs for tf.accumulate_n() into a format more consistent with that of tf.add_n().
Updated docs to point to tfp instead of tf.contribNo description provided.
Fix Windows GPU Build failure caused by ncclThis fix is an attempt to fix Window GPU build which was broken:https://source.cloud.google.com/results/invocations/18ee81e7-f798-4ecc-9926-046d82993d80/log
Move ppc64le build/test to cuda 9.2CUDA 9.2 is the first version of cuda that nvidia will support on Power9 hardware.
"Update code owner for s3 and contrib/{kafka,kinesis}Add myself so that issues or PRs could be assigned to me."
Use the last char instead of the first in prediction@yashk2810 does this make sense to you?
[Intel-MKL] Enable MKL Relu6 opNo description provided.
Update RELEASE.mdUpdate RELEASE.md to have 1.10.1 patch information.
Fix missprint - unknown variable name.No description provided.
Fix missprint - unknown variable name.No description provided.
Fixed wrong variable name in exampleThe Keras model used a wrong variable name in the MirroredStrategy example
Fix missprint - unknown variable name.No description provided.
Not running no_gpu tagged tests on GPU and not running benchmark-test… for any pip builds.
"Handle model deserialization when output tensor shape is NULL.In flatbuffers, vectors default to NULL."
Apache Ignite DatasetThis is a proposal to add IgniteDataset that allows to work with Apache Ignite.
"[tflite] make build_rpi_lib.sh work againfix undefined referneces introduced by 1a25a8e. Functions
defined and implemented in neon_tensor_utils.h, but not
included anywhere so that there are undefined references."
"Replace global starter flags with call-specific flagsThe earlier version of convenient default flags mistakenly applied --build_tests_only to normal ""bazel build"" calls, which broke pip.sh (and probably invalidated some other things). This resolves that problem by setting flags specific to ""test"" and ""build"" commands."
Use random_seed for the contrib/tensor_forest.  process input opsRight now the process_input ops is not using the random seed passed in.
third_party: update libjpeg-turbo to 2.0.0libjpeg-turbo-2.0.0 fixes CVE-2018-1152 and CVE-2018-11813
Revert changes that removed absl headers from some filesWe applied the original rollback before realizing that many more files reference Absl headers. Those headers have been added to TensorFlow's pip package. See #22159.
Replace blanket-exclusion of TF Lite tests with --build_tests_onlyPiperOrigin-RevId: 212065169
Apache Ignite File SystemThis is a proposal to support Apache Ignite File System in TensorFlow.
Fix dynamic rnn commentNo description provided.
Fix np.float -> np.floating changeWhile running core_rnn_cell_test:
"Make BeamSearchDecoder compatible with float16Make BeamSearchDecoder compatible with float16 when a non-zero length_penalty_weight is used.
Addresses #22172"
edited flat_map description and removed typoThe examples in interleave are quite helpful. I just added a reference to this example for flat_map
"Fix broken link in rnn_colorbotThe README.md inside rnn_colorbot is broken, this fix fixes the link."
Changed PWD to pwd for bash examplesShell command PWD should be lowercase pwd for it work correct.  Obvious typo corrected.
[nGraph] Added CPU backendThis pull request adds the support for nGraph CPU backend. The changes are in the following area:
Include absl headers in pip packagePiperOrigin-RevId: 212067303
Fix int64 failure on GPU for TensorArrayThis fix tries to address the issue raised in #22054 where int64 on GPU results in colocation errors. This fix enables int64 on GPU with TensorArray.
Install h5py in the docker container.PiperOrigin-RevId: 212054037
Cherry-pick for r1.11: Fix race condition in tfdbg disk usage trackingNo description provided.
R1.11 tfdbg cherry pickNo description provided.
"Add PyMemberDef for __dict__ on eager tensors.This fixes dir() calls on instances of eager tensors so that it correctly
accesses the dict of EagerTensorType."
Add TF Lite-disabling variablePiperOrigin-RevId: 211906579
More changes to fix absl rollbackNo description provided.
Fix mistake in 1.11 Rollback CherrypickNo description provided.
"Make tf.random_uniform([0], maxval=0, dtype=tf.int32) not crashFor integers, tf.random_uniform enforces a nonempty range with minval < maxval.  However, an empty range is fine if we're producing no output values, and this degenerate case occurs naturally for some code patterns."
"Fix a bug in TF_LITE_ENSURE_OK.For example,"
Fix NoneType error in tf.nn.depthwise_conv2d with unknown shapeThis fix tries to address the issue raised in #22110 where tf.nn.depthwise_conv2d thowns out NoneType error when the input shape is unknown.
"Fix ps0 OOM when workers too many.When training with MonitoredTrainingSession in distributed mode,
all ops related with report_uninitialized_xxx will be placed on ps0,
which may lead to OOM when workers up to thousands."
Automated rollback of commit 24787842adfefe35f5a520313d775b14c29f143aPiperOrigin-RevId: 211895566
"Support 3/4/5 dimensional input for bias_add with NCHW data formatThis fix tries to address part of the issue raised in #20527 where biad_add only support 4 dimensional input with NCHW data format, and is causing tf.layers.conv3d to not suppport dynamic shapes with channel_first data format."
Ensure all ValueErrors are raisedSome ValueErrors are currently not thrown (or raised) when they are detected. We want to avoid this and raise all ValueErrors given the chance.
Correctly tag tests that break internal testing for 1.11No description provided.
Add float16 support on GPU for tf.contrib.image.transformThis fix tries to address the issue raised in #22115 where there were no float16 support on GPU for tf.contrib.image.transform.
Modify tags for internal CI for tflite_driver_testNo description provided.
[Keras / Cloud TPU]: Correct indexing for software pipelining.PiperOrigin-RevId: 211724843
Update rpi.mdcorrected path for the static library in cross compiling
Add float16 support for CTCLossThis fix tries to address the issue raised in #22096 where there was no float16 support for CTCLoss.
NTC CHIP Build ScriptAdded the build script for compiling Tensorflow for NTC C.H.I.P. $9 Computer.
Cherrypick fix to tags for internal testing infrastructureNo description provided.
Fix MPI build failure caused by StringPiece -> absl::string_viewThis fix tries to fix the MPI build failure caused by StringPiece -> absl::string_view.
add gradient for broadcast_toFix #21901
"[INTEL MKL] Add MklSlice OpAdd MklSlice op, please review."
"[xrt] Allow zero-argument computations in XRTExecuteIt can be sensible to have zero-argument computations (e.g. for
on-device generation of random numbers). XLA allows this fine,
but the .Attr for Ninputs implicitly defaulted to >=1,
preventing XRTExecute requests with Ninputs == 0. Fix
the minimum and add a test to make sure this works end-to-end."
Add an explicit reason for NotImplementedError on eager model saveShould help with #22038
"Fix ReLU layer serialization bugThis bug is reported at keras-team/keras#11023, but actually keras-team/keras handles this correctly, tf.keras has the bug. You can also use the following code snippet to reproduce:"
"LSTMCell base articleresubmitting to master branch
For discussion see #22035"
Upgrade version references from 1.10.0 to 1.11.0-rc0No description provided.
"Add 1.11 release notesThis change adds the release notes for 1.11, which were mostly shepherded by a new internal automation tool. Cool!"
Fix for stringpiece build failure cherrypick to r1.11No description provided.
"Add //tensorflow:install_headers targetUsed to prepare all the header files so they can easily be installed
into /usr/include when packaging TF."
"System libs: unbundle more and add variables for PREFIX supportThis adds a few variables so some common variables like $PREFIX, $LIBDIR, $INCLUDEDIR are supported and unbundle double-conversion and boringssl deps."
"Fix documentation issue with `tf.nn.conv1d`The tf.nn.conv1d supports float16, float32, and float64
though in tf.nn.conv1d.__doc__ only float16 and float32
are mentioned. This fix updates the doc string to add
float64 as the supported data type."
"Add float16 support for NonMaxSuppressionV{2,3,4}This fix tries to address the issue raised in #20199 where there was no float16 support for NonMaxSuppressionV2. As NonMaxSuppressionV2 is the earlier versions of API
and there are newer versions of NonMaxSuppression: NonMaxSuppressionV2, NonMaxSuppressionV3, NonMaxSuppressionV4, this fix exposes the float16 support to all of the above.
(Note in the master the default version used is NonMaxSuppressionV3)"
Fix syntax error in single_image_random_dot_stereograms caused by localeThis fix tries to address the issue raised in #21164 where the single_image_random_dot_stereograms in different locale (like de_DE) caused syntax error in python like:
"LSTMCell base article at rnn_cell_impl.pyThe implemented LSTMCell makes use of the ""forget gate"". The base article pointed out in both comments (lines 650 ~ 661) and tensorflow's documentation does not cover the concept of ""forget gate"".
This concept was introduced by Gers et al. only in 1999 with ""Learning to forget: Continual prediction with LSTM""."
"Fix issues in maxout layerOriginally pointed out by @ilblackdragon in this pull request:
shape[axis] should = num_units instead of = -1."
fix a minor issue for tf.split documentNo description provided.
"fix compile warning: 'message_count' may be used uninitialized in this functionFix comile warning like,
tensorflow/core/kernels/encode_proto_op.cc: In member function 'virtual void tensorflow::{anonymous}::EncodeProtoOp::Compute(tensorflow::OpKernelContext*)':
tensorflow/core/kernels/encode_proto_op.cc:586:5: warning: 'message_count' may be used uninitialized in this function [-Wmaybe-uninitialized]
for (int message_index = 0; message_index < message_count;
^
tensorflow/core/kernels/encode_proto_op.cc:519:9: note: 'message_count' was declared here
int message_count;"
"Additional arguments (vmin, vmax, and clip) for summary.imageThis PR adds the additional arguments (vmin, vmax, and clip) to summary.image for the request by the issue-12883."
Fix minor typosFix minor typos
Append error msg to exception for test.assert_* methodFix #21988.
"Fix tensorflow master build failure with verbsThis fix tries to address the issue in #21999 where
tensorflow master build failed with verbs. The issue was caused
by StringPiece replaced with absl::string_view"
Fixes the formatting issue pointed out at #21762This fixes #21762TypeError: not all arguments converted during string formatting
third_party: update libjpeg-turbo to 2.0.0libjpeg-turbo-2.0.0 fixes CVE-2018-1152 and CVE-2018-11813
[tflite] do not create unused idle thread when SetNumThreads(1)avoid creating unused idle thread when user specifies interpreter->SetNumThreads(1);
R1.10No description provided.
CODEOWNERS: add myself for third_party/systemlibs/Add myself so get assigned for PRs in third_party/systemlibs/
"MKL DNN: Softmax dim fix: Supporting 1D to 5D tensors, address the regression of CISoftmax test failed because recently some tests uses 3D tensors as input. Before, MKL softmax only supported 2D tensors. Now, in this PR, we are supporting 1D, 2D, 3D, 4D and 5D tensors as input to Softmax.
Thus, this PR fixes the CI regression."
tf.errors.OpError and its subclasses are pickleableThe builtin BaseException class defines a generic __reduce__ method which assumes that the args attribute corresponds to constructor arguments. See BaseException_reduce in Objects/exceptions.c. tf.errors.OpError keeps args empty and therefore cannot be pickled via BaseException.__reduce__. This commit fixes  the issue by defining OpError.__reduce__.
"fix the comparison error when building a CPP API applicationWhen building a CPP API application with ""-Wall -Werror"" option, `error: comparison between signed and unsigned integer expressions' occurs since return type of num_elements() is 'int64' instead of 'size_t' in ops.h to express -1. This patch fixes this bug by explicit type casting."
Update GPU occupancy checking to utilize CUDA's occupancy calculatorThis change will make supporting future architectures easier and removes dependence on hard-coded GPU data
[Intel MKL] Fix for stringpiece build failureNo description provided.
[DOC]: minor typo in docstring of make_callable method.No description provided.
Fix possible memory leakExecutorState is used in the following code
"Make tf.transpose emit simpler graph when possibleIf not given an explicit 'perm' parameter, tf.transpose currently
emits a graph that dynamically calculates it from the rank of the
input tensor. This is completely unnecessary when the rank of the
input can be statically determined at graph construction time."
Add `contains` op to lookup tableNo description provided.
"Update ops.h -- Eliminating a Warning Message of Type InconsistencyIn this source code file, the type of t.NumElements() is a signed integer, while the type of v.size() is unsigned. For the ""!="" operator between them, a warning message appears when TensorFlow is compiled with a C++ application."
"add `bucketize_v2` op to support tensor type `boundaries`fix #21934, and ping @yongtang"
"Added axis parameter to tf.losses.softmax_cross_entropyThe internal implementation of tf.losses.softmax_cross_entropy, uses nn.softmax_cross_entropy_with_logits_v2 which has a dim argument with a default value of -1. The new argument axis=-1 wraps the dim argument of nn.softmax_cross_entropy_with_logits_v2. Documentations also updated.
This will fix #20866"
"Added axis parameter to tf.losses.softmax_cross_entropy. fixes #20866The internal implementation of tf.losses.softmax_cross_entropy, uses nn.softmax_cross_entropy_with_logits_v2 which has a dim argument with a default value of -1. The new argument axis=-1 wraps the dim argument of nn.softmax_cross_entropy_with_logits_v2. Documentations updated too."
[Intel MKL] Using default CPU allocator for small allocations in MklC…PUAllocator
Update README.mdNo description provided.
"Disable GPU test for scatter_add_ndim_op_testAs scatter_add_ndim doesn't have implementation for GPU, the
test needs to be excluded from GPU test to prevent it from failing.
Currently fails on both x86_64 and ppc64le.Fixes #21833"
R1.10No description provided.
Test numpyNo description provided.
Fix pix2pix_eager.ipynb image resize method2 was BICUBIC not NEAREST_NEIGHBORhttps://github.com/tensorflow/tensorflow/blob/r1.10/tensorflow/python/ops/image_ops_impl.py#L936
R1.10No description provided.
Fix incorrect link in `dockerfiles/README.md`This fix fixes incorrect link in dockerfiles/README.md.
"Add `ENV LANG C.UTF-8` to dockerfiles for PythonThis fix tries to address the issue raised in #20380 where LANG env was not set in Docker images, and was causing issues with python 3 (see related bug https://bugs.python.org/issue19846)."
Replace tf.Variable with tfe.Variable in eager guideThe current code produces this error:RuntimeError: tf.Variable not supported when eager execution is enabled. Please use tf.contrib.eager.Variable instead
upgraded protobuf to v.3.6.1No description provided.
Add compression support for FixedLengthRecordDatasetThis fix tries to address the issue in #21680 where there were no compression type support for FixedLengthRecordDataset. This fix enables the ability to pass a compression type for FixedLengthRecordDataset.
[Intel MKL] Adding cc tests to the MKL public CI tests.@tatianashp @gunan This brings the number of tests in the MKL public CI up to 1069.
Accumulated Gradient Normalization OptimizerAccumulated Gradient Normalization for distributed training
Merging 1.10.1 back into master.No description provided.
ReadmeNo description provided.
[XLA] Allow for disabling these tests via manifestAllow this test to be disabled via the manifest file.
Apache Ignite DatasetThis is a proposal to add IgniteDataset that allows to work with Apache Ignite.
"Update ops.h -- Eliminate a Warning Message of Type InconsistencyIn this source code file, the type of t.NumElements() is a signed integer, while the type of v.size() is unsigned. For the ""!="" operator between them, a warning message appears when TensorFlow is compiled with a C++ application."
"Update ops.h -- Eliminate a Warning Message of Type InconsistencyIn this source code file, the type of t.NumElements() is a signed integer, while the type of v.size() is unsigned. For the ""!="" operator between them, a warning message appears when TensorFlow is compiled with a C++ application."
"Update ops.h -- Eliminate a Warning Message of Type InconsistencyIn this source code file, the type of t.NumElements() is a signed integer, while the type of v.size() is unsigned. For the ""!="" operator between them, a warning message appears when TensorFlow is compiled with a C++ application."
"Update ops.h -- Eliminating a Compilation Warning Message of Type InconsistencyIn this source code file, the type of t.NumElements() is a signed integer, while the type of v.size() is unsigned. For the ""!="" operator between them, a warning message appears when TensorFlow is compiled with a C++ application."
add div_no_nan in the math section of user_guideAdd document for #21784 #21621 .
"merge_repeated option is confusingI have the same question with WIP: Remove invalid merge_repeated option from CTC beam decoder, it's a pity I haven't seen any changes for so long.
Generally I will use the default value of merge_repeated: True, but I found it's confusing, that is, I got the wrong anser, it has been explained well in WIP: Remove invalid merge_repeated option from CTC beam decoder.
And the top path in ctc_beam_search_decoder is similar with sequence in ctc_greedy_decoder, this is confusing, I have found the project CRNN(line 167) and some other projects use the wrong settings.
So I think it's better to give a explain here, this has no conflict with the existing code."
[Intel MKL] Intel Optimizations for TensorFlow* 1.10.0 released.Updating README.md with TensorFlow 1.10.0 links for Intel(R) MKL-DNN.
typo in saver docsNo description provided.
Develop upstream pre r1.10 v2Don't Merge! PR to kick off CI check.
Adding release notes for 1.10.1.No description provided.
DeleteNo description provided.
Avijit/fix license filesWe discovered that the license file names are wrong when nGraph build is selected. This PR fixes these file names so that nGraph is built with TensorFlow when requested. This PR also fixes nGraph unit tests due to recent changes in the MKL bazel files.
Add whl file to .gitignore.No description provided.
Add tensor forest classification inference in coreAccording to https://github.com/tensorflow/community/blob/master/rfcs/20180626-tensor-forest.md
"Clean all those safe_div, _safe_div methodstf.div_no_nan was introduced by #21621, which is designed to replace all those safe_div methods here."
R0.7No description provided.
"decorate sparse_categorical_accuracy with  tf_export decoratoraccording to Issue21735, it may be a mistake that only sparse_categorical_accuracy is NOT decorated by tf_export and result in explicit import i.e. from tensorflow.keras.metrics import sparse_categorical_crossentropy."
"Fix sparse updates for optimizers using DecoupledWeightDecay.As mentioned by @yym-ustc in the original pull request #17438, there was a bug in the sparse update.
Ping @alextp who reviewed #17438."
register gpu kernel for div_no_nanThis is a follow up PR for #21621.
"add num_steps to TrainSpecThe TrainSpec currently does not support training for a fixed number of steps. This is rather inconvenient for continuous training. For example, if we have a model which trains incrementally every day with ./train.py --steps=1000, the model won't train in the second day because we set the max_steps in the TrainSpec."
"add num_steps to TrainSpecThe TrainSpec currently does not support training for a fixed number of steps. This is rather inconvenient for continuous training. For example, if we have a model which trains incrementally every day with ./train.py --steps=1000, the model won't train in the second day because we set the max_steps in the TrainSpec."
Testing with Dockerfile numpy version downgraded.No description provided.
Use if_ngraph to exclude ngraph licence rules in default build.No description provided.
Update the version 1.10.1 patch release.No description provided.
Rename the artifact IDs for TensorFlow ecosystem jarsRename the artifact IDs for the TensorFlow ecosystem jars to tensorflow-hadoop and tensorflow-spark-connector in response to discussion in tensorflow/ecosystem#87
"Fixed mode in load_inputs_from_input_arg_stringNPY files are binary and should be opened with mode ""rb""."
"Fix compilation failure with RDMA+GDRThis fix tries to address the issue raised in #21696 where
tensorflow failed to compile when both RDMA and GDR are on.
The issue is that the memory allocator of GDR used the same
name as RDMA."
Fixed broken link to Estimators pageBroken link on https://www.tensorflow.org/guide/saved_model
Fix bug: divide by zero in embedding_lookup_sparseFix #14851
"Add more doc for the dict returned by an estimator's evaluate() methodThere is currently no information about the difference between the loss and the average_loss.  It's unclear what the difference is (see #21557).  The other metrics are arguably self-explanatory, but still worth mentioning in the doc."
Adding op doc fixesDoc Fix:
Add caisq as code owner for tfdbg-related foldersNo description provided.
"Add installation of keras_applications in the documentation of intall from sourcesThis fix tries to address the issue raised in #21734 where
the installation of keras_applications was not mentioned in the
documentation of ""intall from sources""."
Update SparseTensor docstringSparseTensor doesn't return anything in __init__
parallel_for: use absl wrapper and add converter for SoftplusGradConsider the following snippet
Implement `extract_volume_patches` (issue #17843)Implement extract_volume_patches (issue #17843). rates not supported as of now.
Add myself to CODEOWNERS for contrib/ganNo description provided.
Cherry-picks for Keras on Cloud TPUsNo description provided.
assert_element_shape support partial shapesFix #16052.
"[cmake/linux] Add many systemlib_* options [WIP, don't review]Replaces this one: #21031"
[INTEL MKL] Upgrade mkldnn to 0.16 for bazel buildupgrade mkldnn from version 0.15 to 0.16 for bazel build
[INTEL MKL] Upgrade mkldnn to 0.16 for bazel buildUpgrade mkldnn to 0.16 for bazel build
"[INTEL MKL] Memory control to avoid caching large buffer for MKL primitivesThis PR enables memory usage control:
To avoid caching large buffer for MKL primitives, ""caching"" MKL primitives in the following scenarios is prevented:"
Simplyfing the evaluation stepSimplyfing the evaluation step by taking argmax of the softmax of the predictions instead of tf.multinomial. This makes it easier to understand.
[INTEL MKL] Enable Relu 3D OpsThe enhancement enables Relu 3D operations.
Branch42No description provided.
Faster bilinear resize for x86@alextp This is a rework of our earlier bilinear resize PR (#20746).
copy cuda_fp16.htensorflow/core/util/cuda_kernel_helper.h include cuda_fp16.h.
tflite label_image: add -llog and update docNagging Assignee @protoget: It has been 75 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
make build_rpi_lib.sh workrunning ./tensorflow/contrib/lite/tools/make/build_rpi_lib.sh showed something like
[Intel MKL] Static code analysis tool fixes.mkl_cpu_allocator.h: disallowing copy constructor and assignement operator; returning nullptr from non-void functions even though they generate Unimplemented Status code
"GlobalAveragePooling1D supports maskingPick keras-team/keras#10913 to tf.keras, to make GlobalAveragePooling1D support masking."
"Fixed bytes/str issue in get_temp_export_dirPrior to this commit on Python 3 get_temp_export_dir produced directories
of the form"
"Add LeakyRelu C++ Op and its gradient implementation.LeakyRelu, defined as 'y = { x (x>=0) or alphax (x<0) }', was computed by combined Ops 'max(x, alphax)' in current codes. Hence its gradient calculation for back propagation would contain a serial of element-wise Ops. This looks really unnecessary for such a simple op and it could be done within just one Op with less memory accesses."
"Fix CVE-2018-1152 and CVE-2018-11813libjpeg-turbo-2.0 is out which fixes this bug but the build system is
completely changed from 1.5.3 to 2.0 and would need Bazel build changes
so backport the patch first."
"Update fold{l,r} examples to run on TensorFlow 1.9+See #21340."
[Intel MKL] Fixing a build issueNo description provided.
Add grpc as default rpc layer for distribute coordinator serverWould you like to comment? @yuefengz
"export symbols in the stream_executor namespaceSome of these symbols were previously in the perftools::gputools namespace. Not
having these symbols causes custom ops loading to fail in the monolithic mode."
"add `tf.div_no_nan` op for division by zeroFix #15706, #17350, #20091.
Ref #19105."
"[Java] Render secondary factory for default output typesThis is an API optimization. Right now, when an attribute of an operation is optional (i.e. has a default value if not provided explicitly by the user), it ends up in the Options nested class of that operation. Since the operation factory accepts a vararg value of Options..., it could be passed or left empty."
removing redundant semicolonI discovered semicolon which is the redundant symbol in python.
SampleNo description provided.
SampleNo description provided.
[INTEL MKL] Code cleanupRenamed INTEL_MKL_ML uses that were missed by previous commit a8e78e2 . Also added deprecation warning for INTEL_MKL_ML_ONLY. The DNN APIs in MKL ML have not been updated in a while and all new optimizations and enhancements are done in MKL DNN open source.
"[Java] Extend UInt8 class from NumberThere is an issue right now in the Java Ops API. To enforce that in some operations the data type of an operand must be of a real-number data type, the signature of those operands only accepts generics that extends from Number."
[INTEL MKL] Enable Pooling3D opsThe enhancement within this PR enables MKL Pooling3D operations (both average pooling and max pooling).
fix character access in autographfix #20703 by extending the tensor index operator.
[WIP] Add canned tensor forestNagging Assignee @protoget: It has been 22 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
Add Pop!_OS section to main page forinstalling TensorFlow on Pop!_OS.
Install pop osNo description provided.
"fix documentation for SECURITY.mdThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
"Sorry for the code smell.I don't have time to maintain this codebase anymore, but word got to me through the grapevine that my framework was competing with yours. I just hope you can look at what's good in TensorBox and learn from it."
"Fix typo: compatbility => compatibilityFixes a typo that creeps up in many places: compatbility => compatibility
This makes some documentation pages look weird, such as: https://www.tensorflow.org/api_docs/python/tf/estimator/Estimator"
Update Nesterov implementation docsClarification that this is a modified version of the algorithm which is only correct under certain conditions.
Fix url in automatic differentiation from eager notebookCorrect url for a link in automatic differentiation notebook.
"Replacing tf.contrib.data.batch_and_drop_remainder by batch(..., drop…Replacing tf.contrib.data.batch_and_drop_remainder by batch(..., drop_remainder=True). Also checkpointing at (epoch + 1) % x while saving the model to consider the last epoch's variables."
Adam: Fix latex text (docs).Escape special character and add text section for comments.
"Remove the extra clip_by_value created by keras.layers.ReLUWhen max_value of tf.keras.layers.ReLU.__init__ is None, self.max_value = cast_to_floatx(max_value) will set self.max_value to nan. This nan self.max_value results in an extra tf.clip_by_value(..., clip_value_max=nan) following tf.nn.relu."
[Intel MKL] Adding keras pip packages to MKL container builds.@gunan @av8ramit Adding this package pulls in all of the other dependencies:
Update Kafka and boringssl libraryThis fix updates librdkafka to 0.11.5 and boringssl to 7f63442.
"Fix nn_test.py on AVX512 buildsThis patch modifies the nn_test test case L2LossTest.testGradient
so that it passes on AVX512 builds.  The test case is failing
as the error tolerance used in the test case is too strict.
The test case compares the difference of pairs of tensor reductions
to an expected result.  If the comparison is out by more than 1e-11
the test case fails.  The problem here is that the results of a
summation reduction of doubles of the same tensor can differ slightly
on different builds.  AVX2, AVX512 and non vectorized versions of the
tensor contraction algorithm add the tensor's contents together in
different orders and this different ordering can produce slightly
different results due to rounding errors."
def_file_filter: Fix a bug when VC path is not foundfind_vc_path(repository_ctx) returns None if VC path is not found.@gunan
Support placeholders without shape in build_raw_serving_input_receiver_fnFix #21178.
typo fix for rpi.mdNo description provided.
"Fix incorrect doc in tf.layers.denseThis fix tries to address the issue raised in #21525 where
the doc in tf.layers.dense is not correct. Specificallyoutputs = activation(inputs.kernel + bias) Where
should be:outputs = activation(inputs * kernel + bias) where"
docs_src: minor spelling tweaksNo description provided.
Update install source docs.No description provided.
[Docs] Update iOS selective registration docsFixes #20591@MarkDaoust /cc
Fix warning in image_ops_testWhile running test:
"Fix linking _dataset_ops with VS 2017When building TensorFlow with VS 2017, I'm getting the following linking error:"
"Update custom_training with tf.contrib.eager.VariableReplacing tf.Variable with tf.contrib.eager.Variable to avoid error: RuntimeError: tf.Variable not supported when eager execution is enabled. Please use tf.contrib.eager.Variable instead. As a result, the notebook can run without error."
Calculate feature_importances for BoostedTreesRegressor and BoostedTreesClassifierFix #21204.
"Try to find an allocator when the engine is not assigned a device.This PR will fix #21487.
+cc @pooyadavoodi."
[Intel MKL] Tweaking a URL that didn't work with command line utilities.Also fixed the URL attached to the stable build badge.
CUDA and CUDNN paths for debianThis pull request addresses issues encountered when trying to build tensorflow with cuda support on debian based systems (stretch and buster)
"[Intel MKL] Adding support for python 3.6 dev containers@angersson I'll move this to the new Dockerfile architecture, but need it here as well until the new architecture gets merged."
Updating the bazel version in install from sources.@MarkDaoust please update this to the docs for 1.10 whenever you can. Thanks!
Merge r1.10 back to master.No description provided.
support IndexedSlices in `add_n`Fixes #15943
Update RELEASE.mdFixing a formatting error.
Add deprecation warning to tf.gfile.FastGFile.Fixes #12663.
Add deprecation warning to tf.gfile.FastGFile.Fixes #12663.
"elastic averaging SGD update: support partitioner & more optimizersThe old implementation of elastic average optimizer does not partitioned variables, support optimizer like AdamOptimizer which will create global variables like beta_1, beta2."
[Intel MKL] Adding Quantized Convolution (Int8) - Part 1This PR is part 1 of four PRs that add quantized version of convolution using MKL-DNN. This part implements the quantized convolution kernel.
"ppc64le: CI/CD test scriptsThis PR enables unit test to be run on ppc64le by invoking ci_build.sh. For example:
./tensorflow/tools/ci_build/ci_build.sh gpu 
--docker file tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le 
./tensorflow/tools/ci_build/linux/ppc64le/gpu/run_py3_core.sh"
Fix op_scope warning in adjust_gammaWhile running the following op_scope causes the warning:
Correct links to documentation pages(redo of #21457)
[Intel MKL] Adding Quantized Convolution (Int8) - Part 4This PR is part 4 of four PRs that add quantized version of convolution using MKL-DNN. This part adds the registration of MKL quantized and fused operations.
[Intel MKL] Adding Quantized Convolution (Int8) - Part 3This PR is part 3 of four PRs that add quantized version of convolution using MKL-DNN. This part adds changes that are required to quantize a graph and it enables fusions of MKL quantized convolution.
"RNN.call should get initial state from full input specPick the fix at keras-team/keras#10845 to tf.keras, to fix a critical bug when running RNN with multi_gpu_model."
"Correct links to documentation pagesI'm not 100% sure these are the correct links (like, there might be a secret shorthand I don't know about), but the current links (on this page, under compile and fit) lead to 404s."
[Intel MKL] Adding Quantized Convolution (Int8) - Part 2This PR is part 2 of four PRs that add quantized version of convolution using MKL-DNN. This part enables MKL quantized convolution kernel in the graph pass.
Cheery pick TFLite iOS build fix into 1.10 branchPiperOrigin-RevId: 205160898
"ConfigProto.experimental.num_dev_to_dev_copy_streams defaults to 0by proto3 semantics.  Silently correct that value to 1, without logging
an error."
"Delete confusing comment related to missing output VariableThe method KMeans().training_graph() does not return anymore the
output Variable cluster_centers_var. Thus the related comment
is outdated and should be deleted.
See related commit."
Adam docu: learning rate formulaFixed formula for the learning rate in the documentation of class AdamOptimizer.
"Fix incorrect doc in tf.nn.convolutionThe ranks of input and filter should be N+2 instead of N.
Since the function computes N-D convolution, the input's rank should be N+2 with additional batch and input_channel dimensions, and the filter's rank should be N+2 with additional input_channel and output_channel dimensions.
The function actually requires the length of dilation_rate/stides to be rank(input)-2. Otherwise, it will raise ValueError."
"Fix incorrect doc in sparse_softmax_cross_entropy_with_logitsThis fix fixes the incorrect doc in sparse_softmax_cross_entropy_with_logits.
In sparse_softmax_cross_entropy_with_logits, labels must be int32 or int64 (not the same as logits in existing docs), as is seen in:"
"Fix incorrect reference to version compatibilityThis fix tries to address the issue raised in #21434 where
the link to version compatibility is not correct.
The link should be version_compat.md, not version_semantics.md."
"modify _TopKGrad so that all operations can run on GPU for better performanceThis PR is intended to be a workaround to address #5719 by working on the Python client code level.
Recap:"
Fix markdown indentation in install_raspbian.mdNA
tf.clip_by_global_norm raise exception when use_norm = infFix #21363
"Fix issue in get_temp_export_dir under python 3This fix tries to address the issue raised in #21403 where
tensorflow.python.estimator.export.get_temp_export_dir
does not work correctly under python 3 due to the combination
of bytes vs non-bytes concatenation:"
Refactor dependencies so keras_support can be imported directly.PiperOrigin-RevId: 207569055
Fix readme formattingNo description provided.
"Fix bazel issue with jpeg lib on arm v7Without this, you'll get errors, because you end up including these files. This is already fixed when compiling for ARM v8, but wasn't fixed for ARM v7."
Don't include -lpthread for androidCreated to fix #21421.
Merge pull request #21386 from ageron:fix_unread_var_namePiperOrigin-RevId: 207588692
Updating the version to 1.10 final.No description provided.
Fix the name property for the _UnreadVariable class in eager mode (fi…xes #21384)
"Fix TFLite's Makefile error of the cross compile tool chain nameThe space between the CC_PREFIX and 'gcc' makes system failed to find the
correct gcc binary. This issue shown as soon as you run build_rpi_lib.sh with cross
toolchain used."
tensorflowDemoNo description provided.
"Fix lite Makefile; CCX, CC and AR flagsWhite spaces in declaration of CCX, CC and AR flags caused make: arm-linux-gnueabihf-: Command not found. Where arm-linux-gnueabihf- was given as CC_PREFIX."
"Fix issue with tf.nn.relu6 grad in eagerThis fix tries to address the issue raised in #21380
where the gradient of tf.nn.relu6 throws out an error.
The issue seems to be that relu6 was not placed
in OpDoesntRequireInput like tf.nn.relu."
"Fix the name property for the _UnreadVariable class in eager modeFixes #21384
This works, but I'm not entirely sure this solution is the right approach, your comments are most welcome."
"lib / pip_package: only include licenses if option is enabledThe license files were included unconditionally so the whole dependency
needs to be downloaded even if disabled and not used. This puts them
behind in a select() so they are only included when the feature is
enabled for the build and significantly reduces the dependencies when
configured without all the cloud options."
Raspberry Pi install command not properly formatted.Added proper formatting to the install commands.
Move bazel.rc to workspace root to support bazel-0.18.0Bazel 0.17.0 will contain a change for which rc files it accepts.bazelbuild/bazel@ec83598bazelbuild/bazel#4502
"nsync dep updatesA new version of nsync is released, this updates the workspace.bzl and adds nsync to the libs that can be unbundled. I've packaged nsync on Gentoo Linux and tested the full unbundled build."
"fix var type issue which breaks crf_decodeCRF decode can fail when default type of ""0"" (as viewed by math_ops.maximum) does not match the type of sequence_length."
[Intel MKL] Updating artifact references in Readme.md.Hi @gunan. This will update the README.md to show the status of the Intel public CI builds as well as the status of the Jenkins job to build the 1.9 release whls.
Fix the pip install TLS issue for pip test builds.PiperOrigin-RevId: 207319608
Minor doc enhancement in CheckpointSaverHookNo description provided.
register float64 GPU kernel for Conv3dFix #21295.
Support complex type for tf.Print (Fix issue #21250)Fix issue #21250
Support complex types for tf.PrintFix issue #21250.
[Intel MKL] Upgrade to Bazel 0.15.0.@gunan Can you approve this? This will fix out nightly builds.
Update README.mdAdd new links and descriptions about Tensorflow. The reasons is to make it more user-friendly and provide more informations to all the users so that they can get the informations quickly and learn more faster. I hope this would help all the communities and users.
[INTEL MKL] Conv3d enhancementEnhancement to support for  mkl conv3d op.
Cherry pick rollback into TF 1.10 to un-break Cloud TPUs w/TF 1.10Automated rollback of commit 590af17
Add scope for node placement and numerical_hint functionThis PR adds an nvidia_scope for users to be able to fine-tune trt conversion process and a numerical_hint function for future user defined quantization ranges in TRT.
"[tf.py_func()] Check Python interpreter state before callAttempting to acquire the GIL in a destructor when the process is terminating can fail, leading to a hang. Fixes #21277."
Fix typo in markdownFix missing `
[INTEL MKL] Fusing convolution with elementwise operators.No description provided.
Update cwise_op_mul_2.ccI think there's a typo.
"Fix shapes in comments of nmt_with_attention.ipynbIt is a bit misleading and confusing that the output shape of decoder is currently commented as (batch_size * max_length, vocab). However the correct shape should be (batch_size * 1, vocab), since the input x of GRU layer has shape == (batch_size, 1, embedding_dim + hidden_size)."
"kernel register bug fixIf the right kernel found, don't set was_attr_mismatch true."
Support connected componentsNo description provided.
Allow for python3.5 and 3.6 builds for MacOS.PiperOrigin-RevId: 206831440
"Add new Dockerfile assembler based on partialsThis change adds a new suite of TensorFlow dockerfiles. The dockerfiles come from an assembler controlled by a yaml spec, and are based on a set of re-usable partial dockerfiles. You can build any of the generated Dockerfiles to see how they work. See the new README.md for more information."
This adds a new way to manage our complex docker images.No description provided.
"Add extra log for failing to load variablesThere is a flaky in tensorflow/serving. There is a chance for loading a new model version to fail and then following version would all fail with the The specified SavedModel has no variables; no checkpoints were restored
related to this tensorflow/serving#1027"
fix the function name in the gide of custom estimatorI changed the name of some variables from my_model to my_model_fn because the model functions in this guide are defined as my_model_fn.
"Improve estimator.py doc-stringsThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
add debian stretch Dockerfile (CPU)No description provided.
Improve readability of Tensor::CheckType error outputNo description provided.
Merging the r1.10 branch back to master.No description provided.
Add Cloud Bigtable user docs for TF 1.10 releaseThis PR pulls in 2 existing commits from the master branch into the 1.10 release branch:
"Update libpng to v1.6.35This fix updates libpng to the latest version of v1.6.35 that was released on 07/2018.
(The last version of v1.6.34 was released on 09/2017)"
Add complex128 support for tf.as_stringThe tf.as_string supports most of the data types (including complex64) but not complex128.
Long awaited updateNo description provided.
Add the optional param to base64 encode estimator inputsThis may resolved #21234 .
Fix Linux XLA build status linkWas missing a )
"Fix typo in docstring of is_tensorThe isinstance builtin expects a tuple of types, not list."
Enable int64 support for MatMulThis fix tries to address the issue raised in #21241 where there were no int64 support for MatMul. This fix adds int64 support for MatMul.
Adding a less than constraint on numpy.No description provided.
Fix test breakages for rc1.No description provided.
Make full model before calling set_model on callbackCommit 1b67ccb removed the _make_train_function calls from Keras training fit_generator for eager execution.
"The method of open addressing is not quadratic probingThere are three method in open addressing: linear probing, quadratic probing and double hashing, they have such functions:
linear probing: h(k, i) = (h'(k) + i) mod m   (eq.1)
quadratic probing: h(k, i) = (h'(k) + c1 * i + c2 * i^2) mod m  (eq.2)
linear probing: h(k, i) = (h1(k) + i * h2(k)) mod m  (eq.3)
The difference between linear probing and quadratic probing is that there are quadratic component in quadratic probing, c2 * i^2.
But I can't see it in NextIndex():"
Add the document to avoid saving iterator while shufflingResolved #18583 by simply adding the instruction.
[XLA] Give test an independent nameThis change gives the test a different name.  I suspect that the existing name is a cut and paste error.  I have also added the ability to disable the tests using a manifest file.
Fix typo: host_src -> gpu_src for inter-gpu copyFix typo: host_src -> gpu_src
"enable fp16 for Batch Matmulsince there is relevant code in #18436, should be safe to enable it"
Faster implementation for constructing gradient of extract_image_patchesFix #20146.
use np.array to avoid copy behavior of index tensor for extract_image_patchesRelated to #20146.
Fix epoch loss calculation in \NMT with attention\ colab notebookThe epoch loss that's calculated in the current notebook is a bit inaccurate.
update to 3.6.x for fixes with Visual Studio 2017Update for fixes for visual studio std::call_once
ignore cmake build artifactsignore cmake build artifacts
"version_info.cc generated only onceversion_info.cc in the cmake files is generated every time when we build tensorflow and this forces rebuild of the whole project, since it is in the core library.
added make.bat for windows, which does the same as make.sh to be executed easily from a build machine. the default now is visual studio 17"
Nysnc and highwayhash cmake fixesNo description provided.
Quick Fix for Python 3.7Fix for 3.7 I made before I found #20766
"[CMAKE] Add MKL to PATHCurrently, instead of adding mkl_BIN_DIRS to the path, the path is replaced by mkl_BIN_DIRS.  I was getting weird errors from the generated command because my PATH was now gone. This PR adds the MKL binary path to the front of PATH  instead of replacing PATH ."
updating tf.Variable call in sample to execute with eagerthe current colab code errors out when it calls tf.Variable:
Use correct hash_bucket_size parameters/hash_buckets_size/hash_bucket_size/ since that is the correct argument spelling for the Python method.
"Added a normalization term to ctc_beam_search_decoderAdded a normalization term to ctc_beam_search_decoder in order to get correct log probabilities.
It solves #6034"
Keras TBCallback: Make batch-level logging configurable4921064 introduced batch-level metrics logging.
"make sparsemax nan and infinity safelogits that are -inf will be given 0 probability and logits that are
inf will result in a nan output. Likewise if all logits are -inf the
output will also be nan."
Reverting the numpy version for the Docker tests and builds.No description provided.
[Intel MKL] Adding support for MPI and Horovod to MKL containersNo description provided.
Windows gpu computeNo description provided.
Fix contrib in r1.10No description provided.
"Avoid installing newest pip and wheel versionshttps://bootstrap.pypa.io/get-pip.py  was updated (pip-18.0, setuptools-40.0.0 and wheel-0.31.1) on 22-Jul-2018"
Merge pull request #1 from tensorflow/masterupdate from origin
Fix compilation error due to typoFixed compilation error below due to the typo in identifier name 'cient_mu_' -> 'client_mu_'.
"[mkl]Fix gcc6.3 build link issuewhen we build tensorflow with gcc6.3 cpu  it will meet the errors below, this PR will fix this issue."
"Add tf.contrib.data.LMDBDataset supportThis fix tries to address the issue raised in #21129 where
there was no LMDBDataset support (only LMDBReader)."
support CI_DOCKER_BUILD_EXTRA_PARAMS for ci_build.shAllow user to specify docker build options.
"A faster BatchSelectFunctor for tf.where on CPU.Op 'tf.where(c, t, e)' supports that 't' and 'e' are N-D tensors while 'c' is a 1D tensor, which would call BatchSelectFunctor to get the result. But its basic implementation broadcasts 'c' to the same dimension with 't' and 'e', which would get bad efficiency on CPU for large tensors."
Fix typo: accidently -> accidentally.No description provided.
"fix: No need to convert to tensor in embedding_lookupfix: No need to convert to tensor when using ResourceVariable in embedding_lookup, because ResourceVariable support ResourceGather OP.
This is a performance improvement.
It will add a VariableRead OP behind ResourceVariable convert-to-tensor, which makes low performance."
[Intel MKL] Removing old MKL development DockerfileUse Dockerfile.devel-mkl instead.
"[CMake] tf_tests.py | Add CheckExistsFixes #10296
Replaces #15590@gunan /cc"
Wiring updateFix wiring issues in case engine building fails and add control connections to engines
TfLite : Prefixes in makefile for RPI aren't properly prependedThis was breaking RPI builds for me.
"Develop upstream fusionThis is for tensorflow-migraph integration work.   The work can run simple inference models. but still at the stage of debugging and interactive hand-shake with MIGraph.   Anyway, you can review it."
[tftrt_tests]unit test added for memory alignment test in trt.
install libnccl-dev in Dockerfile.gpu to fix missing nccl.hfix #21094 for ci_build.
"nGraph Integration with TensorFlowThis is the first revision of the integration of nGraph with TensorFlow. The nGraph provides a JIT compilation and execution of TensorFlow computation graphs. To enable nGraph, select the configuration option during running configure."
"Add PATCH_COMMAND to eigen.cmake (fix #19198)This PR adds the ability to apply a patch file to eigen as part of the build. Currently, Eigen has at least one issue under certain configurations. This PR is not to address any specific issue but to make the build more flexible. I linked a patch file below to fix the specific issue in #19198."
"Improve shape function for CudnnRNNParamsSizeIn cudnn_rnn_ops.cc, the CudnnRNNParamsSize does not have restrictions on num_layers, num_units, and input_size, though they all should be scalars."
Two improvements to tf.split's shape functionFixes #19360.
make build_pip_package work again on rpi3make something like
Updating to bazel 0.15.0.No description provided.
1.10.0-rc1 cherry-pick request: Update tensorboard dependency to 1.10.xTensorBoard 1.10.0 has been released to PyPI: https://pypi.org/project/tensorboard/1.10.0/
Remove functions from TFLite public Python API.No description provided.
"[INTEL MKL] Using MKL DNN sgemmAdded code to call MKL DNN sgemm when building from MKL DNN opensources only.  This PR depends on #21011, so it should be merged only after 21011 is merged"
"1.10.0-rc1 cherry-pick request: Expose proto serialization publiclyThis change is required to ensure TF Serving 1.10.0-rcX builds clean.
TF Serving 1.10.0 is based of TF 1.10.0 release."
"Let TrtEngineOp fallback to tf function call on failuresLet TrtEngineOp fallback to native tf function call for most of the failure cases, and fix a bug where it sets the status of the context but still execute the op."
Updating the version string to rc1.No description provided.
"Update re2 library to 2018-07-01This fix updates re2 library from 2018-04-01
to the latest 2018-07-01."
[Java] Improve creation of constant tensorsAllow simple creation of scalar values using the Constant operator. ex: ops.constant(0.0f);
"Replace `NWHC` with `NHWC`This PR replaces NWHC with NHWC. The array_ops.transpose(x, [0, 3, 1, 2]) performs NHWC to NCHW."
"Fix typosThis PR fixes some typos: not not, fuction, constrast, be be, is is, by by, Arithmatic, of of, Parition, Instatiate, orignal, to to, and mutliple."
update from tensorflow_masterNo description provided.
"Refactored lite makefile to centralize platform-specific settingsI'm working on making it easier to support platforms like the Blue Pill when compiling TF Lite, and as a step towards that I've moved the compiler options for each platform into sub-files. I've tested the Linux, Raspberry Pi, and iOS options, which work, and tried to build the STM32 options but I don't think I have the correct toolchains. I'm hoping this is a fairly mechanical change as a start though, and will make it easier to add new platforms going forward."
fix typofix typo
typofix typo
Fix:  Validate variable dtype before restoring checkpointFix #20487
"[tftrt]trt 4 update input check on tensor dimensions.
relaxing tensor dimension for trt 4 to support non-4-dimensional inputs
added unit test (currently disabled due to failed INT8 conversion)"
Network.to_json should handle numpy.ndarray correctlyPick the fix at keras-team/keras#10754 to tf.keras.
Workaround for RefCounted error when using custom ops.Fixes #17316.
[tf.keras] Bug - Fix Stateful Metrics in fit_generator with TensorBoardDescription:
"add Kernel Inception Distance to tf.contrib.gan.evalThe KID is a score similar to the FID, but with an unbiased, asymptotically normal estimator. It was introduced by our paper Demystifying MMD GANs; a very similar metric was also recommended by An empirical study on evaluation metrics of generative adversarial networks."
Disable sdca test on all GPU builds.This test uses ops that don't have GPU implementations.
Fix some minor typo/formatting in 1.10 release notes.No description provided.
"Remove unneeded s3_crypto[.cc,.h] filesBoth s3_crypto.cc and s3_crypto.h have been moved to
aws_crypto.cc and aws_crypto.h files. However, due to some
overlapping merge or update, s3_crypto.cc and s3_crypto.h
reappeared."
"[tfgan] Respect use_loss_summaries in GANEstimatorSince the refactor done in 47dea68 the use_loss_summaries argument of GANEstimator isn't respected anymore.
This PR restores the original behavior and passes use_loss_summaries down to the loss functions."
EXA: Fix eager variable calls in notebookThis PR aims at fixing a RuntimeError happening twice during notebook execution on Colab with TensorFlow 1.9.0.
[tf.keras] Add missing cast in keras/layers/normalization.pyscale needs to be casted into the right data type
[XLA] Allow the iota test to be disabled with a manifest fileThis adds the option to disable the iota test using a manifest file.
"Adding a callback function register to improve flexibility of KerasHello everyone, I added one member function in DirectoryIterator class allow developer to register callback functions when pumping data by flow_from_directory of ImageDataGenerator class. It's can improve flexibility when have complex data structure of feature and label. It's very useful to register a customize function to process their own logic to integrate the batch_x and batch_y. It can make the DirectoryIterator pump the data structure what the model required."
"Adding a callback function to improve flexibility of KerasHello everyone, I added one member function in DirectoryIterator class allow developer to register callback functions when pumping data by flow_from_directory of ImageDataGenerator class. It's can improve flexibility when have complex data structure of feature and label. It's very useful to register a customize function to process their own logic to integrate the batch_x and batch_y. It can make the DirectoryIterator pump the data structure what the model required."
"Update protobuf to 3 6 0 1Fixes issue with std::call_once in visual studio 2017, std::call_once is called twice sometimes"
"Templates DataTypeToEnum and associated structs on type propertiesThis PR addresses the bug outlined in #20586. Rather than relying on all systems to define the int64 data type in a manner that is consistent with a long long, this PR inspects the properties of the type. For instance, int64 is a signed, integral type with a size of 8 bytes."
"[BugFix] Fixes #20983 - Store py_func dtypes for correct conversion^ WIP on the CI errors - they were due to the FuncRegistry._convert() being used from dataset_ops.  If this is being called this way, should _convert (better name?) be exposed from script_ops more officially (not through the FuncRegistry)?"
Clean coding.ccFix of a compile time issue
"cmake: add systemlib_GRPC option.This is still a work in progress, don't merge."
Fixed typo in TOCO command line docNo description provided.
Update Go README with working bazel config flagThe bazel --config flag wasn't working. Had to use -c.
"Fold BN after depthwise convBN can be folded to Conv2D for inference, I find it is also correct for DepthwiseConv2dNative.
I got the MobileNet model from https://github.com/tensorflow/models/blob/master/research/slim,  graph transform was applied and the correctness was verified via label_image sample."
Add C++ gradients for some image operators.Added gradients and tests for
"[tf.contrib.slim] Update documentation in evaluation.pyFixes #12357.
Update the documentation and test the sample code. It works."
fixed build error on gcc-7fixed build error
Add a missing left bracket in commentsNo description provided.
Fix typo in windows build scripts.No description provided.
[Intel MKL]: Upgrading to MKL-DNN v0.15This PR upgrades Intel MKL-DNN library to v0.15. It also includes a small change that makes convolution compatible with that library version.
Add no_pip_gpu to the sdca test.Second attempt to disable on GPU release build.
[INTEL MKL] Fix for regressions in //tensorflow/python/ops/parallel_forNo description provided.
"Numpy ndarray should be serialized as Python listPick the fix at keras-team/keras#10727 to tf.keras.
This PR can fix #22062 and keras-team/keras#11023 as well."
"Hardcode Protobuf library version in contrib/makefiles (r1.10 branch)Note: The Protobuf source in tensorflow/workspace.bzl in TensorFlow
1.10 branch does not work. make distclean fails and blocks the build
process. For now we're hardcoding to the version which is used by
TensorFlow 1.9."
"Disable sdca_ops test on GPU.This test is failing on GPU. Some of the ops don't have GPU
implementations so this test might not even be meant to be
run on GPU."
"Hardcode Protobuf library version in contrib/makefilesNote: The Protobuf source in tensorflow/workspace.bzl in TensorFlow
1.10 branch does not work. make distclean fails and blocks the build
process. For now we're hardcoding to the version which is used by
TensorFlow 1.9."
"Rename CUDA GPU ID to platform GPU IDRename CUDA GPU ID to platform GPU ID so the notion is applicable on both CUDA
and ROCm platform."
"Terminology changes in bazel scriptsQuite a few functions in TF bazel scripts can be used on both CUDA and ROCm
platform. In this commit rename them to more generic term:"
"Update fold_old_batch_norms.ccFixed my previous fix, we only want to copy if there is a data_format attribute."
[tflite label_image] get output size from output tensoraddress the issue #20485 found by @jbuisson1
Update saver.pyFix device placement of save_op for ResourceVariable.
Link lib and header where ./configure expectsNo description provided.
Fix typo in install_python3.6_pip_packages.shNo description provided.
"Fix inappropriate argument names in c_api.ccIn Python3.7, a word async became a new reserved keyword.
Unfortunately, some functions in c_api.cc use the word async as argument names.
During tensorflow building, c_api.cc is converted to python wrapper by swig tool.Swig uses the same name async in the wrapper functions.
This causes the syntax error in python 3.7.
The tensorflow building with python 3.7 thus ends up with failure without this fix."
"Update or-tools to v6.7.2This fix updates or-tools from 253f795 (dated 03/21/2017)
to the latest versioned release version of v6.7.2"
Fix custom plugin sample testNo description provided.
Typo in tf.Session fixedNo description provided.
[XLA] Disable tests which do a windowed reduction on a scalar sized windowThis change allows some tests in the reduction test suite to be disabled using a manifest file.
"Update keras.mdtf.keras.models should load model configuration with model_from_json or model_from_yaml, not from_json or from_yaml"
Reset the unique_ptr instead of releasing it which cause memory leakNo description provided.
"[CMAKE] Fix cmake build error related to #20669In this PR, we fixed cmake build error when generating python pip package."
Update RELNOTE formatting.No description provided.
Fix examples_test.sh script which was broken by added debug_keras test.No description provided.
Add SQLITE_OPEN_URI flag to sqlite open to fix create_db_writer failure to open the dbRepro:
Update Eigen commit pointer to the commit that adds AMD GPU support in EigenUpdating the eigen commit pointer to the commit / PR that add the AMD GPU support in the Eigen codebase.
R1.10 cherry-pick request: Fix TensorRT build/test problems.No description provided.
"Remove remove_undocumented from parallel_for.This isn't needed in core TF code as we have the public API
generation tool now. Also, this causes problem with the release
pip tests."
"Improve error messages for gather_nd and scatter_ndUse SliceDebugString to produce nice error messages using
multidimensional indexes."
Adding MKL DNN license from Intel's repo.No description provided.
Cherry pick MKL license change into 1.10No description provided.
"Add additional shape validation for QuantizedAddThis fix add additional shape validation for QuantizedAdd
with min_x, min_y, max_x, max_y."
Update install_pip_packages.shInstall h5py to fix a mac release build issue.
"Remove usage of remove_undocumented from core parallel_for.remove_undocumented is causing issues with our pip tests.
remove_undocumented is not used anywhere else in core TF code
and we have a new mechanism for annotating the public TF API."
Fix tf_trt_integration_test in py3No description provided.
Add gradient for tensorflow::ops::FillSee #20926
"Recommend the user site, no sudoUsing sudo to upgrade a pip which was installed by apt-get messes up the system environment and causes issues.  Recommend to use the user site for installing tensor flow."
Floating point type issue when computing extract images patches gradientI was using tf.extract_image_patches when I ran into this issue.
Resilient Backpropagation OptimizerRprop was originally proposed by Riedmiller and Braun in the paper A direct adaptive method for faster backpropagation learning: the RPROP algorithm
pullNo description provided.
"Edit  a link to notebooks directoryBottom of this document, a link to notebooks directory who has tutorial misslinked.
Need to change from .. to ../notebooks."
"Update keras.mdtf.keras.models should load model configuration with model_from_json or model_from_yaml, not from_json or from_yaml"
Print errors during bazel tests.Adding the test_output flag to print for errors.
R1.10No description provided.
Added simple_load moduleThanks! Please also run the test suite and update the API goldens.
NCCL 2.x Release notes section updated.No description provided.
Update bazel version in docsUpdate bazel version for mac/linux install_sources.md.
Link lib and header where ./configure expectsNo description provided.
Upgrade Bazel to 0.14.1PiperOrigin-RevId: 204763605
Version cc generated only onceThis is a fix of an issue with tensforflow version cc
Documentation updateLooks like it was copy-pasted from moutput_arrays
"Use the latest release version instead of masterMaster branch is subject to change, so to make build predictable it's better to lock dependencies on the particular version"
Add int32/string k/v support for tf.contrib.lookup.HashTableThis fix tries to address the issue raised in #20869 where there were no int32/string k/v support for tf.contrib.lookup.HashTable. This fix adds the int32/string for the kernel.
correct urlcorrect broken url for 1) Eager Execution
Small typo fixNo description provided.
make TFLite kernel tests work againThe pow_test.cc introduced in (51c80b6) doesn't build with
NCCL 2.x document updates and removal of license fileNo description provided.
R1.10 cherry-pick request: Fix tensorrt conversion to ignore all preserved nodes@samikama please help to make sure the change is correct.
"[tftrt]Added alignment in trt_allocator
Since TensorFlow gpu_bfc_allocator does not abide to the alignment requested."
[Intel MKL] Adding support for MKL builds with AVX2.MKL-DNN ignores the compiler switches and takes code paths based on the platform detected at runtime. This commit will add support for avx2 instructions to the rest of TensorFlow.
Support dense tensors in _SequenceNumericColumnResolves #20478
[WIP] ProIO DatasetNo description provided.
Update version strings for 1.10No description provided.
R1.9 cherry picks docsTrying to eliminate a problematic cherry-pick commit from #20704
"Improvement of shape function in HistogramFixedWidthIn the HistogramFixedWidth op, there are restrictions over the shape of range_value and nbins. The range_value should be a vector of 2 elements and nbins should be a scalar."
Add support for possible extra : in input namesThis PR adds support to handle node/tensor names with : in their names in the NodesToKeep list.
Use com.android.support.test instead of com.androidx.testThis PR should fix #20748 and #20828
Add initial draft of RELEASE notes for 1.10.No description provided.
Describe that the semantics of gfile are different.Fixes #19296.
"Omit some operations if only one para is kLogZeroIf log_prob_1 is kLogZero and log_prob_2 is not kLogZero or log_prob_2 is kLogZero and log_prob_1 is not kLogZero, just return another parameters, this judge can omit some operations(log1pf() and expf()).
The mathematical equation is:
ln(e^(-inf)+e^(x))=ln(0+e^(x))=x"
Test and fix the timer in InMemoryEvaluatorHookRemoved the extraneous return statement inside _evaluate that prevented calling update_last_triggered_step. Now the hook will run at the appropriate iterations.
"Use FastBoundsCheck in ArgMax kernel opThis fix updates ArgMax kernel implementation to
use FastBoundsCheck for improved performance, and
keep consistency with other places in tf."
"[tfgan] Fix assertion in regularization loss unittestself.assertTrue(3.0) always evaluates to True.
This PR fixes assertion so it will correctly check the loss values as set here."
[WIP] fix: InMemoryEvaluatorHook timerThere is an extraneous return statement inside _evaluate that prevents update_last_triggered_step from being called. This causes the hook trigger at every iteration.
Adding MKL DNN license from Intel's repoAdding the LICENSE file so that third_party/mkl_dnn LICENSE file is picked up upon MKL configured build.
Fix bug inside boston.py in boosted_trees with python 3This fix tries to address the issue raised in #20776 where run the sample with boston.py in boosted_trees throws out error with python 3:
fix invalid check of ShapeForPlaceholderFix invalid check of ShapeForPlaceholder
"Fix typo in bounding box exampleThe example in the tf.image.draw_bounding_boxes documentation has a typo that makes it really confusing. The relative values for [y_min, x_min, y_max, x_max] are computed by:"
Add all keep nodes to output listsAdd all nodes to keep to output list of tftrt conversion
[XLA:GPU] avoid hard coded CUDA PlatformIdFollow OpKernelConstruction -> DeviceBase -> GpuDeviceInfo -> Stream -> StreamExecutor -> Platform to get platform ID
[Intel MKL] Upgrading the the CI install_bazel.sh script to install bazel 0.15.0See 1e24383
"Patch boringssl for ppc64leThis commit adds a patch file for the bazel BUILD file contained in the
boringssl.tar.gz file. It set the necessary compile options to build boringssl
on pp64le. (Basically adds linux_ppc64le everywhere linux_x86_64 is)"
"Consolidate versioning for GPU hardwareDifferent methods are used in GPU common runtime, StreamExecutor, and XLA to
track GPU hardware versions. To support upcoming ROCm SteramExecutor and AMDGPU
XLA, it's now consolidated to DeviceVersion in StreamExecutor in this commit."
Feature requested by issues 18354: No gradient defined for operation DepthwiseConv2dNativeBackpropFilterFeature requested by issues 18354: No gradient defined for operation DepthwiseConv2dNativeBackpropFilter
Fix an broken URL in security/index.mdFix an broken URL in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/index.md
"[tftrt update]Added python tests for converter functions
Added BUILD for python tests"
"Fix the gradient update in the word2vec exampleThe gradient update should be x <- x - alpha * gradient, not x <- x + alpha * gradient."
Fix tf.Print summarized format bugThis fix fixes the issue raised in #20751 where tf.Print may miss ... at the end with summarize.
"Python 3.7 fixes""async"" became a reserved word in Python 3.7. I replaced with ""is_async"", which was already used for such flags in other places. An alternative suggestion, if the is_ construct is deemed too ugly, might be to use the full term, ""asynchronous""."
New Feature: #12686 SoftmaxCrossEntropyWithLogits gradient functionCommitting in a new PR as the old PR has too many commit files
"Add a donate button to README.mdThe donate button is a link to https://boost-lab.app/tensorflow/tensorflow, which provides potential donors the freedom to financially support the developers of tensorflow."
"Fix invalid link in security advisories pageThe link in security advisories page was invalid and caused incorrect rendering in markdown, should be [SECURITY.md](https://...) instead of (https://...)[SECURITY.md]. This fix correct the link issue."
"[XLA:GPU] let GpuTransferManager take different StreamExecutor and LLVM CompilerGpuTransferManager is tied to CUDA StreamExecutor and LLVM NVPTX backend thus
far. In this commit refactor its constructor so it's possible to take different
StreamExecutor instances and LLVM backends."
"Add cyclical learning rateAdd cyclical learning rate as reported by Leslie N Smith. Cyclical learning rates for training neural networks. arXiv preprint arXiv:1506.01186v3, 2016."
"[XLA:GPU] terminology change in GpuExecutableTo cope with upcoming introduction of AMDGPU support in XLA, change terms used
in GpuExecutable."
"Add cyclical learning rateAdd cyclical learning rate as reported by Leslie N Smith. Cyclical learning rates for training neural networks. arXiv preprint arXiv:1506.01186v3, 2016."
Let segmenter able to detect invalid input/output segment nodes beforehand.Changes include:
"[XLA][AMDGPU] use AddrSpaceCast to access GlobalVariable on AMDGPUIn XLA kernels pointers are in default address space (0). On LLVM AMDGPU
backend, all GlobalVariable instances must be in global address space (1).
Therefore an AddrSpaceCast is required for AMDGPU backend. To cope with
existing NVPTX backend, use ConstantExpr::getPointerBitCastOrAddrSpaceCast
in this commit."
"[tf.keras] Fix input shape for 1D output using tf.data.DatasetUsing keras models with one dimensional outputﾂ together with the tf.data.Dataset API will fail due to the shape validation introduced in 677b4cf since the dataset will have output shape (None,) but keras expects shape (None, 1)."
"[XLA:GPU] rename GpuCompiler to NVPTXCompilerTo cope with upcoming introduction of AMDGPU support in XLA, rename GpuCompiler
and associated gpu_backend_lib module to NVPTXCompiler and nvptx_backend_lib."
[XLA][AMDGPU] enable AMDGPU targetEnable AMDGPU target in XLA GPU build
Merge crop_and_resize with resize_bilinear_op internalsImproves performance of crop_and_resize.
Fix for issue# 20361 - changed the test cases' inputs and expected su…ch that it passes on both x86 and ppc64le.
[tf.keras] Fix deprecated use of normal distribution in initializersUsage of distribution='normal' in VarianceScaling initializer was deprecated in #20197 and replaced with truncated_normal.
"Putting batch_axis,seq_axis instead batch_dim, seq_dim accordingAccording to this"
[tfgan] Remove outdated estimator TODOTraining discriminator and generator with different ratios can already be done using get_hooks_fn.
Fix for LNK2019 error when compiling tf1.9 with CMake on Windows due to missing definition.This is the suggested fix for the missing NumHyperthreadsPerCore definition #19761 which is still present in release 1.9.
Fix incorrect link in security advisory TFSA-2018-001This fix fixes the issue raised in #20722 where the commit link in security advisory TFSA-2018-001 was incorrect.
Update README.mdAdd 64 bit support when available
Update README.mdAdd 64 bit support flag for the mobile app
Update README.mdAdd 64 bit support flag in instructions for building the TFLite mobile app
"Update ci unit test to use Bazel 0.14.1ci_parameterized_build.sh is currently failing because it installs
bazel 0.11.0 which is missing the function setup_vc_env_vars
in windows_cc_configure.bzl. This function was added in a later
bazel version. I see other parts of Tensorflow moving to 0.14.1,
doing the same here."
[ROCm] rocBLAS BLAS algorithms integration logic in ROCm StreamExecutorPlease focus on the content in commit c12b7df
[ROCm] MIOpen DNN algorithms integration logic in ROCm StreamExecutorPlease focus on the content in commit 7c87476
[ROCm] rocFFT integration logic in ROCm StreamExecutorPlease focus on the content in commit 1a34db1
Fix copied bufferFixes #20656
"Merge r1.9.0 branch back into masterDoing this to basically pick up version string changes, make tf.git_version show 1.9.0 tag
when building on master branch, and to make sure to pick up any fixes committed directly
to the release branch."
[ROCm] StreamExecutor logic for ROCm platformPlease focus on the content in commit 33505b8
"[ROCm] add scratch memory size in AlgorithmDescCertain algorithms in MIOpen, the DNN library on ROCm platform, requires
scratch memory be allocated in TensorFlow and passed to MIOpen at runtime."
Highwash fix for rebuildhighwash works the same way now as the others.
"[ROCm] Interface changes for pooling APIs in StreamExecutorDue to the design of MIOpen, the DNN library on ROCm platform, an instance of
ScratchAllocator has to be passed into pooling routines. This commit address
such interface changes and the implementation in CUDA StreamExecutor."
Match for path instead of nameNo description provided.
R1.9 cherrypick docsLatest updates and fixes into 1.9 so we can generate the site
Implement GetCurrentClockCycle and GetCycleCounterFrequencyImpl for WindowsNo description provided.
Use FastBoundsCheck in roll_op.ccThis fix is a small enhancement of using FastBoundsCheck in roll_op.cc. The usage of FastBoundsCheck is fairly commonly used in other kernel implementations.
Fix a couple typosFixes typos its to it's and retrive to retrieve
"rename interfaces in StreamInterface and StreamExecutorInterface to support both CUDA and ROCmIn this pull request, 2 interface changes are proposed:"
Fix incorrect documentationprocess detailed in comment is not the one in the code. This isn't anything code breaking but it's nice to have correct documentation.
"Add complex support for tanAt the moment tan in tensorflow supports float and double, but not complex types."
[tf.keras] Remove relu6 and unused importsNo description provided.
"Fix masking of beam ids in gather_tree_from_arrayThe sequence_length argument that is passed to the function is the
lengths of the reordered predictions and was incorrectly used to
mask beam ids before reordering. Instead, we can reorder beam ids
without caring about out of range steps and only select the reodered
ids that are in bounds."
Use unique name for lookup opsAdd the unique names for lookup ops so that we don't need to specify op names when saving and restoring checkpoints.
"Fix shape fnThe shape fn used context->input_tensor(i) which will result in segfault since the tensor is not available during shape inference. This PR fix the issue as well as making sure that the input/output shape set in the attr match the actual shape before it proceed. The ideal solution would be to run the shape inference using the subgraph, but I'll leave it to the future."
Required import for workshop notebookRequired fix for workshop notebook to function correctly (cc @mdanatg)
Update cython to 0.28.4This fix updates the cython to the latest versioned release of 0.28.4 (released in 07/07/2018).
[tf.keras] Bugfix - Add Stateful Metrics to fit_generatorDescription:
Update 1_basic.ipynbNo description provided.
Fix json notebookNo description provided.
"Fix build for Tensorflow Litetensorflow/contrib/lite/tools/benchmark/benchmark_params.h:
Move GetValueType() to protected because it's called byTypedBenchmarkParam."
sys/sendfile.h does not exist for FreeBSD.sys/sendfile.h should be ignored for FreeBSD as it is ignored for Mac OS X.
"Fix typosThis PR fixes some typos: unecessary, parition, seperately, exectutes, ouputs, funcion, funtions, and corresonding."
"Update deploy docs to use Minio distributed mode as wellBased on discussion here (minio/minio#5797 (comment)),
distributed erasure code deployment works fine with Tensorflow."
[INTEL MKL] Enabled reorder primitive reuse for conv backpropNo description provided.
Add pets_labels_list.txt to Android exampleAdd pets_labels_list.txt to Android assets directory for TensorFlow Lite Object Detection app.
Delete 3_datasets.ipynbNo description provided.
fix the bug that InMemoryEvaluatorHook prints in every iterFor issue #20622
Fix unused status error in convert_graph.ccNo description provided.
Correct CUDA v9.0 download linkChanged link to download CUDA to the right version.
"Fix: Typo in the release noteThere is a small typo in the release note (RELEASE.md).
This patch fixes it."
Adding matrix square root opThis PR adds the matrix square root op support requested in #9202.
"Add scope name to TF_AddGradientsActually, adding gradients ops to a graph using TF_AddGradients always put them under the ""gradients/*"" scope. This PR is to allow a client to create the gradients under a different scope."
First pushNo description provided.
"Fix the order of adding const nodes, and avoid adding them multiple times.No description provided."
Branch 203518000No description provided.
Typo in taskset for CPU affinityNo description provided.
"Remove unused gcp and hdfs config flags, as these are on by default now.PiperOrigin-RevId: 202753310"
Make protocol used in estimator customizable.Example code as follow:
Updating the version to 1.9.0 official.No description provided.
Update sqlite to 2.24.0This fix updates sqlite from 3.23.1 to 3.24.0.
"Add a deserialization warning about Pickle in vocab files in some models to the security guidehttps://github.com/tensorflow/tensorflow/blob/master/SECURITY.md
have no any mentions that models often have Pickle files attached like vocabs.
These files should be validated before running. An exploit example is available here: https://gist.github.com/mgeeky/cbc7017986b2ec3e247aab0b01a9edcd"
[Intel MKL] Adding support for python3 to MKL DockerfileFixing a bug that locked MKL Dockerfile to python 2.
"[Intel MKL]: Fixing AVX Performance IssueThis PR fixes the MKL performance on machines with AVX instruction set by using some functionality from MKL binary version. Also, a new config option was added. If that option is used, only MKL-DNN open source lib will be used, without depending on MKL binary version."
"fix issue with nsync which copies the headers every buildreworked nsync to be like png and zlib cmake files.
it copied the nsync headers on every build and this triggered rebuild of the whole tensorflow project on windows"
update pin of bazel-toolchain repo for bazel 0.15.0 config releasebazel-toolchain repo updated for the bazel 0.15.0 config release
R1.8I signed Contributor License Agreement (CLA).
Resolve issue 17698: Session JNI interface has memory leakQuick fix #17698
Update resnet_v1.pyNo description provided.
"Expose `tf.contrib.layers.conv1d` like conv2d/conv3dThis fix tries to address the issue raised in #20551 where tf.contrib.layers.conv1d is not exposed.
In tf.contrib.layers even though conv1d/conv2d/conv3d are all available, the conv1d was not exposed like conv2d/conv3d."
"Check parameters before creating gRPC serverWhen creating gRPC server with task_index=-1, TF just aborts (core dumped):"
Use abs() rather than sqrt() for mfcc mel filter to prepare the spectrumIt's more sensible to use power spectrum than amplitude spectrum.
"Fix a small compilation failed bug #20545Fixed: #20545
Line 86: details.name += "":"" + string(profiling_string); should be details.name += "":"" + std::string(profiling_string);"
Changing minor tolerance to pass linalg_grad_test on ppc64leFixes: #19935
"[MSVC] Disable C++ exceptionsIn MSVC, the flag to disable exception is /EHs-c-. /EHsc will enable exception (i.e. Tensorflow have been built with exception on Windows for years)."
[Bazel/MSVC] Make Kafka builds on WindowsWorking towards enabling //tensorflow/contrib/kafka for Bazel on Windows.
[Bazel] Bump boringssl versionUpdate boringssl from 18 Oct 2017 to 4 July 2018. Contain a few fixes for Bazel on Windows.
fix: slot and primary can be different shapeSee github issue #19457
[Bazel/MSVC] Enable png SIMD for MSVCNo description provided.
[Bazel/MSVC] Enable jpeg SIMD for MSVCNo description provided.
[Bazel/MSVC] Cleanup flags and config_settings for MSVCNo description provided.
"r1.9-cherry-pick-request: Docs updates for tutorials, guides, and notebooksThis documentation update brings 1.9 up-to-date with master for tutorials, guides, and the eager notebooks.
This is a straight checkout from master---no commit cherrypicks, no merges. Only the doc files are updated. This loses some history for these late commits on the 1.9 branch, but that's not very important. Commit history is maintained on master."
"Reapplying #20285 for the fix to convert_graph.ccThe fix was lost due to some (unknown?) merging issues, similar to the  one mentioned in #20460."
Branch 203192045No description provided.
Add tflite performance pageNo description provided.
Move get_started to tutorials and rearrangeNo description provided.
Using shallow clones from git repos in CMake buildNo description provided.
"Update calling of expand_dims with axisThis fix updates calling of expand_dims with dim -> axis
as the dim= in tf.expand_dims has been deprecated and
was generating unnecessary warnings."
Update grpc to v1.13.0This fix is an update to grpc v1.12.1.
Update .gitignore for cmake generated fileWhile running cmake in Linux:
"[Update debugger.md] Fix error in sample codeFix issue of ""function object is not subscriptable"" in sample code:
np.ones[10]->np.ones(10)"
avoid signed unsigned comparison warningNo description provided.
Andrewharp patch 1No description provided.
"Enable crc32c acceleration for MSVCUse TestCPUFeature instead of __builtin_cpu_supports to dynamically detect SSE4.2 support.
This will allow us to enable crc32c acceleration for MSVC and old Apple clang."
Fix int64 to int truncation in std::accumulateFrom https://en.cppreference.com/w/cpp/algorithm/accumulate
"Better with -L for following link, and libudnn should be libcudnnIn my case, cuda in /usr/local is a link to /opt/cuda-9.0, so better with -L for following link here.
The libudnn here I think should be libcudnn."
"Better with -L for following link, and libudnn should be libcudnnBetter with -L for following link, and libudnn should be libcudnn"
Branch 203039240No description provided.
Match for -path instead of -nameNo description provided.
Text generationText Generation with Tensorflow Eager Execution
"Reapplying #20254PR #20430 contained 151 commits, one of which backleveled PR #20254."
Branch 202995903No description provided.
Branch 202961895No description provided.
"bugfix: cleanup CondContext at exceptionThis fix is to solve a bug: if an exception occurred in tf.cond(),  the CondContext is left uncleaned. The bug causes unexpected problems, for instance, tf.Variable(tf.zeros(20)) will not work!"
"Fix matrix_inverse_tril_test handling the inverse of 0The inverse of 0 is undefined, so when computing the inverse of a lower
triangular numpy array, we need to ensure the zeros in the upper
parts of the triangle remain as zero. After doing the inverse
of an array, iterator over the array and set the values above the
main diagonal to zero.
See: numpy/numpy#11445Fixes: #20013"
Improve the shape function of BincountThis fix tries to improve the shape function of Bincount.
"Exclude importing tensorflow.contrib.cloud on WindowsThis is a follow up to fix import error in tensorflow/contrib/init.py on Windows, which is caused by 654eb3d"
R1.9update
Reapplying #20295No description provided.
"Update Google Python Style Guide linkUpdated the link to Google Python Style Guide, it was pointing to the deprecated guide.
The new updated guide."
"fix bug in maxout functionThe line ""shape[axis] = -1"" will make the shape wrong when dealing with batches with arbitrary sizes.
if the shape of input tensor is [None, ... , num_channels, ... ], ""shape[axis]=-1"" together with ""shape+=[num_channels // num_units]"" will make the shape become [None, ... , -1, ... , num_channels // num_units]. But when reshape the input tensor, the ""None"" element in shape will make ""-1"" become ""None"", not ""num_units""."
Added minSdkVersion to the manifestFixes #20453
"Fix build issue on mac with python-2.7.10 and clang 9.1.0In PR 19993 the build issues on macOS with python2.7.10 and clang-9.1.0 were fixed. However, later on it looks like the order of <locale> and <Python.h> has been changed in 1e7b0e4, possibly caused by clang-format -i --style=."
Removed unused lambda captureNo description provided.
Removed unused lambda captureNo description provided.
"Advise batch_normalization with model_to_estimatorWe need to advice users, in the new 1.9 keras guide, to not use batch normalization with estimators created with model_to_estimator."
Fix broken Android demo app download linksThe old links didn't work:
Branch 202673820No description provided.
Image Captioning with Attention in TensorFlow Eager ExecutionImage Captioning with Attention in Tensorflow Eager Execution
Branch 202667025No description provided.
Exclude test sources from stream executor builds.PiperOrigin-RevId: 202423156
"Stream executor should no longer depend on XLA for statusor.We can remove this dependency now that stream executor does
not use XLA's statusor."
Removed duplicated line in bazel.rcNo description provided.
Update kafka to v0.11.4This fix updates kafka from v0.11.1 to v0.11.4
Syntactic Sugar: Utilizing dict comprehensionNo description provided.
BindToDevice() binds graph to specified (gpu) device which forces all its operations to be prcessed on that device.Export to golang as well.
fix todo in session_test with list deviceNo description provided.
"Update nasm from 2.12.02 to 2.13.03This fix updates nasm from 2.12.02 (2016-07-06)
to the latest version of 2.13.03 (2018-02-07)"
"Update eager notebooks with buttons, licenses, and change filenamesNo description provided."
"Update nasm from 2.12.02 to 2.13.03This fix updates nasm from 2.12.02 (2016-07-06)
to the latest version of 2.13.03 (2018-02-07)"
[Intel MKL] Adding support to checkout both branches and tagsHi @gunan. This PR will allow us to generate and publish MKL whls and containers from both branches and tags. Thanks for your help!
Fix install location for Eigen headers in pip build.No description provided.
Branch 202534388No description provided.
Potential fix for how pip installs headers used for custom ops.No idea what Im doing really. The eigen headers seemed to get moved around a ton. They get copied into like tensorflow/include/external/eigen_archive/Eigen... by some build pip script. Then setup.py moves them again directly into tensorflow/include/Eigen?
Update beam_search_decoder.pyminor change in example
"fixed order: first create the config, then use itNo description provided."
Fix tf.contrib.ffmpeg.decode_video errorThis fix tries to address the issue raised in #20348 where ffmpeg on Ubuntu 18.04 causes the error when decoding video. The reason was that different versions of ffmpeg may place Input/Outpu/Stream mapping sections in different orders in the stdout/stderr.
create platform for remote execution@erain @yifeif @gunan - could you please review? thanks!
Add JavaScript to list of languages not covered by the backwards compatibility guaranteeJS should be listed at https://www.tensorflow.org/api_docs/ as well.
"Fix gradient of nccl_opsIn Python3, op.get_attr returns bytes, not str, which causes many failures."
Remove old get_started/index.mdUsing _index.yaml instead
Build OpenBLAS 0.3.0 on ppc64le for TF testsUpdates for TF tests on ppc64le.  Update to OpenBLAS 0.3.0 for ppc64le TF testing.  Also set OMP_NUM_THREADS=1 at runtime due to multi-threading issues.
Added Linux CPU with Intel® MKL-DNN® community supported buildHi @gunan. This PR adds a link to the README.md community supported build table for Linux CPU with MKL. The broken link for the badge is because the  HTTPS certs on the server haven't been pushed yet. I'll ping you when they're in place; but I wanted to get this to you beforehand.
Update version strings for TF 1.9.0-rc2.No description provided.
"TRT 4.0 updateupdated feature support for TRT 4.0 layers
disabled broken shape inference (added TODO)
removed unused code
code is compatible with TRT 3.0.4"
"update protobuf requirement to 3.6.0 for pipsince protobuf dependence was update 3.6.0 in 3bfd3ae (this was actually a part of @gunan's 3bfd3ae. Probably, it's reverted when merging 1.9.0 back to master), there are incompatible
problems on machines with 3.4.0 < protobuf version < 3.6.0."
make benchmark_model for tflite buildbenchmark_model doesn't build for desktop as reported at #20313
Fix checkpoints link in keras guideNo description provided.
Add a corrected link to Eager GuideNo description provided.
Fix code block formattingNo description provided.
1.9-cherry-pick-request: Doc updates for get_started page and navThis is a docs only change.
Fix XLA header issue for pip build.No description provided.
Fix leftnav for get_startedNo description provided.
Branch 202187999No description provided.
DOC: add missing parenthesis in tf.keras docsNo description provided.
Use tf_optimizer.OptimizeGraph to implement create_inference_graphThis PR also fixed two bugs:
Remove empty section links on get_started pageNo description provided.
Branch 202152026No description provided.
R1.8No description provided.
Fix source URLsNo description provided.
Fix for RPi OpenBLAS build problemMain branch version of #20310
"r1.9-rc2 cherry-pick request: Fix for RPi OpenBLAS compile issues, by pinning to known good versionOpenBLAS broke the Raspberry Pi build, and I wasn't pinning to a particular version before this, so it broke even the 'frozen' 1.9 branch."
update pin of bazel-toolchain repobazel-toolchain repo updated to the latest release according to:https://releases.bazel.build/bazel-toolchains.html
fix tests in lite/kernels/internalmake
Add #define guards for get_xxx_tensorrt_version() to fix an internal ci build error.I verified the fix by running:
[Intel MKL] Added instructions to build Tensorflow with Intel MKL DNN.No description provided.
"Cherry-pick release-notes update back to master.PR #20289, cherry-picked to master."
1.9-cherry-pick-request: Docs updates for getting started and guide renameCherry-picks include:
r1.9: release notes Update.I haven't submitted this to master... should I?
Revert \[StreamExecutor] Merge StreamExecutor's and XLA's StatusOr classes.This reverts commit e7b1ab0.
"update the py/py3 toolchain configThe python3 are installed in /opt/python3.6 in the base toolchain
container:https://console.cloud.google.com/launcher/details/google/rbe-ubuntu16-04"
Add more tests in tf_trt_integration_test.py.Changes include:
"Enable unbundling dependencies and linking to the system libraries instead.This series adds a framework to be able to unbundle the dependencies from tensorflow. Previously, bazel rebuilds every single dep from scratch. This allows distro packages to disable bundling on a per-dep basis and link with the libraries that already exist on the system."
Branch 201975328No description provided.
"eigen: Add install_eigen_headers target for installing to systemEigen provides files that are both GPL and MPL. Tensorflow uses only the
MPL headers. This target collects all the headers into genfiles so they
can be easily installed to /usr/include/ later."
"Fix tflite_convert.py issue in Python 3This fix tries to address the issue raised in #20276 where
in python 3, the following error were thrown with tflite_convert.py:"
"[ROCm] Bazel build and continuous integration infrastructureThis pull request is to start introduce support for ROCm platform to TensorFlow. In this initial pull request, 2 components are addressed:"
"Update docstring of tf.linespace for 0-D inputsIn #20258 the question was raised as tf.linespace only supports 0-D inputs of start/stop, but the docstring did not mention the 0-D restriction."
R1.8No description provided.
Branch 201783076No description provided.
"Update Eigen version to commit fd6845384b866b28d336f43ffa70b982f9f3056ePR #20229 included a change to the Eigen version that failed to
compile on ppc64le. rmlarsen created a pull request in Eigen to
fix the compile failure:https://bitbucket.org/eigen/eigen/pull-requests/410"
Fix build issue while creating Python APIThis fix tries to address the issue raised in #20233 where build could fail with the following error:
Add float16 support for tf.contrib.image.transformThis fix tries to address the issue raised in #20243 where there were no float16 support for tf.contrib.image.transform. This fix adds the float16 support and enables related tests.
Update or-tools to v6.7.2This fix updates or-tools from 253f795 (dated 03/21/2017) to the latest versioned release version of v6.7.2
Update sqlite to 3.24.0This fix updates sqlite from 3.23.1 to 3.24.0
Update grpc to v1.12.1This fix updates grpc from d184fa2 to the newer versioned release of v1.12.1.
register float16 for gpu kenel of scatter and scatter_nd functionsFix #20219.
Update docstring of sparse_softmax_cross_entropyThis fix tries to address the discrepancy between the docstring and the actual implementation of sparse_softmax_cross_entropy.
"apply gpu memory fraction option to static memory analysis during identifying memory swap candidatesrun  tests (with GPU support), no reported errors.
$ bazel test -c opt --config=cuda //tensorflow/...
$ bazel test -c opt --config=cuda //tensorflow/python/..."
Fix the name of MKL dockerfile in update_version.py.No description provided.
"[Intel MKL] Optimized implementation of GatherND using OpenMPEigen version does not parallelize well. With my parallel version, I get almost 2X improvement."
"[ROCm] Bazel build and continuous integration infrastructureThis pull request is to start introduce support for ROCm platform to TensorFlow. In this initial pull request, 2 components are addressed:"
Update Eigen version to commit e5e305a158a029f5b5f837bf821411a51439a970.PiperOrigin-RevId: 201624024
Make sure calibrator don't miss last batchNo description provided.
Handle scalar input to assert_equal in eager.PiperOrigin-RevId: 199274329
fixes estimator model_fn signature in python docsNo description provided.
Branch 201687789No description provided.
"Update cython to 0.28.3This fix updates the cython from 3732784 (09/2017)
to the latest versioned release of 0.28.3 (05/2018)."
Update gflags from f8a0efe to v2.2.1This fix bumps gflags from f8a0efe to the latest versioned release of v2.2.1
Update libxsmm from 1.8.1 to 1.9This fix updates libxsmm from 1.8.1 (05/12/2017) to 1.9 (03/15/2018)
Update abseil-py to v0.2.2This fix updates the abseil-py from unversioned release of ea8c4d2 (04/18/2018) to a slight newer versioned release of v0.2.2 (05/22/2018)
Allow stride > window_size for sliding_window_batchFix #20191.
"Update pcre library to 8.42This fix updates pcre library 8.39 to 8.42.
Pcre 8.39 was released in 14-June-2016, which is quite old."
"Attempt to make sense of reasoning for lossI feel the document seems a bit weird. Adding ""when"" seems to make better sense of it. Open to suggestions on alternatives.
Thanks"
Build sqlite3 with json1 extensionBuilds of SQLite by default often with with the builtin json1 Extension enabled.
"1.9.0rc2 cherry-pick request: [tf.data] Properly export `choose_from_datasets()`This change adds a missing import statement in the tf.contrib.data library. The tf.contrib.data.choose_from_datasets() is already mentioned in the release notes, and its implementation is there, but I neglected to check that it was accessible via the public API. Not including it in the release would make the release notes incorrect."
Add a single positional argument mode for shape inference in subclass…ed Models.
Fix doc discrepancy in tf.scatter_addThis fix fixes doc discrepancy in tf.scatter_add.
Branch 201561361No description provided.
Untrunctaed normal distribution in VarianceScalingInitializerFixes #19996
[INTEL_MKL] Check for relative error when using MKL convolution kernelsNo description provided.
"Move external/ directory in pip package.Moving external/ directory in the pip packages (which is currently
installed directly into site-packages directory). Moving the
directory to tensorflow/include/external/. Also, removing all
python files from external (since it should really only contain
headers and license files.)"
"add alternative relative paths for cupti and nvvmOn Ubuntu 18.04, libcupti-dev and nvidia-cuda-toolkit both install under /usr (instead of Nvidia's default /usr/local/cuda). This fixes the ensuing bazel configuration errors when building for CUDA:Cuda Configuration Error: Cannot find cupti.h under /usr
andCuda Configuration Error: Cannot find libdevice.10.bc under /usr"
"INTEL-MKL: MKL primitive reuse for reorder opEnable MKL primitive reuse for reorder op to improve performance of
(1) model training and
(2) inference of small batch size"
"Install h5py on ppc64le required for keras_app...Recently pip2/3 install keras_applications==1.0.2 was added to
install_pip_packages.sh. This pulls in the dependency h5py which fails
to compile from source on ppc64le. (On x86 h5py is pre-compiled so
it installs just fine). To get h5py to install we need to install
the libhdf5-dev deb package, and symlink the shared libraries to the names
h5py is expecting. Finally we need to include the path to the hdf5.h
header file."
"Update flatbuffers to 1.9.0This fix updates flatbuffers to 1.9.0. The previous version used (971a681) in tf was released last year, and is not a versioned release. This fix updates to the latest versioned release of 1.9.0."
"Update re2 to versioned release 2018-04-01This fix updates re2 to the most versioned release of 2018-04-01.
(The version used in tf before was released last year and is not a versioned release.)"
"Update lmdb to 0.9.22This fix updates lmdb from 0.9.19 to 0.9.22. The old version (0.9.19) was released in 2016, which is quite old."
[XLA] Add in a plugin tf2xla dependency for backend registrationtf2xla backends are slightly separate to the XlaDevices and platform/compiler framework.
Update jsoncpp to 1.8.4This fix updates the jsoncpp to 1.8.4 to address the issue raised in #20170. The jsoncpp used in tf was old and may contain security issues.
"Update curl library to curl-7.60.0This fix updates curl library to 7.60.0. (Previously TensorFlow links to curl 7.49.1, which was
relesed in 2016)"
Fix a typoNo description provided.
[XLA] Add a target so XLA plugins can register tf2xla backends separatelytf2xla backends are slightly separate to the XlaDevices and platform/compiler framework.
SignalsHelper python3 compatibilityReplace dict.iterkeys() with six.iterkeys(dict).
Update Keras datasets file handlingusing with to be consistent with other code in datasets
"Remove a unnecessary dependency to accelerate compilation//tensorflow/contrib/lite/toco:toco now depends on many kernel implementations when building. It is very annoying on laptops. After some Bazel queries, it looks like they are introduced here and can be safely removed without breaking toco."
Updating TensorFlowNo description provided.
Removed tfeRemoved tfe
[Intel MKL] Adding support for MKL to docker infrastructure@case540 and @gunan Hopefully this PR is more in line with expectations.
"Move external/ directory in pip package.Moving external/ directory in the pip packages (which is currently
installed directly into site-packages directory). Moving external/
to tensorflow/include/external/."
Update doc and add tests about multi_hot labels with vocabularyNo description provided.
Cast: support casting to and from quantized typesThis adds support for casting to and from quantized data types using the Cast operator. It pretty much just changes the types to the non quantized version before calling cast and then changing them back since the quantized types are just a semantic difference and not an underlying one.
Branch 201392512No description provided.
"Find NCCL2 debians in configure.pyThe Tensorlfow configure doesn't work with NCCL2 when it is installed via the debians.
This PR adds code that will handle the following scenarios:"
Fix OOB check for result_index in header generationNo description provided.
"Remove duplicate imports in dynamic_stitch_op_test.pyThere is a duplicate from tensorflow.python.framework import dtypes
in dynamic_stitch_op_test.py (See Line 24 above)."
fixed typo in docstringinit_from_checkpoint does not accept a set as assignment_map
Fix MPI build issue with bazelWhile trying to build tensorflow with MPI through:
"Pass dataset tuple as input to Keras modelThis change allows passing nested tuples ((x_1, x_2, ...), (y_1, y_2, ...)) from a Dataset to a Keras model."
[Java] Support addition of gradient operations in a graphThis calls the C-api TF_AddGradients method through a new JNI binding for adding gradient nodes to a graph. It also includes an AddGradients wrapper for invoking this operation smoothly while building a graph using the new Java Ops API.
"[GCS] Typo in ConfigureGcsHook.This commit fixes a typo on ConfigureGcsHook that prevented its correct
operation."
"Cleanup NMT notebook, fix image linksStage: https://colab.sandbox.google.com/github/lamberta/tensorflow/blob/fix-nmt-nb/tensorflow/contrib/eager/python/examples/nmt_with_attention/nmt_with_attention.ipynb"
"Fix kCall comparisonThe HloInstruction::Identical is broken for kCall instructions.  It is possible that this API isn't used by anything but the subcomputation unification pipeline stage, which I guess isn't in use by any backends but the GC one."
"Fix warning in constrained_optimization testIn constrained_optimization test, keep_dims was used for reduce_sum. Since keep_dims has been deprecated it generates unnecessary warning. This fix updates keep_dims -> keepdims to disable the warning."
"Fix CMAKE build issue on LinuxWhile building tensorflow on Linux with CMAKE, as specified in README:"
hash table more typesNo description provided.
"[INTEL_MKL] Fix reorder creation failure in MklConcat op.When inputs are all MKL layout, we wrongly use TF order's dims as Op mem's dims which will make reorder primitive creation failure."
"Update glorot_uniform_initializer to match other InitializersThis fix tries to address the issue raised in #19910 where the signature of glorot_uniform_initializer does not match other Initializers (e.g., random_uniform_initializer)."
"Update tb-nightly dep to >= 1.10.0a0, < 1.11.0a0Synchronize tf-nightly dep on current tb-nightly: https://pypi.org/project/tb-nightly/1.10.0a20180618/"
"Add Apache Ignite datasetThis is a proposal to add IgniteDataset so that it is possible to read data from Apache Ignite. Ignite is a memory-centric distributed database, caching, and processing platform for transactional, analytical, and streaming workloads, delivering in-memory speeds at petabyte scale."
Changing the colab link to the right oneChanging the colab link to the right one so it doesn't crash
tensorflow/go: add tests for zero length arrays passed to CThis fixes some nil panics on zero length arrays passed to C in Consumers and Attr introduced in #19953  and #19915 as well as tests for them.
"cpu and gpu Dockerfiles for ppc64leAdding Dockerfile.cpu.ppc64le and Dockerfile.gpu.ppc64le to enable the ability
to do builds using docker on ppc64le. Also enables the ability to run
ci_sanity.sh (from ci_build.sh) on ppc64le."
Add missing Eager relnotes for TensorFlow 1.9.No description provided.
R1.9test
r1.9 cherry-pick request: Fix keras guide (docs only)r1.9 currently only contains a rough draft of the keras guide. It was rewritten by this commit. We'd prefer to publish this one.
Verification invalid eager env_ or  env_->rendezvous_mgr.No description provided.
Neural Machine Translation with AttentionAdded Neural Machine Translation with Attention notebook
Adding NMT with Attention notebookAdding Neural Machine Translation with Attention notebook
Fix typofix typo
"fix a mistake in the doc str of class GradientTapeThere is a mistake in the original help (or doc) string under class GradientTape in version 1.8.0,  The expected value for two of the example output is interchanged, which could lead to user misunderstanding if not fixed."
"Fixes the bug in model.saveFixes the bug where if you get the h5py error, and install it in Jupyter, you still can't use save because keras never tries to reimport."
Some enhancement on S3 file system error processingThis fix is an enhancement on S3 file system error processing.
"[Intel-MKL] Support for N-D Transpose using MKL-DNNThis PR adds support for N dimensional transpose using MKL-DNN.
Since MKL-DNN requires exception support enabled for compilation,
we create a new build rule for mkl_transpose_op, and thus the related
changes in other build files. Also, since we can eliminate MKL binary
blob for Transpose, we add corresponding preprocessor macros around
transpose code."
"[Intel MKL] Fixing MKL graph layout pass testThis PR fixes the MKL graph layout pass test which was failing because the order
in which nodes in the graph are printed seems to have changed."
Branch 200727545Manual merge in
Fix: DepthwiseConv2D fails when bias is enabledReplaced if self.bias with if self.use_bias. bias is a tensor and using it as a bool will result in error.Fixes #20023
Handle checking of all export fields in single functionNo description provided.
Add mirror for nasm in workspace.bzlNo description provided.
"fix TF_GraphImportGraphDefWithResults and TF_GraphImportGraphDefWithR…These two C APIs fail when pb file is > 64 MB. The fix is to use wrapper function tensorflow::ParseProtoUnlimited, which doesn't have the arbitrary 64MB restriction."
R1.6No description provided.
Fix: DepthwiseConv2D fails when bias is enabledFixes #20023.
contrib: autograph/constrained_optimization: minor spelling tweaksNo description provided.
contrib.graph_editor.transform.copy_op_handler: fix for pruningtf.contrib.graph_editor.transform.copy_op_handler: change default copy_shape to False so graph_replace can work for network pruning where new weight shape does not match old weight shape
"Do not depend on boringssl for big-endian architectures.A recent commit migrated TensorFlow from grpc_unsecure (and grpc++_unsecure)
to their secure variants. These secure variants depend on BoringSSL.
Unfortunately, BoringSSL does not work on big-endian architectures."
"[Intel MKL] Bootstrapping MKL+GPU testAdding a test for both MKL and GPU, as well as a script to launch it."
"Update debugger.mdError: homebrew/dupes was deprecated. This tap is now empty as all its formulae were migrated.
instead use: brew install ncurses"
"MKL DNN: Fix allocation ID for MKLThe allocation in the graph pass has been changed recently in non MKL version (original TF version) of code. Since MKL related code does more allocation in graph pass, thus allocation ID in MKL is also have been changed. Now it is fixed.
It would be nice, if someone changes allocation ID in non MKL version (TF only version), they can also change the MKL version of allocation ID. Both the allocation IDs (non MKL and MKL) are in the same location of the function. That way, both tests (MKL version and non MKL version) will be passed.
Otherwise, we have to create a PR for MKL unit test every time someone changes the allocation ID in the non MKL version of code."
Improve S3 filesystem read performanceAvoid creating a new std::stringstream and copying data into it every time S3RandomAccessFile::Read() is called. Fixes #14572.
Invalid Python example in baseline.pyNo description provided.
Handle checking of all ServingInputReceiver fields in single functionNo description provided.
Restrict contrast_factor as scalar for AdjustContrastv2 shapeThe contrast_factor should be scalar for AdjustContrastv2.
"fix decode_png function.Problem: In the case of palette png & args channels=0, force into grayscale.#20028"
"Fix git_tag_override option in gen_git_source.py.This fix was committed to the r1.8 branch but never to master.
Adding this fix to master branch."
Fix missing header in aarch64 Nvidia Jetsonfix missing header in aarch64 Nvidia Jetson
Update version strings for 1.9.0-rc1.No description provided.
Sync package version of double-conversion between bazel and cmakeThis fix tries to sync package version of double-conversion between bazel and cmake.
"More documentation for keras adagrad and adadeltaReplicating PR keras-team/keras#10410 from keras, as suggested by @fchollet"
"New loss function for Neural Networks based on 2018 paper from CornellZhilu Zhang and Mert R. Sabuncu of Cornell University (New York, United States) has submitted on May 20, 2018 a paper  proposing a new error function for Neural Networks (including Deep Neural Networks) aimed at classification with softmax function in the output layer,  specially in the case of noisy labels."
"Make it possible to disable bazel symbol strippingRecent changes added build --strip=always to the .tf_configure.bazelrc file which is overriding command-line options for stripping. User has to manually edit the file and remove the flag in order to be able to control strip rules. This PR adds a check that if BAZEL_NO_STRIP is defined in environment, it doesn't add strip=always flag to bazelrc file."
Make GCS ops work in open sourceFixes a few issues with the GCS ops in open source.
[WIP] Add canned multi label headWork in Progress.
Add IBM ppc64le GPU build status to community supported build in READMEThe build status should be ready to be added but currently the build depends on 2 cherry-picks  #20102 #19930.
r1.9-rc1 cherry-pick request: bugfix/memory leak fixNo description provided.
"r1.9-rc1 cherry-pick request: Keras save_weights fixCherry-pick the fix for  the Keras model.save_weights method.
Is currently broken with default settings (graph mode, no manual session, tf-format)"
Branch 200416472No description provided.
Update tensorboard dependency to 1.9.xTensorBoard 1.9.0 has been released to PyPI: https://pypi.org/project/tensorboard/1.9.0/
"Fix build issue on mac with python-2.7.10 and clang-9.1.0While building tensorflow on mac with python 2.7.10 and llvm 9.1.0 (macOS High Sierra 10.15.5), the following compilation errors surface:"
"Remove duplicate import in linear_equations.pyThe line from tensorflow.python.ops import linalg_ops
in linear_equations.py is a duplicate from the previous
line. This fix removes the duplicate import."
"Cast size() to int to avoid implementation-defined conversionselected.size() is unsigned and originally 0.
The conversion from (size_t)0 - 1 to int is implementation defined:"
Fixed compilation error (undefined reference to LLVMInitializePowerPC…TargetMC) on ppc64le when XLA is enabled
Specify endianness in expected_result array to fix #15767.No description provided.
Fix for compilation failure in gdr_server_lib.ccNo description provided.
"Space handling in equation parameter of tf.einsumThis is a copy of PR #19859 into master, instead of tf1.8. /cc @drpngx"
fix spelling errors in doc of python/framework/ops.pyfix spelling errors in doc!
"[XLA] Change the visibility of the graph builderThe hlo_tfgraph_builder isn't directly used by the xla/tools package, so it doesn't seem to need to be limited to only the service module and the tools module."
"r1.9-rc2 cherry-pick request: Documentation for Raspberry Pi installationIf this isn't included, the tensorflow.org documentation will not reflect the new Raspberry Pi support."
BestExporter cherry-pick request for r1.9: Only calls compare function if values were read from event fileI would like to suggest this cherry-pick for r1.9.
Removed unnecessary copying of dictNo description provided.
opencv interop fix: exclude libjpeg symbols from libtensorflow_framew…ork.so to avoid symbol conflict
fix opencv imread failure: remove libjpeg symbols from export list of… libtensorflow_framework.so to avoid symbol conflicts with opencv
Check to ensure the Cloud TPU is ready before resolving.Cherry picking this into the TF 1.9 release.
r1.9-rc1 cherry-pick request: Fix module docstringsImprove module docstrings when generating TensorFlow API.
tensorflow/go: operation attribute gettersThis adds the ability to fetch operation attributes. This is needed for any sort of graph rewriting ability.
Branch 200251004Manual merge in
"[XLA] Skip float16 adam_tests.Adam tests compare the output of the computation against a hand wirtten numpy
solution which does not take into account the precision and hence these tests fail for
float16."
Make implementation of GrpcServer::Init with Collective Ops compatible with calls in contrib/mpiFixes compilation errors outlined in #19924.
"[Java] Remove @Generated annotation by noticeAccording to @asimshankar , this annotation was causing some problems between different JDK versions, let's replace it by a simple notice."
Removed unnecessary copying of dictNo description provided.
"[XLA] Reduce maxval in random ops test.Reduced maxval in testRandomUniformIsNotConstant since the current value causes
an overflow when using a device which supports DT_HALF."
"support run_options and run_metadata for tf.keras.functionFix #19911.
cc @fchollet"
"Enable bazel build for ci_parameterized_build.shAdd an option to run only ""bazel build"""
Fix merge layers in tf.kerasNo description provided.
release 1.9-rc1 cherry-pick request: opt out of saving tpu graphAllow user to opt out of saving metagraph for TPU with TPUEstimator.export_output().
Fix typoNo description provided.
Try importing TRTOps to import_pb_to_tensorboard.pyThis PR tries to import TRTEngine ops to import_pb_to_tensorboard.py script to ease up of construction of tensorboard visualizations of TFTRT optimized graphs.
Branch 200114810Manual merge in:
tensorflow/go: add operation Input methods + testsThe go version of tensorflow only has operation output methods. This adds in the needed code to return operation inputs and jump from output to input and vice versa. This is required to actually be able to traverse the graph.
Mirror link is broken and issue is difficult to debug.No description provided.
"Disable tensorflow/python/estimator:keras_test on Windows@gunan
To fix TF postsubmit https://source.cloud.google.com/results/invocations/9b835a63-a61d-42e5-af4c-3994e6b77469/log"
Fix routing of quantized tensorsThe original tensor was not replaced with the quantized one when it had already been quantized.
Fix code typo in eager programmers guideNo description provided.
Merge weight column of duplicated indices for indicator_columnFix #19876 . cc @ispirmustafa
"Require same shape for `x` and `y` in shape function of `ApproximateEqual`In the kernel implementation of ApproximateEqual the shape of inputsx and y should be the same. Though in the shape function of ApproximateEqual
there was no such validation. This fix adds the shape validation in the
shape function to make sure x and y are of the same shape, if they are known."
"Dynamic opsWith this PR, we introduce dynamically generated TRTEngines, that is TRT Engine construction time is postponed to execution time to support graphs where shape inference fails."
Fix logging issue in remapper.cc and Linking issue with scoped_allocator_optimizerThis PR replaces std::cout with VLOG(1) in remapper.cc and removes scoped_allocator_ops_op_lib dependency from ScopedAllocator. This dependency is already satisfied through other libraries in core and causes a fatal for libraries that uses meta_optimizer due to double registration of _ScopedAllocator op due to double inclusion of static objects.
[Intel MKL] Remove use of absl::string_viewReverting 4a1889c
"1.9-rc0 cherry-pick request: Keras symbol visibility, and `Dataset` evaluation fixes.The first two commits fix visibility for various Keras symbols.
The last one fixes Dataset-evaluation in eager mode (was only running 1 step regardless of steps-argument)."
Update RELEASE.md (r1.9) for tfdbg and XLANo description provided.
Fixing copy_binary script.Allowing for copy_binary to have the minor version to have double digits.
Branch 199809082No description provided.
Skipped the check that fails due to overflow error as float128 dataty…pe is same as float64 instead of longdouble on platforms like Power - Issue# 19694
"Fixes #19858This PR removes spaces from the equation argument to the tf.einsum function, such that the function can handle spaces in the same way as np.einsum does."
Update RELEASE.md for tfdbg bug fix in 1.9.0No description provided.
"New feature: Large Model Support contrib module for training large modelsThis PR proposes a new module, namedlms, in contrib, which helps TensorFlow with training large models that cannot be fit into GPU memory."
Added the tutorials linkThe very first time users would like to have a clear navigation where they can find the tutorials regarding the additional resources where they can learn the specific tasks in TensorFlow.
"cpu and gpu Dockerfiles for ppc64leAdding Dockerfile.cpu.ppc64le and Dockerfile.gpu.ppc64le to enable the ability
to do builds using docker on ppc64le. Also enables the ability to run
ci_sanity.sh (from ci_build.sh) on ppc64le."
Merge r1.9 back into master.No description provided.
Consolidate `tf.data` release notes.Amit: Let me know if I should put these somewhere else instead.
Branch 199651315No description provided.
Allow tf.summary.merge_all() assign operation nameOne may need to assign name of the MergeSummary operation
Add label smoothing feature in sampled softmaxNo description provided.
Adding a constraint for the setuptools version.No description provided.
Force downgrade setuptools for tests after tf whl is installed.No description provided.
Fixing the setuptools issue for pip builds.No description provided.
Iteritems is deprecated in python 3. Using items instead.No description provided.
Branch 199474340No description provided.
Update __init__.pyWhitelist the operators module in the main library.
"[INTEL MKL] [Do not merge, WIP] Enable compilation of TF without MKL ML dependencyAdded ifdef INTEL_MKL_ML around code that should only be included when compiling for MKL ML. Also added define DO_NOT_USE_ML to control if MKL binary will linked if INTEL_MKL is enabled."
Fix failing tests.Whitelist the operators module in the main library.
"Update backprop.pyfixed this bug:
the gradient function returned by tfe.implicit_value_and_gradients() doesn't support keyword argument"
[r1.9] Expose `tf.broadcast_to` opThis fix is a follow up on #19753 to expose tf.broadcast_to op to r1.9.
TFLite: fix format mismatching warning.format 窶%s窶 expects a matching 窶歪har*窶 argument.
Update CONTRIBUTING.mdJust update clang-tidy to clang-tidy.
Adding the autograph operators dependency to the pip package.No description provided.
Correcting the number of flop for MatMulCf #19746
Adding the autograph operators dependency to the pip package.No description provided.
Removed unneeded file copy that was causing failure in Pi buildsNo description provided.
Cherrypicks2No description provided.
Branch 199311231No description provided.
"contrib/eagerpython/datasets: Resource naming workaround.tensorflow/contrib/eager/python/datasets_test.py was failing on GPU
because two tests - testTensorsPlacedOnDevice() and
testTensorsExplicitPrefetchToDevice() we're creating
FunctionBufferResources with the same shared_name, leading to
unintentional interference."
"R1.8Hello everyone,
I want to test the awesome tensorflow on android device."
Replaced explicit __metaclass__ assignment with @six.add_metaclass__metaclass__ only works for Python 2. In Python 3 it has no effect since the metaclass syntax is
[RFC] Added support for sequence_numeric_column to bucketized_columnThis is a work in progress.
"Fix for Raspberry Pi build breakage#17885 was missing a guard for the definition of double(), so it was being defined even on non-Android ARM platforms like the Pi."
Fixing the adamax_test rtol to be more lenient.No description provided.
Change order of installations.No description provided.
"Minor spelling corrections / clarifications + resolve issue #19778I want to clarify something about using global step with tf.contrib.model_pruning, which I think is not clearly explained (and lead to me not seeing my mistake for 3 weeks). Also, address the illegal summary names from issue #19778."
[XLA] Allow the tuple simplifier to operate on only subcomputationsThis change optionally allows for the tuple simplifier to exclude the entry computation from its processing.
Update install_linux.mdThis not necessary and adds confusion to the instruction outlined in the Docker session. It is not necessary to have all Nvidia System Requirements.
CherrypicksNo description provided.
Branch 199194260No description provided.
"INTEL-MKL:  MKL primitive reuse for conv2d fwd op - refactoring per PR suggestionThis PR updates the implementation of MKL primitive reuse for conv2d forward op, based on"
Expose `tf.broadcast_to` opThis fix is a follow up of #15243 to expose tf.broadcast_to. Previously the op was exposed as tf.contrib.framework.broadcast_to.
publish 'broadcast_to' opSee #15243 (comment)
Fixed sign-compare build error for interpreter.hFixed sign-compare build error for  interpreter.h.
"[tflite] label_image for tflite in PythonWith model (mobilenet_v1_1.0_224_quant.tflite), input image
(grace_hooper.bmp), and labels file (labels.txt) in /tmp.
Run"
"[tflite] make benchmark_model tflite build//tensorflow/contrib/lite/tools:benchmark_model doesn't build
for either x86 or android targets. With this, something like"
Branch 199005227No description provided.
Re-Merge accidentally reverted changeNo description provided.
"[WIP] Sync package version of double-conversion between bazel and cmakeNOTE: There are some issues with windows build, not ready to be reviewed yet."
"Add int16 support for `tf.as_string`In tf.as_string, integers are mostly supported (int8, int32, int64) but not int16. This fix adds the int16 support for tf.as_string."
Mentioned Visual C++ 2015 dependency for Windows JNI libraryModified MD file to cover this - #14456 (comment)
"[CMAKE] Improve cmake build for MKL and MKL-DNN on WindowsIn previous PR #16936, one still need to pre-install MKL on the machine, while we found that MKL dependency is released with mkl-dnn on its github release page."
"Add complex numbers to the supported data types for UnsortedSegmentProdIn the kernel implementation both UnsortedSegmentProd and UnsortedSegmentSum supports complex numbers. However, unlike UnsortedSegmentSum, the op of UnsortedSegmentProd does not register complex number types in math_ops.cc."
"Replace direct download link with bazel mirror (mirror.bazel.build)Since the download package for gemmlowp has been propagated to the bazel mirror (mirror.bazel.build), this fix replaced the direct link with the mirrored one, and removed the related TODO."
"Add KinesisDataset support for tensorflow DatasetThis fix is an attempt to add Kinesis support for tensorflow's Dataset. Kinesis is provided by AWS as a managed data streaming service. It is similar to Apache Kafka, often used in places where maintaining an independent Kafka cluster on AWS is not desirable, or not possible."
Remove duplicate importsInside ffmpeg/init.py the last import line:
"[XLA] Explicitly use ::xla::LayoutMSVC uses delayed template parsing, so it confuses Layout as ::xla::match::Layout below (which is a function) instead of ::xla::Layout."
[Intel MKL] Bootstrapping MKL test infrastructure@gunan This PR will allow us to kickoff our community build. I copied the run_mkl.sh script rather than moved it from the linux/cpu folder because I didn't want to disturb any existing tests that might expect it to still be there. Let me know what other tests you'd like to see.
"Update loss calculation to use one hot labelsThe detailed description of the code for the loss function uses one hot labels as input. Therefore, the target code itself should use one hot labels as well."
"Updating loss calculation to use one_hot labelsThe in-depth description for the code uses one_hot labels as input to the softmax_cross_entropy() function, therefore the code should use one hot labels as well."
Updating version for 1.9.0-rc0.No description provided.
Updating release notes for r1.9.No description provided.
Branch 198913026No description provided.
"[Intel MKL] Finished support for bad usernames in the CI build scripts.ci_build.sh now passes the environment variable to the container, and the with_the_same_user script adds the --force-badname param to addgroup as well."
fix typofix typo
"Unify learning rate as normal Tensor for tf.contrib.layers.optimize_lossIn tf.contrib.layers.optimize_loss, we handle learning_rate differently."
Branch 198811639No description provided.
"Manual roll back of PR #19443, because it causes the Raspberry Pi build to failNo description provided."
Branch 198743117No description provided.
Patch version parsing in cuda_configure in 1.6.No description provided.
R1.6No description provided.
Update LICENSE 2017 to 2018I found a 2017 in line 191 and update to 2018.
Add gradient for operation 'SparseSlice'Fix #19373.
Add C++ no gradient for Floor operation.Fixes #13982.
"Fix multiple values for keyword argument error in ModelAverageOptimizer and ElasticAverageOptimizerFix multiple values for keyword argument error in ModelAverageOptimizer and ElasticAverageOptimz.
For detailed error, please look at here"
Correct \No package nasm\ issueCorrected as per suggestion in #16862
Fix setuptools version to avoid a bad release.No description provided.
Fix setuptools version to avoid a bad release.No description provided.
Branch 198629366No description provided.
Add C++ SegmentSum gradient operation.This pull request adds the C++ counter part of the gradient of the SegmentSum python operation.
Fix TRT Node rewiringThis PR fixes the wiring issues present when shared inputs or outputs present in multi-input multi-output TRTEngineOps and TRTCalibOps. It also try-imports tensorrt ops to import_pb_to_tensorboard.py so that networks containing TensorRT ops can be visualized
Fix incorrect documentation for `tf.reduce_any`/`tf.reduce_all`This fix fixes the incorrect documentation for tf.reduce_any/tf.reduce_all. The previous description:
"Add support of string split behavior compatible with python's `str.split`This fix tries to address the issue raised in #18271 where the existing tf.string_split does not match python's str.split. Specifically, the tf.string_split does not handle the case where separator might be multi-char."
Add normalizer_fn support for sequence_numeric_columnThis fix tries to address the issue raised in #19628 where there were no normalizer_fn support for sequence_numeric_column (unlike numeric_column). This fix adds the normalizer_fn support.
"Update WORKSPACEthere was a typo in the comment, also made a sentence out of it."
Fix for Raspberry Pi wheel architecture tagsNo description provided.
docker: update cuDNN to 7.1.4.18Signed-off-by: Felix Abecassis fabecassis@nvidia.com
"Fix mismatch of shape restriction in DrawBoundingBoxesIn the kernel of DrawBoundingBoxes, the shape of the input
images should be 4-D. Though in the shape function,
at the end UnchangedShapeWithRankAtLeast(c, 3) was used instead
(at the beginning of the shape function the validation isWithRank(c->input(0), 4, &images) which is correct)."
Fix redundancy in RELEASE.mdThere is a semi-duplicate entry for 1.4.0.
Branch 198434814No description provided.
fix typo in function comment of name_scopetiny commit for bewbie
Update python_configure.bzlAdd BAZEL_SH environment variable as a dependency of python_configure repository rule
"Add a note that stop_gradient in moments does not change the gradientIn eccd162#diff-ef8609a43751227afcaacc838670a96f @sguada added support for sample mean in moments. He added a stop_gradient to the mean in the variance calculation. Since it took me some time to figure out that this stop_gradient has no effect (except a reduced computation time), I think a note to the stop_gradient could be usefull."
fix typoNo description provided.
"Windows: fail gracefully when undname.exe is not found/cc @gunan
Improve error messages"
"BUILD: dont force strippingBuild systems must not strip binaries, it makes it impossible for
distros to ship debugging symbols for packages."
"python_configure.bzl: Find bash binary path through BAZEL_SH env var.This helps avoid invoking the wrong bash binary when ""Bash on Ubuntu on Windows""
is installed."
"generate-pc.sh: add option to set libdir64bit libraries are usually installed into /usr/lib64/, this adds an option to specify libdir when generating the pkgconfig file."
Fix typoFix typo
Fix typoFix typo
Fix typofix typo
Fixed typo in exporter.pyNo description provided.
Fix issue #19575No description provided.
Fix build errorFix build error: 'function' in namespace 'std' does not name a template type.
Branch 198122165No description provided.
Branch 198098380No description provided.
Branch 198092991No description provided.
Updated embedding column exampleThe embedding column example had a comment that seemed to incorrectly relate to the indicator column. Updated the comment to reflect the embedding column info. Also updated the name of the dimension variable to be consistent with the example from a few lines earlier.
[WIP] Add Apache Parquet support for TensorFlow DatasetApache Parquet is a widely used columnar storage format available in the Hadoop ecosystem.
"Fix broken linkAlso, as a side note, I found this link confusing. I was expecting it to take me to a list of pre-made estimators. Not a definition of what a pre-made estimator is. (maybe the glossary definition should link to a list of pre-made estimators?)"
"Fix broken linkAlso, as a side note, I found this link confusing. I was expecting it to take me to a list of pre-made estimators. Not a definition of what a pre-made estimator is. (maybe the glossary definition should link to the list of pre-made estimators?)"
[tfgan] Add possibility to export GANEstimator saved modelThis allows GANEstimator's to be easily exported via GANEstimator::export_saved_model().
"Remove duplicate `from six import text_type` in upload_test_benchmarks.pyThe from six import text_type was imported twice in upload_test_benchmarks.py, this fix removes the duplication."
Support session config in tf.contrib.predictorThis PR allows users to supply a custom session config uses by tf.contrib.predictor.
"INTEL-MKL: Fix an issue related to MKL op registrationMklConv2DWithBiasBackpropBias is an MKL op.
If should be registered only when building Tensorflow with original MKL (that is, MKL_ML),
not with the current MKL (that is, open source MKL_DNN)."
Add missing deps for simd_armv8a in jpeg.BUILDBuilding for armv8 fails with error:
Use BUILD.bazel for third_party packagesBoth BUILD and BUILD.bazel could be used as the bazel project file (see bazelbuild/bazel#552) and BUILD.bazel is actually  preferred (see bazelbuild/bazel#4517 (comment))
Add batch support for random tf.image.random_flip_*The tf.image.flip_*methods can either process single images or batches of images. The randomized versions tf.image.random_flip_* do only support single images until now. A batched mode might increase the usability of the function for data augmentation purposes.
"Add Hadoop SequenceFile support for tensorflow DatasetThis fix adds Hadoop SequenceFile for tensorflow Dataset, so that it is possible to process files stored in Hadoop system directly."
"Improve fast_tensor_util for bfloat16In #19212, improvement has been done to speed up the fast_tensor_util for float16. As both float16
and bfloat16 uses the same size, bfloat16 could be improved as well. This fix speeds up bfloat16 in a similiar fashion as float16."
Enable mirror.bazel.build link for gemmlowpThe mirror.bazel.build link for gemmlowp was disabled as it was not propagated before. This fix enables the mirror.bazel.build link for gemmlowp and removes the related TODO.
"Added 64 bit toolchain flag to CMake build instructionsWhen building tensorflow on windows with CMake, using the 64 bit toolchain (compiler (cl.exe) and linker (link.exe)) is needed. Using the 32 bit toolchain often result in errors such as C1060 ""compiler out of heap space"" and C1002: ""compiler is out of heap space in pass 2"". There are several issues reported on this: https://github.com/tensorflow/tensorflow/issues?utf8=%E2%9C%93&q=is%3Aissue+compiler+is+out+of+heap+space"
Fix pylint issue in the master branchThe latest master branch has the following pylint failure that caused:
Update docstring for tf.reduce_sum/reduce.This fix tries to address the issue raised in #19498 where the description for reduction:
tf.keras: Fix plot_model for Sequential modelDescription:
Numa device prototypeThis pull request is to get the comments for the prototype to support NUMA aware CPU device in TensorFlow.
Fix ovic typoThanks!
"Correct type error : Pre-requesits -> Pre-requestsplease, correct this error."
Update supervisor.pyThis was quite confusing (encountered when modifying original tutorial https://github.com/tensorflow/models/blob/master/tutorials/rnn/ptb/ptb_word_lm.py )
"Fix BFCAllocator::Extend alignment issuesThe BFCAllocator::Extend method used an incorrect harcoded alignment
of 32 in two different places.  This led to alignment check assertions when
Extend was called, as all memory is now expected to be 64 byte aligned."
"INTEL-MKL: Fix build issue with old GCC version - MklConcat relatedThis fix addresses a build issue related to MklConcat with old GCC version.
For GCC 5.0/4.8 or older version, key of unordered_map can only be primitive type and cannot be ""enum"".
This issue does not occur with GCC 6.*."
Update Dockerfile to be based on 9.2-base-ubuntu18.04No description provided.
"Corrected compute_gradient docstringAfter testing the tf.test.compute_gradient function with complex inputs,
noticed that the docstring specifies that the real/imag partial derivatives
are in the four corners of a larger matrix, when the result given indicates
they are instead interleaved."
Branch 197583446No description provided.
"Fix discrepancies between doc and implementation for math_opsIn the docstring of math_ops, there are some discrepancies between the supported data types and the actual implementation."
"Update get_started_for_beginners.mdOlder versions used ""_feature"" and ""_label"" instead of ""_x"" and ""_y"" as in the newest versions of the get_started model in the code base.  This documentation was inconsistent, using the former for loading the training and test data, but the latter when calling eval().  This commit makes the notation consistent."
Why won't there be higher level APIs on TensorFlow that support AGI?Needed higher level APIs that support AGI on top of TensorFlow...
R1.8No description provided.
"Update Release.md to remove duplicate releaseThe beginning of the release note for 1.4.0 seems to have been duplicated,
remove the duplication."
Fix typofix typo
"fix(python): ValueError len(dataframe.columns) + 1An error is raised when len(placeholders) does not equal len(dataframe.columns) + 1. However, the error message states that it expected placeholders to be len(dataframe.columns)."
Fix incorrect link for nvidia driversThis fix fixes the incorrect link for nvidia drivers (previously the link points to Page Not Found).
"Add \python 3 only\ support for bazel buildWhen building tensorflow in a python3 system (i.e., only /usr/bin/python3 and no /usr/bin/python in the system), even though /usr/bin/python3 is specified during the configure the following failure still occur:"
Update groups.mdAdd more user groups collected
"fix a bug in built nsync android libraryEdited: NDK doesn't support thread_local variables which own destructors, so on Android it should use __thread instead."
[INTEL MKL] Fused quantized Ops for Intel CPU [PR for comment only].This PR is intended for comments on eight bit precision inference on Intel CPU. Please do not merge this PR. Here is summary:
"Introduce tf.contrib.framework.Notification.ConditionVariable may be used to delay computation, or to synchronize
computation between multiple tasks."
"pip_package: modularize build script to allow distros to install more flexiblyGentoo Linux handles python modules slightly differently and packaging
wheels is complicated. We prefer to run setup.py directly ourselves
rather than build a wheel and then install from there."
R1.8No description provided.
Expose stream executor namespace in cmake shared object.No description provided.
"StreamingFilesDataset fixesThis PR fixes an issue with StreamingFilesDataset, where the remote call always returns a string. Now the remote call will output a dataset with types based on the output types of the source dataset."
Fix typofix typo
"Add stream executor as a cmake dependency.This is to avoid build failures for gpu kernels that look like:
Creating library T:/src/github/tensorflow/cmake_build/Release/_gru_ops.lib and object T:/src/github/tensorflow/cmake_build/Release/_gru_ops.exp
12>blas_gemm.obj : error LNK2019: unresolved external symbol ""public: class stream_executor::Stream & __cdecl stream_executor::Stream::ThenBlasGemm(enum stream_executor::blas::Transpose,enum stream_executor::blas::Transpose,unsigned __int64,unsigned __int64,unsigned __int64,float,class stream_executor::DeviceMemory const &,int,class stream_executor::DeviceMemory const &,int,float,class stream_executor::DeviceMemory *,int)"" (?ThenBlasGemm@Stream@stream_executor@@QEAAAEAV12@W4Transpose@blas@2@0_K11MAEBV?$DeviceMemory@M@2@H2HMPEAV52@H@Z) referenced in function ""public: void __cdecl tensorflow::functor::TensorCuBlasGemm::operator()(class tensorflow::OpKernelContext *,bool,bool,unsigned __int64,unsigned __int64,unsigned __int64,float,float const *,int,float const *,int,float,float *,int)"" (??R?$TensorCuBlasGemm@M@functor@tensorflow@@QEAAXPEAVOpKernelContext@2@_N1_K22MPEBMH3HMPEAMH@Z) [T:\src\github\tensorflow\cmake_build_gru_ops.vcxproj]"
Branch 197218170Merging internal changes
Add missing dependencies to test_lite_mainNo description provided.
1.6.1 release preparationNo description provided.
Make distributed_test use tf-nightly by default.No description provided.
"INTEL MKL: Enhance MkL Pooling ops with primitive reuseEnable MKL Pooling ops with primitive reuse, to improve
(1) model training and
(2) inference of small batch size
by minimizing primitive creation time."
"INTEL MKL: Enhance MkL BatchNorm ops with primitive reuseEnable MKL BatchNorm ops with primitive reuse, to improve
(1) model training and
(2) inference of small batch size
by minimizing primitive creation time."
Adding back abi and stacktrace dependencies to stacktrace_handlerCorresponding headers are referenced in:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/stacktrace_handler.cc
"INTEL MKL: Enhance Mkl Relu Op with primitive reuseEnable MKL primitive reuse for Relu Op via caching, to improve
(1) model training and
(2) inference of small batch size
by minimizing primitive creation time."
"INTEL-MKL:  Enhance Mkl conv2d backward (filter and input) ops with primitive reuseHi Rasmus, please let me know when you start to review this.
I have budgeted my time to take actions on your suggestions for code change.
Best,
GZ"
"Implemented cosine distance metricLosses in tf.contrib.losses.metric_learning rely only on euclidean distance.
I implemented the cosine distance that can be used to calculate the losses for:"
"Add test case for empty tensor with clip opsThis fix is based on #19337 and #19338. The issue was that previously an empty tensor for tf.clip_by_value on GPU triggers a crash. The issue should have been fixed by #19338 and
the recent master. It makes sense to adds the test case for this issue."
"Fix the TFLite iOS demo apps.This partially reverted 2bf2308.
The demo apps in lite/examples depends on CocoaPod, not the Github
head code."
update embedding combiner default from mean to sqrtnaccording to the warning this should be the default since 2016/11/01
Pandas input fn accepts DataFrame for YThis pull request is to implement the feature request from #19182
"CMake: fix include error when building with PYTHON_BINDINGS offIf tensorflow_BUILD_PYTHON_BINDINGS is disabled in cmake. The following error occurs during compilation:
tensorflow/tensorflow/c/python_api.cc:19:64: fatal error: tensorflow/python/framework/cpp_shape_inference.pb.h: No such file or directory"
comment typocomment typo
comment typo erroras title
Use np.frombuffer instead of np.fromstring to avoid DeprecationWarning. r1.5Resolves #17020
Use np.frombuffer instead of np.fromstring to avoid DeprecationWarning. r1.6Resolves #17020
"[INTEL MKL] Upgrading to MKL DNN v.14It also includes fixes to handle empty input tensors in MKLAvgPooling.  MKL DNN v0.14 does more sanity checks on empty input tensors and throws ""invalid parameter"" exceptions."
Fix cmake library path for libpng16.a #18950The CMake build fails on Fedora in normal build. libpng16 is using
"Fix the naming of _any_variable_initializedThis might be a very small issue, though the naming _any_variable_initalized seems to be a typo (initalized -> initialized)."
"check grpc_testlib_server before start subprocessWhen grpc_testlib_server is missing (or set wrong TEST_SRCDIR, TEST_WORKSPACE), grpc_session_test will hang without any response or hint (subprocess is defunct). So, in such case, better to  check grpc_testlib_server exists before start subprocess."
Include <algorithm> in .pb_text.cc generated filesThe generated code depends on this header for std::stable_sort(). Until now we've been lucky that this header is included indirectly on the platforms for which we build. Fixes #19323.
"Add mirror for nasm in workspace.bzlThe two specified URLs do not work, see discussion here #16862. This PR adds a working URL to the list of mirrors."
"Add getter to TFLite tensor dimsAdd a public getter function of tensor dims in tflite interpreter. It is useful for users to fully aware the shapes of tensors, for processing dynamic shape outputs and for debugging."
Branch 196939548Merging internal changes.
"Make tf.clip_by_value not crash on empty tensorsAlso rearrange the code to remove duplication.  No tests yet; I'll leave
refactoring the test cases for empty tensor coverage to someone else."
"Fallback to dynamic loader even if HADOOP_HDFS_HOME is not definedPrior to this commit HadoopFileSystem required HADOOP_HDFS_HOME to be
defined to initialize the filesystem, even if libhdfs.so is located
outside of the standard location. This limitation is unnecessary and
can be safely removed."
"fix iris example to work with python3iris.py did not work with python3 as urllib.urlopen is not in python3.
Switched to urlretrive from six. Same was done in:
tensorflow/examples/image_retraining/retrain.py"
"[INTEL MKL] Upgrading MKL DNN to v.14It also includes fixes to handle empty input tensors in MKLConcat and MKLAvgPooling. MKL DNN v0.14 does more sanity checks on empty input tensors and throws ""invalid parameter"" exceptions."
"[XLA] Don't do int64 tests for devices which do not support int64If a device does not specify that it supports int64, then do not run tests which hard-code int64 types into themselves."
"MPI enabled builds fail for r1.8There are two problems: ""endl"" not being part of std, and undefined logging macros."
"Fix issue in Keras model complie with float64 modeThis fix tries to address the issue raised in #19318 where Keras model complie for model.compile('rmsprop', 'mse') does not work in float64 mode."
"Fix pylint sanity error for CI buildThe CI build is failing, caused by:"
"Remove redundant header includes in mpi_utils.hIn mpi_utils.h the header ""tensorflow/core/platform/logging.h"" was included twice."
core/framework/op_gen_lib.cc: include <algorithm>In tensorflow/core/framework/op_gen_lib.cc Add #include <algorithm> or else build with cmake fails at line 415
"[INTEL MKL] upgrade mkldnn version to v0.142.Latest MKL DNN v0.14 does more sanity check on EMPTY input tensors and throws ""invalid parameter"" exception.
The fix is to handle the empty tensor case at MKL Ops layer, specifically on
MklConcat
MklAvgPooling"
Branch 196777020Merging internal changes.
Generate Java graph building API from @Operator annotated classesThat completes the work started by @kbsriram to generate the *Ops API classes out of the operation wrappers annotated with @Operator. That includes core operations wrappers that are automatically generated at compile time or any user (or custom) operation that might be added to the source path.
avoid magic number in AsyncServiceNo description provided.
"Fix tf.matching_files issue with access denied subdirectory.This fix tries to address the issue raised in #19274 where
tf.matching_files will return an error if no permission for
subdirectories (Even if the subdirectories does not match)."
Fixing a buildifier issue.No description provided.
Branch 196691101No description provided.
"Add shape validation in shape function of MapAndBatchDatasetIn MapAndBatchDataset, batch_size, num_parallel_batches, and drop_remainder are 0-D scalars. This fix adds the shape check to those Inputs."
"Fix ppc64le compile failure libpngBuilding Tensorflow on ppc64le fails with the message:
ERROR: /root/tensorflow/tensorflow/cc/BUILD:422:1: Linking of rule
'//tensorflow/cc:ops/control_flow_ops_gen_cc' failed (Exit 1)
bazel-out/host/bin/_solib_local/_U_S_Stensorflow_Scc_Cops_Scontrol_Uflow
_Uops_Ugen_Ucc___Utensorflow/libtensorflow_framework.so:
undefined reference to `png_init_filter_functions_vsx'
collect2: error: ld returned 1 exit status"
Add IBM ppc64le build to README.No description provided.
Fix fake quantization linkNo description provided.
Cherry-pick updated TensorRT instructions.updated installation instructions for Tensowflow-TensorRT integration
Fix errors and typos in the Estimators programmer's guideThe main errors are the last three changes:
amend tensorflow license to restrict Military UseAn amendment to the standard Apache License to exclude Military Use worldwide.
"Fix the naming of _any_variable_initializedThis might be a very small issue, though the naming _any_variable_initalized seems to be a typo (initalized -> initialized). Since this is an interanl function, renaming should be safe."
Update TFLite Docs on tf.gatherSupport was added in ea703f4
"Shape validation of `max_features` in `QuantizedReluX`In shape function of QuantizedReluX, shapes of max_value andmin_features have been validated  but not max_features.
This fix add restriction to max_features as well."
[Docs] Update two Wikipedia linksNo description provided.
Android build fixesNo description provided.
"Add additional shape validation to `compute_accidental_hits`In compute_accidental_hits, the sampled_candidates must
be a vector, as is shown in the kernel implementation intensorflow/core/kernels/candidate_sampler_ops.cc."
Update momentum.pymaking the code more readable
Add int64 support for output_shape of tf.nn.conv3d_transposeThis fix tries to address the issue raised in #18887 where the output_shape of tf.nn.conv3d_transpose only support int32 data types. The support of int64 has been added in this PR with test case covered.
Add missing deps for simd_armv8a in jpeg.BUILDBuilding for armv8 fails with error:
add type to T for FusedResizeAndPadConv2D and FusedPadConv2DIssue: #19228
Improve shape function of `tf.image.draw_bounding_boxes`The tf.image.draw_bounding_boxes requires boxes to be 3-D shape though there was no check on shape function.
"Add tf.print an an alias for tf.PrintUsers with Python 3 or from __future__ import print_function can now
use lowercase tf.print."
Update how build statuses and artifacts are demoed in README.mdNo description provided.
Fix links on the community/swift page.They were broken rendered on https://www.tensorflow.org/community/swift.
"[Intel MKL] Fix for convrnn unit test failureAdding a fixup pass (+unit test) to handle incorrectly linked Mkl metadata
edges"
Fix warning caused by squeeze_dimsThe squeeze_dims in tf.squeeze has been deprecated in favor of axis. This fix fixes the squeeze_dims in text_classification_cnn.py so that the warning could be removed.
"Use AvailableArrayName for sanityArray name must only have digits after colon.
But the code is implemented to add ""_reordered"" string without check.
It makes error while using toco."
Add complex support for tf.segment_meanWhile using tf.segment_mean I noticed that it does not have the complex support like tf.segment_sum. I think it makes sense to support complex for it. This fix adds the complex support for tf.segment_mean.
Fix misleading cupti.h error messageThis fix tries to address the issue raised in #19223 where the cupti.h eror message was misleading. The following error:
"fix docstringConfusing, since container.variables is a method. Looks similar to tf.keras.Sequential().variables, which returns the list of all layer variables/weights."
DOC: Fix python code in for invalid codeThere is an error in python code in the documentation. There is no class called tf.estimator.Estimator.LinearClassifier I think it was a typo and the author meant tf.estimator.LinearClassifier.
R0.11MNIST
"Improve the shape function for ParameterizedTruncatedNormalThe parameters of ParameterizedTruncatedNormal should
be 0-D or 1-D, which is checked in ther kernel functions.
There is no check in the shape function of the ops."
"Improve tf.constant() for float16 with fast_tensor_utilThis fix tries to fix the issue raised in #19180 where tf.constant() for float16 is too slow as there is no
fast_tensor_util support."
"Add `AppendFloat16ArrayToTensorProto` to acclerate `tf.constant` for float16Related with #19180.
It seems that cython doesn't support np.float16_t by now, we use np.uint16 instead."
Fix cublas wrap macro for cublasGemmBatchedExPR #18436 breaks tensorflow build for cuda 9.1. It uses PERFTOOLS_GPUTOOLS_CUBLAS_WRAP instead of STREAM_EXECUTOR_CUBLAS_WRAP. This PR fixes that issue.
"Use passed name for leaky relu tensor opI was experimenting with different activation functions for the final layer of my graph recently when I noticed that the output graph was failing to save because it couldn't find a tensor by a name I had provided, e.g. (my_final_tensor_op)."
Branch 196146716No description provided.
"Use passed name for leaky relu tensor opI was experimenting with different activation functions for the final layer of my graph recently when I noticed that the output graph was failing to save because it couldn't find a tensor by a name I had provided, e.g. (my_final_tensor_op)."
"[XLA] Allow for disabling of some XLA Dot testsThese 8 tests are a recent addition to the XLA CC test suite.  They are not using the XLA_TEST_F macro, which allows tests to be selectively disabled by a manifest."
Add citationNo description provided.
Fix warning in python 3 with deprecated inspect.getargspecThis fix tries to address the issue raised in #16152 where a warning will show up in python 3 with:
Updated index.mdTensorflow lite image was not visible. Added image file path
"[Slim] Fix default value for parameter in tfexample_decoder.BoundingBoxWhen not providing any prefix to slim.tfexample_decoder.BoundingBox.__init__, the default value of None for the prefix would raise the error"
Disable the gradients test for python3 entirely. [DO NOT MERGE]No description provided.
Add TensorFlow ecosystem Spark and Hadoop jars to Maven deploymentFixes tensorflow/ecosystem#29 by adding TensorFlow ecosystem jars to public Maven repo.
"Use \```\ (backtick) for code blocks in adding_an_op.mdIn adding_an_op.md, most of the code blocks uses ""```"" (3 backticks)
and annotations are added automatically. Though there was one
place where the code block are done with manual html code. This
is really error-prune and hard to change if there is an update
in the future."
[Intel MKL] Fixing the unit test \util_cuda_kernel_helper_test_gpu\ when building with MKLNo description provided.
"Enable OrderedEnqueuer from keras in tf.kerasGoal of this PR is to enable usage of tf.keras.utils.OrderedEnqueuer which has the very same functionality keras.utils.OrderedEnqueuer, but for some reason was not available in tf.keras"
"Enable test case for float64 with conv1dThe float64 for conv2d support has been added to tensorflow in e3468b5. (Thanks brianwa84!)
Since conv1d implementation invokes conv2d, the float64 support for conv1d is supported now as well."
"Fix 2 typos in documentsIn the line 240 of the programmer_guide/variables.md, the name of API tf.layer is wrong, should be tf.layers;"
Small grammar fixes in the programmers guide FAQ.No description provided.
"Switch to use str instead of number for colab_urlFix nightly failure:
File ""tensorflow/tools/ci_build/update_version.py"", line 253, in colab_url
version_string = ""%d.%d.%d"" % (version.major, version.minor, version.patch)
TypeError: %d format: a number is required, not str"
Branch 195897321No description provided.
Added gradients for SparseReduceMax/MinNo description provided.
Add tf.regex_match for regex match supportThis fix tries to address the issue raised in #18264.
Estimator Head design documentRFC document for design review pilot: Estimator Head API design.
"[XLA] Use non-inlined functions where inlining causes problemsOn my OS/X machine these two functions, currently defined in the header, no not get marked weak, and cause a compilation error."
Remove python defines which clash with loggingI have the following clang on OS/X (High Sierra 10.13.4):
[INTEL MKL] Fixes a failure in //tensorflow/python/profiler:model_analyzer_test.Modified  testComplexCodeView to look for lower total_float_ops. The value of total_float_ops is lower when Tensorflow is compiled with Intel MKL.
Just fix little issue that is model_file_type variable but not using it in iOS DEMO.No description provided.
"BUG: keras.callbacks.TensorBoard raises an exception for non_trainale_weightsThe class seems not to exclude non_trainable_weight (moving_variances and moving_mean in BatchNormalization) correctly, see the script and its logs below for more details:"
num' support a tensor as input in tf.unstack(#17266)No description provided.
Branch 195749522No description provided.
Setting default openmp settings for MKL kernelsRequesting feedback on ways to set default openmp parameters
"[tftrt update]code cleaning, removed some boilerplate code"
[tfgan] Allow to add custom eval metrics to GANEstimatorThis PR continues the work started in #19117.
Building development docker files with AVX as well. (#19130)1.7 cherrypick
Building development docker files with AVX as well. (#19130)1.8 cherrypick
Building development docker files with AVX as well.No description provided.
Fix alignment crashes in AVX512 buildsThis pull request fixes alignment crashes on AVX512 builds seen when running the tensorflow unit tests.  It modifies tensorflow/core/framework/allocator.h so that kAllocatorAlignment is always 64 and sets the eigen define EIGEN_MAX_ALIGN_BYTES to 64.  It also updates some of the compiler unit tests so that they pass with these new settings.
"Update zlib version for cmake buildIn cmake build, the zlib version was 50893291621658f355bc5b4d450a8d06a563053d
which is equal to v1.2.8. This creates a discrepancy between cmake and bazel build."
[tfgan] Add discriminator and generator losses to estimator eval_metricsThis PR adds discriminator and generator losses to estimator eval_metrics.
Fix doc format issue in enable_eager_executionThis fix tries to address the issue raised in #19022 where the doc of tf.enable_eager_execution was not well formatted. It seems the additional empty lines may confuse the doc generator. This fix fixes with proper alignment and removal of empty lines.
"[tfgan] Simplify estimator gan_model_fnThis removes _make_train_gan_model and _make_eval_gan_model which are just calling _make_gan_model with the correct mode variable.
Instead _make_gan_model is used directly to create both training and evaluation models."
[INTEL MKL] Fix for crash in mkl_layout_pass_testThis PR fixes the failure of the test //tensorflow/core:graph_mkl_layout_pass_test
Fix typofix typo
"unsafe_div op for division by zeroFix #15706, #17350, #20091."
"Allow integer labels in BoostedTreesClassifierCurrently, BoostedTreesClassifier assumes that the labels are float in the gradient calculation and errors if they are integer. This change allows integer labels, to be consistent with other canned classifiers."
fix file and variable names in documentationUpdate documentation to match with actual code.
"Add clcache to CMake CI buildLocally, my GPU build seems to run about 20 mins faster using clcache. I'm curious whether you see a difference in the runtime of the CI build."
"Use FindOpenMP instead of custom codeAs suggested by @fo40225 , this switches from custom code to FindOpenMP. Seems to have been in CMake since at least 3.0. FindOpenMP would be preferred to anything custom. However, this might break the build for anyone still on CMake 2. Is that a supported configuration or something to not worry about?"
"Include ThenBlasGemmHi everybody,"
Add release notes for TensorFlow Lite.Add TensorFlow Lite release notes.
Add release notes for TensorFlow Lite.Add TensorFlow Lite release notes.
Fix a small typo.No description provided.
Update bazel toolchains dependency.PiperOrigin-RevId: 186650360
Branch 195443326No description provided.
"Adding release notes for 1.7.1 releaseUpdating release notes for 1.7.1 patch release. Please, let me know if more notes need to be added or if existing ones need to be corrected."
fix training_hook and training_chief_hook processing of distributed trainingThe changes are listed as followed.
"Fix typofix typo
metdata -> metadata"
Fixed memory leak with py_func (#18292)This PR fixes the memory leak described in #18292. Tests for py_func are running.
"change the swap threshold by adding an elastic percentageOriginally, heuristic memory swapping feature won't improve much on the batch size, that's because IdentifySwappingCandidates are fully trusting the statically analysis.
Per my experiment, this did not improve the batch size at all."
Canned estimators use 'careful_interpolation' rule to compute PR-AUCsFix #19080
"fix issue #18643 TensorFlow 1.8.0-rc1 fails on aarch64 platformsfix issue #18643 TensorFlow 1.8.0-rc1 fails on aarch64 platforms
Reference to #18643"
Branch 195301913No description provided.
Fix minor typosJust a couple minor typos
Fix libpng compilation on PowerPCNo description provided.
"INTEL MKL: Fix concat related issuesFix the following concat related issue (Mkl_Concat Op)
窶｢	Inputs with both TF and MKL layouts  (ref public escalation #17494)
窶｢	Inputs with one or more EMPTY tensor(s), that is tensors with ndims==0
窶｢	In case of ALL tensors are in MKL layout but with different data formats, , 窶徨eorder窶 to
the most common format for better performance."
Update learning.pyChanged description in learning.py .
"do not use caching device at eager mode in tf.contrib.seq2seq.dynamic_decodetf.contrib.seq2seq.dynamic_decode uses caching device, but caching device is not supported at eager execution mode."
Feature: Add reduce_average (weighted reduce_mean)Add tf.reduce_average according to issue #7422
"Fix bug of declaring regularization loss multiple times when reusing PartitionedVariables in tf layersWhen reusing a variable in current variable scope, we should always reuse its regularization loss computation. But it will declare regularization loss multiple times when reusing PartitionedVariables in tf.layers.  For example:"
document fix: correct code snippets to python3 stylepython code snippets in this doc Tensors are still using python2 style print function:
"Fix bug of declaring regularization loss multiple times when reusing PartitionedVariables in tf layersWhen reusing a variable in current variable scope, we should always reuse its regularization loss computation. But it will declare regularization loss multiple times when reusing PartitionedVariables in tf.layers.  For example:"
"Upgrade pip in install_python3.5_pip_packages.shCopying over change for r1.8 branch to r1.7 branch.
Corresponding change:https://github.com/tensorflow/tensorflow/pull/18709/files"
Merge r1.8 back to master after 1.8.0 release.No description provided.
"[WIP] Enabling support for S3 and Google Storage for the MKL Docker image.@claynerobison Couldn't get this to build locally, any hints?"
corrected command for installation of cuda command-line toolsdocs correction for 16214
Updating versions for 1.7.1No description provided.
Grammar fixes on architecture.mdNo description provided.
corrected docs for installing cuda-command-line-toolscorrecting 16214
corrected docs for installing cuda-command-line-toolscorrecting 16214
command TypoNo description provided.
"Copy module list before iterating over itCopying sys.modules.values before iterating over it. Seems like we are seeing errors that dictionary is getting modified during iteration on some plaforms.
Also, I am adding ""from tensorflow import python"" explicitly since we are iterating over modules under tensorflow.python."
Branch 195061425No description provided.
"Fix Makefile to not use benchmark anymore (switch to minimal)Minimal uses nothing and does almost nothing, but it does nothing
requiring protos or rest of tensorflow runtime."
[Intel MKL] Enable Mac build on MKLNo description provided.
"Add conditions:default to mkl buildIf building on a system that is not darwin, linux_x86_64, or
windows, the select statement in third_party/mkl/BUILD fails to
find a match and fails. Need to use no mkl libraries for non-x86
systems"
R0.7test
fix cmake windows py27 import failfix cmake windows py27 import fail
fix cmake windows py27 import failfix cmake windows py27 import fail
Grammar fixes in BENCHMARKS.mdNo description provided.
Update xla READMEBeef up the README a bit and add a logo
Remove whitespace characters from tf_cuda_compute_capabilities user …string
Branch 194768567No description provided.
Update READMEAdding an additional demo link.
R1.4.add java u int16Add UInt16 support to Java Tensorflow API.
"Fix MSVC openmp flagCMake is checking the flag ""-fopenmp"" but the flag is ""/openmp"" at least on my setup (MSVC 2015 and 2017 with Intel compilers_and_libraries_2018.2.185)."
Use MKLROOTSearch ENV{MKLROOT} in addition to MKL_HOME. MKLROOT is the standard environment variable set by Intel scripts.
Update mobile prepare models documentationCorrect the command line examples to match the actual location of freeze_graph.
add missing equalityChange > to >= (2000 doesn't belong to a bucket otherwise)
"fix missing type conversionHi,"
Use `get_cosine_decay_fn` to match the descriptionNo description provided.
fix typoCompliling -> Compiling
contrib: minor spelling tweaksNo description provided.
"Escape regex pattern properly before using itWithout this patch, the function _ignore_file_path throws a traceback:"
Update is_windows() to allow mingw shellsNo description provided.
"Fix string issue for temp_export_dirCurrently, running tensorflow on python3 I get redundant b modifier of basename"
Fix cmake library path for libpng16.aThe CMake build fails on Fedora in normal build. libpng16 is using
union if's into one in the ast_util.No description provided.
DOC: add more explanation for auxiliary_name_scopeFix #18781.
Fix docs rendering in placeholder docs page.No description provided.
Allow tfdbg mouse down scroll in curses UIThis commit allows users to continuously scroll the screen when the mouse is held down on the scroll bar when using the curses UI for tfdbg.
Fixing the mock import error for devel docker.Same as #18843
Revised roadmapNo description provided.
"Refactoring: Remove a redundant map from model.h.Cherry picking this into r1.8 branch for a compatibility issue.
The original Piper ID: 194306629"
Docs: fix typoFixes b/78774644
Branch 194551042No description provided.
Move CROSSTOOL_nvcc.tpl to c++14 as cuda9 is supporting c++14 now.No description provided.
Disable python/kernel_tests/sparse_reshape_op_test.py on cmake.No description provided.
R1.0learn lower version to match my plan.
Add globs from Lambda before building itThe globals required to build the Lambda weren't loaded correctly. This leads to many problems when cloning a Model.
Update build_pip_package.shNo description provided.
Optimization pass and Memory allocator integrationThis PR introduces TRTOptimizationPass to run TensorRT conversion automatically as an optimization pass at the time of running and also adds necessary components to integrate TensorRT memory allocation into TensorFlow memory systems.
Fix build error with MPI supportThis fix tries to fix the issue raised in #18363 where the bazel build with MPI support fails as a header is missing in the include.
Adding Wrapper for Ridge SolverCreated a wrapper to run a sklearn.linear_model.Ridge solver in a Tensorflow Session to allow for faster convergence when optimizing a linear least squares + l2 regularization problem
Fix some issues in official tf.nn.topk() in liteNot sure if Google is planning a breaking change. If not:
Build libtensorflow.so and libtensorflow_framework.so for Raspberry Pi.Build libtensorflow.so and libtensorflow_framework.so binaries for Raspberry Pi during CI builds.
"[Intel MKL] Reverting changes from 495d511 that break install_pip_packages.sh in …Ubuntu 16.04 containers, causing nightly mkl ci builds to fail. The comments indicate that easy_install is not required in Ubuntu 16.04, but pip2 install --upgrade pip==9.0.3 fails in nightly mkl CI builds:"
Branch 194337205No description provided.
Fix critical metrics computation bug with Model in Eager mode.No description provided.
"Update tb-nightly dep to >= 1.9.0a0, < 1.10.0a0Synchronize tf-nightly dep on current tb-nightly: https://pypi.org/project/tb-nightly/1.9.0a20180425/"
fix typofix typo
"Fix link to original LSTM paperHi,"
"Update interpreter.ccUpdated file to remove condition, reduce complexity and reduced lines."
Clarified difference between GFile and FastGFile.Fixes #12663
Update version string to 1.8.0.No description provided.
Adding the h5py dependency in devel docker files.No description provided.
Updating release notes.No description provided.
fix for AR not being defined.This is the change as outlined in #14186
"Change the swap threshold by adding an elastic percentageOriginally, heuristic memory swapping feature won't improve much on the batch size, that's because IdentifySwappingCandidates are fully trusting the statically analysis.
Per my experiment, this did not improve the batch size at all."
Fix variance initialisersPull request for resolving issue #18706
"BUG: fix unmatched dtype between y_train and y_testy_train_np is uint8, while y_test_np is int64:"
Enable int8 support for FloorDivint8 is enabled for FloorDiv in math_ops.cc though the kernel was not registered.
[Cherrypick] Fix critical metrics computation bug with Model in Eager mode.No description provided.
Update tensorboard dep to 1.8.xTensorBoard 1.8.0 has been released to PyPI: https://pypi.org/project/tensorboard/1.8.0/
Fixing the mock import error for devel docker.No description provided.
Fix a bug where string::substr is used with wrong position.@samikama
Fix typos in index.mdFixed some typos including small grammar fixes and double spaces.
"Add DeviceSet to ClusterAdd DeviceSet to Cluster so we can access memory allocators when running grappler optimizations.
This is required by the TensorRT integration with TF."
Update README.mdNo description provided.
Update README.mdNo description provided.
Fix typo in CMakeLists.txtNo description provided.
Adding a ValidationHookThis can replace ValidationMonitor (which is now deprecated). It doesn't have the fancy stuff ValidationMonitor has like early-stopping and whatnot but it's a start.
fix incorrect example codebased on https://stackoverflow.com/questions/40904979/the-print-of-string-constant-is-always-attached-with-b-intensorflow
Update README.mdAwesome and details doc!
op not register@petewarden Please add a review or reassign. Thanks.
docs: Clean up install_linux with pipCleans up the 'How to Install TensorFlow' section using pip in virtualenv and system. Uses virtualenv in a typical workflow.Fixes #18767
"Raise error on separable convolution and depthwise convolution with strides > 1 and rate > 1In documents, separable_con2d and depthwise_conv2d should not accept strides > 1 and rate > 1 at the same time. But they don't have any code to check these parameters, so it worked in a wrong way."
Patches for Release 1.7No description provided.
Patches for Release 1.6No description provided.
Patches for Release 1.5No description provided.
Update install_linux.mdNo description provided.
Place data format op on CPU:0.Cherrypicking cl/192302833
Fixed TyposThis change is窶
Add uint32 and uint64 support with tf.train.batchThis fix tries to address the issue raised in #18586 to have uint32 and uint64 support with tf.train.batch.
R1.8 merge back to master after 1.8.0-rc1No description provided.
"Let cosine_distance work across multiple axesThis change lets users use cosine_distance to directly compute the cosine distance between n-dimensional tensors. Currently this requires reshaping the input tensors to 1D before calling cosine_distance. Other loss functions don't require reshaping, so it would be nice to remove this little bit of cognitive overhead."
R1.8 merge back to master after 1.8.0-rc1No description provided.
1.8r Cherrypick request-cherrypicks_30740: Fix for dropped metrics in evaluate function for Keras models.This CL should be cherrypicked since it fixes the following:
"Ensure Java Session closes the JNI on finalizeObviously the user should call close explicitly or use try blocks, but this catches the cases where they don't and can prevent massive memory leaks on services."
Emphasis *any* `Estimator`No description provided.
change to reference variableuse reference variable to make sure keypoints is updated.
"Switch from tf.contrib.metrics to tf.metricsMuch of the functions in tf.contrib.metrics has been deprecated in favor of tf.metrics. This fix
switches the usage of tf.contrib.metrics to tf.metrics, so that unnecessary warnings could be suppressed."
Change from squeeze_dims to axis when calling tf.squeezeThe squeeze_dims in tf.squeeze has been deprecated in favor of axis while many places still use squeeze_dims. That generates lots of warnings.
Fix cmake build issues with GPU on LinuxThis fix is an attempt to fix the build issues with GPU on Linux.
Fix numerical warning of np.float with explicitly specifying np.float32This PR is to fix numerical warning of type np.float.
"make safe_embedding_lookup_sparse method public and clean duplicate codesIn #17417, I found that same safe_embedding_lookup_sparse code exists in both embedding_ops.py and feature_column.py."
"update $ source spacingWhen viewing install_linux, the spacing was off for 'Next Steps' section."
[INTEL MKL] Fix compilation failure.Replaced calls to depreacted method StringPiece::contains with str_util::StrContains.
Update .gitignore for cmake generated filesAfter running cmake on Linux with:
Add Pull Request TemplateCreate PR Template to make easier to contribute to this repo and easier to check if the pull request is consistent and followed all guidelines.
Fix typoThere was a typo in comment.
"Fix numerical warning in the Iris exampleWhen running the script iris_monitors.py, the following message is prompted: WARNING:tensorflow:float64 is not supported by many models, consider casting to float32"
Fix tutorials directories are not Python packagesNo description provided.
[Cherrypick] Fix critical loss computation bug in Model training/eval with eager executionFixes #18642.
Branch 193740595No description provided.
[Intel MKL] Adding support for MKL to docker CI infrastructure.Creating a new PR because rebasing #18020 was a mess. See comments there.
r1.8 cherry-pick request: Fix CheckpointSaverHook to properly save every save_checkpoints_stepscc @chrisying
Roll forward the custom optimizers change@samikama
"[tf.data] Check in a strictly faster rejection resampling transformation.This transformation is faster because it rejects fewer data. This
is done by occasionally sampling from the original data distribution
in an efficient way."
Typo?I think it's Typo...right?
[tflite] add profiling to label_image for tfliteuse the profiling mechanism in dfae914
[INTEL MKLDNN]Enable mkldnn build under MacOs and upgrade mkldnn version to v0.13Signed-off-by: shaohua shaohua.zhang@intel.com
"modify initial value of scale to zeroIn Android NN's validation function, it will check operand type and scale
value. Here is sources of validation implementation.
switch (operand.type) {
case OperandType::FLOAT32:
case OperandType::INT32:
case OperandType::UINT32:
case OperandType::TENSOR_FLOAT32:
if (operand.scale != 0.f) {
LOG(ERROR) << ""Operand "" << index << "": Operand of type ""
<< getOperandTypeName(operand.type) << "" with a non-zero scale (""
<< operand.scale << "")"";
return false;
}
break;"
"Add the API to set the session configuration when load the model in the JAVASee the details in the issue:
[https://github.com//issues/18143]#18143"
Support string tensors for `tf.count_nonzero`This fix tries to address the issue raised in #18712 where tf.count_nonzero does not support string tensors.
Branch 193610264No description provided.
Fix typofix typo
Branch 193594593No description provided.
Update install_python3.5_pip_packages.shNo description provided.
[tf.data] Allow `sample_from_datasets` to accept a tf.Dataset object …for weights.
Use Chromium's NoDesructor<T> to avoid dynamic ctors/dtorsNo description provided.
Fix tf.variable_scope unique name after entering root scopeThis PR fixes a bug in creating unique scope name after entering and closing the root scope.
Fix doc gen errorMismatch after the fix in #17815
Fix code block rendering in several api definitionsThis PR is to fix code block rendering format in several api definitions:
Merge pull request #1 from tensorflow/mastermerge from google
Update docs for tf.unstack with respect to numpy compatibilityIn #18692 an issue was raised over whether tf.unstack is compatible with numpy.unstack (specified in existing docs) or numpy.split.
"fix typofix typo
unit8 -> uint8"
XLA CPU Fft no core framework and single threadSee #18588
"Add shape check for batch related Dataset opsThis fix adds several shape check for batch related Dataset ops: BatchDataset, DenseToSparseBatchDataset, SlideDataset, PrefetchDataset."
"Shape validation with random/shuffle related Dataset opsThis fix add shape validation with random/shuffle related Dataset ops: ShuffleAndRepeatDataset, ShuffleDataset,  RandomDataset, RangeDataset, CacheDataset."
"When override the git tag, the commits in front of tag val should be 0.For the git_version string, when overriding the git tag (when creating
release builds before tag is made), the commits in front of tag val
should be 0. Its expected you are going to create the new git tag
at the current commit."
"Validation in shape functions of Dataset opsThis fix does validations on several Dataset ops: PrependFromQueueAndPaddedBatchDataset, FixedLengthRecordDataset, SqlDataset."
Cherrypicks 1.8rc1 fix tf.GIT_VERSION always 'unknown' on windows cmake build (#16730)No description provided.
Add --test_output=errors as defaultNo description provided.
Branch 193411332No description provided.
"Fix issue for float16 data type with reuse in CudnnLSTMThis fix tries to address the issue raised in #18669 where for float16 data type, the reuse in CudnnLSTM throws a ValueError."
"Fix gen_git_version script not being able to find git binary.This error is happening on our Window's release builds. Making sure
we add git binary to the PATH for Bazel."
Update depreciation.pywriting if statement in one line
Fix issue where git_tag_override would fail if \-\ in tag name.No description provided.
"Update metric_loss.py""1.0"" and ""0.0"" is better to understand and also signifies it as float points when compared to ""1."" and ""0."""
Update train.pyThis fixes several warnings in tf.contrib.gan by switching to addsummaries in tfgan_losses
Fix build failure in `//tensorflow/python/kernel_tests:init_ops_test`With the most recent master the following test fails:
Fix incorrect format in community/documentation.mdThis PR is to fix the incorrect format rendering in community/documentation.md.
[r1.8] Fix tf.compat.as_str returns bytes issue in Python 3NOTE: This PR is against r1.8. Please feel free to close the PR if this is not appropriate.
Add uint16 support for py_funcWhen usingpy_func in tf I noticed that uint16 support is not available (all other numeric types have already been supported):
Replace raw_input/input with six.moves.inputThis fix is an enhancement to replace raw_input/input in python 2 and 3 with six.moves.input.
Remove over-indentationNo description provided.
"tf.keras: Warn user when they mix up `sparse_categorical_crossentropy` and `categorical_crossentropy`Sometimes we convert one-hot labels to integer labels, and forget to change the loss function categorical_crossentropy to sparse_categorical_crossentropy."
Add shape check to TextLineDataset opThis PR is to add shape check to TextLineDataset op to validate filenames is a scalar or a vector.
"Ordered bijectorThis PR implements the Ordered bijector. The Inverse of Ordered bijector maps a normal distributed vector y ~ normal(0, 1) to a sorted random vector that has the same distribution (i.e., normal(0, 1))close tensorflow/probability#7
cc @srvasude @dustinvtran"
Update debugger.mdShould be using normal softmax not sparse.
Remove useless duplicate lines in *.py filesThis PR is to remove useless duplicate lines in *.py files.
DO NOT MERGE: Test remote cache on WindowsThis is just a test for internal change on github presubmit
"R1.8Traceback (most recent call last):
File ""freeze_graph_test.py"", line 162, in testFreezeGraphV1
self._testFreezeGraph(saver_pb2.SaverDef.V1)
File ""freeze_graph_test.py"", line 100, in _testFreezeGraph
checkpoint_version=saver_write_version)
TypeError: freeze_graph() got an unexpected keyword argument 'checkpoint_version'"
"Fix wrong api name in apis.mdtyped_output_tensor is the correct api name.
It is implemented in the interpreter class."
"Add decode uint16 PNG images support for tf.image.decode_image.Add dtype argument to decode uint16 PNG images.
Update instructions for tf.image.decode_image."
Fix the calculation of the histogram buckets and writing to the tensor in summary_db_writerIssue: 1141: Incorrect data being written out for the histogram in the db
Update version strings for 1.8.0rc1.No description provided.
\1.8.0-rc1 cherry-pick request: Increase softmax gpu unittest numeric stabilityPiperOrigin-RevId: 193103363
1.8rc1 cherry-pick request: [tf.data] Fix a device placement issue in `prefetch_to_device()`.Cherry pick #18607 to the r1.8 branch.
1.8.0-rc1 cherry-pick request: boosted trees fixes/cleanupIt includes fixes and API cleanups.
1.8.0-rc1 cherry-pick request: Enable consumption of GIT_TAG_OVERRIDE env var in release build scrip…t. (#18579)
1.8.0-rc1 cherry-pick request: boosted trees fixes/cleanupIt includes fixes and API cleanups.
"1.8.0-rc1 cherry-pick request: In model_to_estimator, only run get_weights when there are initialize…PiperOrigin-RevId: 192541442"
"r1.8-rc1 cherry-pick request: adding tests for `decode_proto`, `encode_proto`, `rpc_op`The decode_proto, encode_proto, and rpc_op ops are a major feature introduced in r1.8 and this PR ports their tests to OS that -- beside testing the ops functionality in OS -- illustrate how to uses these ops."
"Remove duplicate imports in all python sourceWrote a script to scan throught the python files in the repo, and found the remaining duplicate imports  like:"
"QueueOptions var data types to size_tQueueOptions' max_batch_size and max_enqueued_batches are positive quantities, and when compared, in the code, with unsigned member functions, a warning is raised. By changing the data type from int to size_t, not only the meaning of the member variables are more aligned with their intent, but also the comparisons are done between unsigned integers, thus fixing the warnings."
Add shape check to TFRecordDatasetThe inputs of TFRecordDataset have the requirements for shapes.
Remove duplicate import in compat.pyNoticed there are a couple of places in compat.py that have duplicate import:
Branch 193234819No description provided.
"Improve shape function check for `tf.roll`The tf.roll op has requirements for the shape of inputs. However, the shape of the inputs are only done at the runtime inside the kernel."
"Using xrange from sixIn python 2 vs 3 xrange is different. This fix is an enhancement to use xrange from six, instead of additional logic of handling xrange in python 2 vs python 3."
"Branch 193218331Manually merged:
tensorflow/contrib/data/python/kernel_tests/sequence_dataset_op_test.py
tensorflow/contrib/data/python/ops/batching.py
tensorflow/contrib/metrics/python/ops/metric_ops.py
tensorflow/contrib/tensorrt/convert/convert_nodes.cc
tensorflow/core/common_runtime/process_util.cc
tensorflow/core/kernels/cwise_op_clip.cc
tensorflow/core/kernels/cwise_op_clip.h
tensorflow/core/kernels/cwise_op_clip_gpu.cu.cc
tensorflow/core/kernels/maxpooling_op.cc
tensorflow/python/framework/dtypes.py
tensorflow/python/framework/tensor_shape_test.py
tensorflow/python/kernel_tests/clip_ops_test.py
tensorflow/python/ops/clip_ops.py
tensorflow/python/util/tf_inspect.py
tensorflow/tools/api/generator/create_python_api.py
tensorflow/tools/docs/parser.py
tensorflow/tools/docs/parser_test.py"
"Make signal warning more clearBefore the change:tensorflow.python.framework.errors_impl.InvalidArgumentError: Bad audio format for WAV: Expected 1 (PCM), but got3 [Op:DecodeWav]"
"[tf.data] Fix a device placement issue in `prefetch_to_device()`.Previously, the iterator_get_device() op was being infeasibly colocated with
both the iterator and placed on the prefetch target device. Move the
construction of that op outside the with device(): block to fix this."
"Make wignal warning more clearBefore the change:tensorflow.python.framework.errors_impl.InvalidArgumentError: Bad audio format for WAV: Expected 1 (PCM), but got3 [Op:DecodeWav]"
"Improve deprecation assignment with deprecated_argument_lookupThis PR is to improve deprecation assignment with deprecated_argument_lookup, which is used in all other arguments deprecations.
The tf.losses.cosine_distance deprecated dim and switched to axis."
"Fix deprecateion warnings for tf.initialize_variablesThis PR is to fix deprecateion warnings for tf.initialize_variables.
The initialize_variables has been deprecated and replaced with tf.variables_initializer according to tf.initialize_variables."
Fix tf.compat.as_str returns bytes issue in Python 3This fix tries to address the issue raised in #18598 where tf.compat.as_str returns bytes (vs. str) in Python 3.
"Fix unintialized var warning in bfloat16This contribution initializes result to 0, then inside the #if statement only one byte needs to be set, depending on the endian, the other will already be zero from the initialization. This also fixes the compilation warning."
Add deprecated_args decoration to array_ops/ sparse_opsThis PR is to add deprecated_args decoration to several ops in array_ops/ sparse_ops as below:
Branch 193152683No description provided.
Add decode uint16 PNG images support for tf.image.decode_image.No description provided.
Add decode uint16 PNG images support for tf.image.decode_image.No description provided.
(do not merge) Testing changes for a future r1.7 patch releaseNo description provided.
Fix Warning in reduce_* related deprecation argument keep_dimsThis PR is to fix WARNING in reduce_* related deprecation argument keep_dims.
Remove conditional scope logic now that \current_arg_scope\ exists in contribNo description provided.
Fix typoNo description provided.
"Branch 193119953Manually resolved
tensorflow/contrib/data/python/kernel_tests/sequence_dataset_op_test.py
tensorflow/contrib/data/python/ops/batching.py
tensorflow/contrib/metrics/python/ops/metric_ops.py
tensorflow/contrib/tensorrt/convert/convert_nodes.cc
tensorflow/core/common_runtime/process_util.cc
tensorflow/core/kernels/cwise_op_clip.cc
tensorflow/core/kernels/cwise_op_clip.h
tensorflow/core/kernels/cwise_op_clip_gpu.cu.cc
tensorflow/core/kernels/maxpooling_op.cc
tensorflow/python/framework/dtypes.py
tensorflow/python/framework/tensor_shape_test.py
tensorflow/python/kernel_tests/clip_ops_test.py
tensorflow/python/ops/clip_ops.py
tensorflow/python/util/tf_inspect.py
tensorflow/tools/api/generator/create_python_api.py
tensorflow/tools/docs/parser.py
tensorflow/tools/docs/parser_test.py"
Enable consumption of GIT_TAG_OVERRIDE env var in release build script.No description provided.
GCS Filesystem should not cache checkpoint file as we need to read th…e updated checkpoints from the contents.
Added support for saved_model_cli input files stored on GCS/AWS.No description provided.
Added support for saved_model_cli input files stored on GCS/AWSNo description provided.
"Fix TFLite Makefile FFT2D dependency.FFT2D dependency was introduced a while ago so Makefile no longer works
until this fix."
Added support for saved_model_cli input files stored on GCS/AWSNo description provided.
"1.8.0-rc1 cherry-pick request: Disable square rewrite for complex types, re-enable arithmetic optimizations for testsNo description provided."
Merge pull request #18568 from case540/enable_git_tag_overrideAdd ability to override git tag in git_version string.
Fix the issue with Bahdanau attention when normalized=True and dtype = float16/32While revisiting #18106 I noticed that Bahdanau attention has a similar dtype mismatch issue when normalized=True. The issue comes from:
Merge branchMerging r1.8 changes into master.
"Add ability to override git tag in __git_version__ string.Adding this functionality to make release process smoother. It will
allow us to create the release builds before creating the git
release tag."
Fix expand_dims of dim argument has been deprecated with axisThis PR is to fix tf.expand_dims of dim argument has been deprecated with axis.
add checking for input values in GANHead constructorNo description provided.
"Update gemmlowp version for cmake buildThe gemmlowp has been updated in bazel, though cmake version was not updated. This fix updates
gemmlowp in cmake so that cmake and bazel versions are synced."
"Update libpng to v1.6.34 for cmake buildThe libpng has been updated from v1.2.53 to v1.6.34 in PR 18299.
However, the cmake version of libpng has not been updated yet. This fix updates the libpng for cmake to v1.6.34."
Update docs for tf.cast with supported typesThis fix tries to address the issue raised in #18529 where there are some confusion over supported types for tf.cast. This fix updates the docs with explicitly supported numeric type for tf.cast:
Fix tf.argmax warnings on dimension argument by using axis insteadThis PR is to fix tf.argmax warnings on dimension parameter by using axis instead.
libtensorflow_cc.so on AndroidHello again team TF!
Fix the doc strings of nn.sampled_softmax_loss since it was deprecatedThis PR is to fix the doc strings of nn.sampled_softmax_loss within tensorflow/python related apis since it was deprecated and replaced with  nn.sampled_softmax_loss_v2 according to softmax_cross_entropy_with_logits.
fix command line example package pathNo description provided.
Fix typofix typo
"Update pydoc for several tfdbg hooksFor class:
Specify that tfdbg.LocalCLIDebugHook can also be used to debug instances
of tf.estimator.Estimator."
"Update sqlite version for cmake buildThe sqlite has been updated in bazel, though
cmake version was not updated. This fix updates
sqlite in cmake so that cmake and bazel versions
are synced."
"Update gemmlowp version for cmake buildThe gemmlowp has been updated in bazel, though
cmake version was not updated. This fix updates
gemmlowp in cmake so that cmake and bazel versions
are synced."
Fix embedding_ops doc formattingCurrently the doc looks very messy: https://www.tensorflow.org/versions/master/api_docs/python/tf/nn/embedding_lookup_sparse
Fix rendering of documentation of tf.contrib.summary.Add backticks for code formatting and python highlighting in the documentation.
[INTEL MK] Updating MKL CPU CI build and test.Setting  KMP_BLOCKTIME to 0  to  workaround the effects of an oversubscription of OpenMP threads caused by executing multiple tests concurrently.
Branch 192842670No description provided.
1.8.0-rc1 cherry-pick request: some fixes for boosted_treesAfter the fixes:
Add testing for TF-TRTThis pr adds a py_test with a trivial class to contrib/tensorrt. Tagging @aaroey
"[INTEL MKLDNN]: Upgrade mkldnn version to v13this PR upgrades MKLDNN/ MKL versions on three platforms (linux, windows and mac) to V13."
Branch 192821482Fixing XLA test
Add extra code owner for tensor_forestAdd myself for that
Use eager compatible wrappers in load_library for custom opsNo description provided.
Use eager compatible wrappers in load_library for custom opsNo description provided.
"Enable mobile libtensorflow_cc.soHey team TF!
I'm not expecting a merge on this, but wanted to submit it for posterity. I've been working for a few years on a project where we use tensorflow as part of a C++ application running simultaneously on armv7, arm64, and ubuntu x64, additionally utilizing ceres, protobuf, opencv and eigen in our pipeline."
closure proto library for example protosBuild TF example protos using closure_proto_library so they can be used by TesnsorBoard TS/JS code in the future.
Cherry-picking PR #18444 into r1.8This PR is a cherry-pick of #18444 and fixes a static linkage issue that breaks int8 path in Tensorflow-TensorRT integration.
"Fixed the bug in mkl_input_conversion_op when reorder is not neededIn mkl_input_conversion, if one tensor is mkl tensor an another one tf tensor, we check if broadcast is needed. If broadcast is not needed, tf tensor is converted to mkl tensor. However, when tf tensor and mkl tensor has the shape, mkldnn reorder is not run, the output buffer is not updated, so the output buffer is random data."
Branch 192771889Third attempt to push to public.
"Add deprecation args decoration for tf.squeezeThis fix adds deprecation args decoration to tf.squeeze,
with deprecates squeeze_dims with axis."
Fix warnings in `nn.sampled_softmax_loss`The softmax_cross_entropy_with_logits has been deprecated and replaced with softmax_cross_entropy_with_logits_v2.
Fix functions in CRF when sequence_lengths contains zeroThis fixes computation of crf_log_norm and crf_sequence_score when sequence_lengths contains one or more zero.
"Fix the error looking for libhdfs.so, Mac OS using libhdfs.dylibWhen running the tensorflow on Mac OS to get the files from HDFS, with the following error:
tensorflow.python.framework.errors_impl.NotFoundError: dlopen(libhdfs.so, 6): image not found"
"Fix the broken TFLite iOS example.The demo app is only relying on CocoaPod now, but it's incorrectly
configured to use the headers on Github. It crashes the app when
the header is different between Github and CocoaPod."
"Fix crash when invalid dtype was passedThis fix tries to address the issue raised in #18474 where crash may happen if invalid dtype (e.g., ""[,]"") is passed to tf.constant(tf.string, ""[,]""). The crash happens during the comparision of ""[,]"" and numpy dtype candidate (e.g., np.dtype([(""qint8"", np.int8, 1)]):"
"Configurable Custom graph optimizers for grapplerThis PR is to start a discussion about passing configuration information to user implemented custom grappler optimization passes for @benoitsteiner, @zheng-xq  and @aaroey to take a look at. Please include other interested parties in the discussion."
Branch 192694244No description provided.
"Fix typosThis PR fixes some typos: wihtin, seperately, paramaters, Additonal, transformaitons, varibale, and folow."
Make changesNo description provided.
Create Stuff.mdNo description provided.
"Contrib MPI: Fix errors importFor logging, mpi_utils.h needs to import error.h"
"Fix warnings in tf.distributions.CategoricalIn tf.distributions.Categorical dimension was used with argmax.
As dimension has been deprecated this generates a warning.
This fix fixes the warning by changing to axis."
Add missing semicolonI missed semicolon in #18451 (review)
Install absl before buildingInstall absl-py before building windows\gpu\cmake\run_build.bat.
"Fix shape validation error with tf.nn.conv3d_transposeThis fix tries to address the issue raised in #18460. In tf.nn.conv3d_transpose when list or np array is passed, the validate of the output shape with filter shape uses output_shape[4] (channel). This will not work with data_format='NCDHW'."
Branch 192600256Manually merged tensorflow/python/framework/dtypes_test.py
"Add shape validation for tag input of StatsDatasetThe tag field of the StatsDataset needs to be a scalar. However, there was no check in the shape function. This fix adds the check of the tag shape."
"Replace raw_input/input with six.moves.input for python 2/3This fix is an enhancement to replace raw_input/input in python 2 and 3 with six.moves.input, which works in both python 2 and python 3."
"Fix compilation of split with SYCL enabledERROR: /home/tomeu/opencl-prefix/source/tensorflow/tensorflow/core/kernels/BUILD:436:1: C++ compilation of rule '//tensorflow/core/kernels:split_lib' failed (Exit 1)
In file included from tensorflow/core/kernels/split_lib_cpu.cc:18:0:
./tensorflow/core/kernels/split_lib.h:53:34: error: wrong number of template arguments (2, should be 3)
struct Split<Eigen::SyclDevice, T> {
^
./tensorflow/core/kernels/split_lib.h:35:8: note: provided for 窶template<class Device, class T, int NDims> struct tensorflow::functor::Split窶
struct Split {
^~~~~"
"Try to fix windows libtensorflowOne more attempt to fix Windows libtensorflow build. Current error:
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE\xmemory0(737): error C2280: 'std::unique_ptr<TF_Function,void (__cdecl *)(TF_Function *)>::unique_ptr(const std::unique_ptr<TF_Function,void (__cdecl *)(TF_Function *)> &)': attempting to reference a deleted function"
Replace all COMPILER_MSVC to _MSC_VER and _WIN32 accordingly-D compile flag should be avoided as much as possible. Many Google projects like Chromium follow  (which uses CMake or GN) only define macro in header file like below and always include the header file to get the macro (IWYU).
Fix OdeIntTestFix OdeIntTest in GPU pip build. This effectively reverts 23d6c55#diff-f541c00fcae53468339272b7c92a67a4.
[MSVC] Remove -D__VERSION__ flag and implement tf_compiler_version__VERSION__ is only used in one place. Remove -D__VERSION__ and implement tf_compiler_version for MSVC correctly.
Fix TensorRT static linkage problemThis PR fixes an issue with linkage manifested itself recently by linking static variables multiple times to different libraries.
"More build fixesThese fix typos in:#18432 (review)
and#18439 (review)"
"Fix cudnn version testDo not build tests under stream_executor/cuda directory if tensorflow_BUILD_CC_TESTS  is set to off. Otherwise, googletest is not included."
"Remove reference cycle checks from unit tests which touch uuid.uuid4()Should fix the release builds. They're failing because uuid4() creates reference
cycles in Python 2.7.9 (2.7.11+ are fine)."
Add GPU support for float16 batched matmulNote that //tensorflow/python/kernel_tests:batch_matmul_op_test previously passed only because it does not specify force_gpu=True and falls back to the CPU.
"1.8.0-rc0 cherry-pick request: Fix Windows GPU TensorFlow Bazel builds.The configure.py script will error out on Windows GPU builds due
to NCCL attempted to be configured (and is currently Linux only)."
"Replace tuple<int,int,int> for version info with a class in DnnSupportr::GetVersion()tuple<int,int,int> is falling into too perfect forwarding issue with gcc-6. This PR replaces tuple with a class until a more permanent solution can be found."
[tftrt update]Added support for TRT plugin during conversion
"1.8.0-rc0 cherry-pick request: Fix windows buildCurrently, Windows build is failing with errors such as:
tensorflow/c/c_api_experimental.cc(1741): error C2026: string too big, trailing characters truncated"
Relaxing float comparison and removing unneeded includeFixing two build failures:
Docs: Clarify using_tpu.mdNo description provided.
Branch 192461382Manually merged following files:
Fix print function with tf_logging.info to keep consistenceThis PR is to fix print function with tf_logging.info to keep consistence.
Update docs of reduce_max/reduce_min for real numeric typeBoth reduce_max and reduce_min only work for real numeric types as complex numbers do not apply. This fix update the docs with numeric type -> real numeric type.
"Imporve shape function of RandomUniformIntThe input of minval and maxval of RandomUniformInt should be scalar though it is not checked in the shape function. This fix improves the shape function with the rank check, and adds test case for it."
"Add deprecated_args decoration to expand_dimsThis fix adds deprecated_args decoration to expand_dims as dims has been deprecated and in favor of axis.
This fix also enhances deprecated args with deprecation.deprecated_argument_lookup"
Add string_strip to remove leading and trailing whitespacesThis fix tries to address the issue raised in #18384 to add an op tf.string_strip so that the leading and trailing whitespaces could be removed.
Fix typoNo description provided.
"Updating highwayhash library to fix kernel_tests:lookup_ops_test, lookup:lookup_ops_test and string_to_hash_bucket_op_test tests on ppcAll three of these tests were failing on ppc64le ,because the build was using a version of the highwayhash library which did not properly support the power architecture. Updating the library to include commit e2098b (google/highwayhash@e2098bc) seems to fix the issue."
Make op unique name generation case insensitiveUnique name generation for operations depends on checking a dict for names currently in use. This commit makes it so that the names stored in this dict are always lowercase so that we can check if a name already exists regardless of the capitalization.
Reorder section `Using SavedModel with Estimators`Outputs should be specified before performing an export.
"Add scanr support for tensorflowThis fix tries to address the issue raised in #17387 where unlike tf.foldl vs tf.foldr, there is no scanr support which is the opposite of tf.scan (scanl)."
Add negative axis support for tf.manip.rollThe tf.manip.roll is supposed to be compatible with numpy.roll. numpy.roll support negative axis which is not available in tf.manip.roll. This fix adds negative axis support for tf.manip.roll.
Updating the sed command for docker parameterized build.No description provided.
"Improving S3 documentation.Added a copy-pastable guide on the variables, and also provided usable examples that give immediate feedback."
Forcing the symlink creation.No description provided.
Forcing the symlink creation.No description provided.
[Intel MKL] Preventing MKL_DNN from getting built for non-mkl buildsNo description provided.
Forcing the symlink creation.No description provided.
"Expose Scaffold.default_local_init_op as a public static method.As discussed offline with @martinwicke, removes the underscore in all repo usages. Fixes #18242"
Fix docker 1.8 symlink for devel containersNo description provided.
Adding the python symlink command for devel packages too.No description provided.
Replace print with loggingNo description provided.
Adding the python symlink command for devel packages too.No description provided.
Update version for 1.8.0rc0No description provided.
Release notes for r1.8No description provided.
Branch 192309109No description provided.
"Make custom_graph_optimizer_registry header-onlyAdds the implementation as a dependency of libtensorflow_framework.so so its symbols are available to shared objects which want to register optimizers. No other rules include it, so shared objects won't accidentally get their own version of the registry."
Fix incorrect math equation renderings broken by backtickThis PR is to fix incorrect math equation renderings for markdown.
Add missing link to the eager guide.No description provided.
Rename rate parameter to dilation_rate.No description provided.
"update highwayhash library to fix kernel_tests:lookup_ops_test, lookup:lookup_ops_test and string_to_hash_bucket_op_test tests on ppc64leAll three of these tests were failing on ppc64le ,because the build was using a version of the highwayhash library which did not properly support the power architecture.  Updating the library to include commit e2098b (google/highwayhash@e2098bc) seems to fix the issue."
"typo and readability fixes in CPU sectionFixed a typo in the Tuning MKL section, and modified punctuation for intra_op_parallelism_threads section for easier readability."
JNI Session memory leakCurly brace required instead of right bracket for code display on getting started guide
"Fix code block rendering issue in adding_an_op.mdIn adding_an_op.md, html <code> was used in markdown for code blocks. However, this does not work very well as some of the code blocks includes incorrect rendering."
"Fix incorrect math equation renderings in random_fourier_features.pyThis fix fixes incorrect math equation renderings for markdown in random_fourier_features.py. The issue is that ""```"" backtick should not be added when mathjax quote is used (""\("" or ""$$"")."
Branch 192210794Manually merged following files:
"Branch 192193752Manually merged following files, PTAL"
unified flip_* and random_flip_* functionsThe code for flip_left_right / flip_up_down and random_flip... resp. differs only in the index in which the array is reversed. Therefore I have unified these two pairs of functions into non-public _flip and _random_flip functions.
"Branch 192145052Manually merged following files. Since this is my first rotation, please take a close look before LGTM this PR. Thanks."
Add support for tf.repeat (equivalent to np.repeat)This PR tries to address the feature request proposed in #8246 to add the support for tf.repeat that is equivalent to np.repeat.
"Allow access to keras.utils.model_to_dot APImodel_to_dot is not currently accessible from TensorFlow Keras. So visualizing the graph directly using commands  like SVG(model_to_dot(model).create(prog='dot', format='svg')) is not possible."
Fix some minor incorrect anchor linksThis PR is to fix some incorrect anchor links as below.
"Fixes to source_writer.cc.I dont have really much experience with C++, so please make sure what Im doing makes sense :)"
Fix broken links in /extend/language_bindingsThis PR is to fix broken links in TensorFlow in other languages.
"[XLA] Disable int64 test for backends which don't support itThis test forces the data type to in64.  Not all platforms support int64, and this change disables the test for platforms which do not advertise int64 support."
Docs: Fix 'Unable to find source java class'Fix error:
Fix broken link in doc for install_c.mdThis fix adds https:// to stackoverflow link. Without https:// the link is rendered as:
"Update tf.contrib.metrics with deprecationsThis fix updates tf.contrib.metrics.streaming_mean_absolution(relative/squared)_error
with deprecation notices as they have been replaces with tf.metrics."
"Fix incorrect data type registration of reduce_min/reduce_max in math_ops.ccThe ops tf.reduce_min/reduce_max should only support real number types. However, numbertype was incorrect used in math_ops.cc. (The kernel parts in reduction_ops_min.cc and reduction_ops_max.cc use TF_CALL_REAL_NUMBER_TYPES correctly)."
contrib: minor spelling tweaksNo description provided.
Comment out dynamic slice tests that rely on wrappingThis PR is to comment out dynamic slice tests that rely on wrapping.
contrib/lite: Avoid building benchmark_model for RPiNow benchmark_model depends on //tensorflow/core library.
Fix typo in error messageNo description provided.
"Fix WARNING in BatchNormalizationThe keep_dims for reduce_mean has been deprecated and replaced
with keepdims. This casues the following WARNING in BatchNormalization:"
Fix the default value doc string of global_step in contrib.slimThis PR is to fix the default value doc string of global_step in contrib.slim.
"Support CMake options to use external package providers like zlib, GRPC, EigenThis PR is to add the ability to use external package providers like GRPC, zlib, Eigen .etc. It is not possible to compile project using two different versions of protobuf right now."
remove the misleading n_class informationFix #15800
"Add missing TF_ATTRIBUTE_WEAK for MSVCTF_ATTRIBUTE_WEAK is used in //tensorflow/compiler/xla, but not defined for MSVC."
Branch 191925087No description provided.
[INTEL MKLDNN]: Fixed unit test ops_shape_function_test while build with MKLAdd missing shape_fn attributes in several mkldnn operators. MklConv2DWithBiasBackpropBias is not a MKLDNN operator (it is a MKLML operator) and add a check to see if MKLML exist or not.
fix build break cmake windows 32bitfix cmake  build break for target windows 32bit
[XLA/AOT] Build LLVM with Bazel on WindowsUpdate //third_party/llvm/llvm.bzl to support Windows.
Update README.mdMade a few changes to make the documentation clear.
contrib/autograph: minor spelling tweaksNo description provided.
Fix control edge issues and handle unsupported ops gracefully in int8 mode during TensorRT conversionThis PR fixes issues with incorrect handling of control edges in some rare cases during the conversion and improves the handling of unsupported ops in creation of INT8 calibration graphs.
Docs: Fix formatting in programmers_guide/debuggerFixes #17946
Branch 191797853No description provided.
Add win_def_file attribute for tensorflow/python:pywrap_tensorflow_internalThis attribute is somehow missing when pushing for internal to github.
Fix math equation rendering format in api definitionsThis PR is to fix mess-up math equation format in api definition related pbtxts according to the Math in markdown guideline.
Change --output_png to --output_imageThe argument is incorrect.
[TFTS] Switch to use tf.data for NumpyReader.read_full()Looked into the input_pipeline.py a bit. This one is a simple change but the other ones involve some refactoring and API changes in input pipeline so I think it's better to do it internally.
Validate the shape of TakeDataset and SkipDatasetThe count inputs of the TakeDataset and SkipDataset require scalar. That was not validated before though.
Branch 191729654No description provided.
give some writing updates to tensorflow/contrib/slim/README.mdNo description provided.
Check input dimension for contrib.layers.conv2d/conv3dThis fix tries to fix the issue raised in #14583 where the input dimension was not checked for contrib.layers.conv2d/conv3d and contrib.slim.conv2d/conv3d.
"Allow deletion of multiple checkpoints at onceThe code in saver.py that enforces the max_to_keep parameter (AKA keep_checkpoint_max) is written in such a way that it deletes at most one checkpoint when saving a new checkpoint. If a Saver gets into a state where the number of checkpoints in the checkpoints file is greater than max_to_keep, the Saver will never delete enough checkpoints to bring the number down to max_to_keep."
"Python3 support of docs generationThis is a resubmit of pr #16817, by @ppwwyyxx."
"INTEL MKL:  Fixing a unit test failure, for direct session memory allocationA unit test ""direct_session_with_tracking_alloc_test"" failed both in Google CI and Intel internal test. The root cause is: The check failed for checking allocation ID to 3 and 4 (hard coded). Here the test assumes, that the allocation id does not change in any place. But the problem is, the BFCallocator changed the allocation id when mkl is used. But, when mkl is not used, BFCAllocator is not used, thus allocation id is not overridden.
If MKL is used, it goes through various additional graph rewrite pass. In TF, everytime a graph pass happens, ""constant"" nodes are allocated and deallocated. Each allocation calls the (FindChunkPtr of BFCAllocator) which increments the value of AllocationId. Thus AllocationId becomes more than 3 and 4 if MKL is used, they can be 10 and 11 or other numbers. If MKL is used following the AllocationId check will not hold. Thus, skipping the check if MKL is used."
Update eager.mdNo description provided.
"Fix windows boosted_trees test failureIn the Windows cmake build, the test ""python/kernel_tests/boosted_trees/training_ops_test.py"" is failing on a Proto comparison. This commit changes one of the expected values to use
higher decimal precision which should pass on all builds. (-24.0143 to -24.014299)"
Add RecordInput documentation to tf.contrib.frameworkThis fix tries to address the issue raised in #10622 where the RecordInput is not available in the documentation.
"Fix linux cmake compilation error caused by recent grpc updatecompilation error:
13:25:10 grpc/src/grpc/libgrpc_unsecure.a(dns_resolver_ares.cc.o): In function grpc_resolver_dns_ares_init()': 13:25:10 dns_resolver_ares.cc:(.text+0x11c1): undefined reference to address_sorting_init'
13:25:10 grpc/src/grpc/libgrpc_unsecure.a(dns_resolver_ares.cc.o): In function grpc_resolver_dns_ares_shutdown()': 13:25:10 dns_resolver_ares.cc:(.text+0x12a9): undefined reference to address_sorting_shutdown'
13:25:10 grpc/src/grpc/libgrpc_unsecure.a(grpc_ares_wrapper.cc.o): In function grpc_cares_wrapper_address_sorting_sort(grpc_lb_addresses*)': 13:25:10 grpc_ares_wrapper.cc:(.text+0x28d): undefined reference to address_sorting_rfc_6724_sort'
13:25:10 collect2: error: ld returned 1 exit status
13:25:10 CMakeFiles/benchmark_model.dir/build.make:2069: recipe for target 'benchmark_model' failed
13:25:10 make[2]: *** [benchmark_model] Error 1
13:25:10 CMakeFiles/Makefile2:8340: recipe for target 'CMakeFiles/benchmark_model.dir/all' failed
13:25:10 make[1]: *** [CMakeFiles/benchmark_model.dir/all] Error 2"
Add abseil-cpp dependency for cmake to fix windows build failureCreating a tentative pull request to test this on a windows machine
Fix `TypeError: 'dict_keys'` in contrib.distribute with python 3This fix tries to fix the issue raised in #18205 where
Fix minor typo and math rendering format in linear operator related apisThis PR is to fix some minor typo and mathe rendering format in linear operator related doc strings.
[XLA] Don't run int64 tests for devices which do not support int64This particular test assumes int64 support.  Add a test to prevent the test from running when a device has not advertized int64 support.
[XLA] Allow for disabling of some tests in the XLA CC test suiteAllow for 2 XLA CC tests to be disabled in a manifest file.
fix problem: ld libgrpc symbols for MacOSfix problem: ld libgrpc symbols for MacOS when cmake build
"Fix std::out_of_range error when tensorrt.create_inference_graphwhen invoke trt.create_inference_graph(g,[""detection_boxes:0""])"
Fix math equation rendering format in nn related doc stringsThis PR is to fix mess-up math equation format in below NN related docstrings.
Generate Java ops wrappersThis pull request generates Java wrappers for TensorFlow operations. Generated source files are compiled with the main Java source code into the libtensorflow.jar file. The process is done in two steps:
Merging 1.7.0 into masterNo description provided.
Fix an issue in api_compatibility_testWhile trying to run on my machine (Ubuntu 16.04 Python 2.7) the api_compatibility_test:
Update the get_started_for_beginners.md fileMatched and added variable names to match the same ones used in the script iris_data.py that it references from models/samples/core/get_started/.
Pass dtype to constructor in LSTMCellThis fix tries to address the issue raised in #16228 where the dtype is not passed to LSTMCell and causes a TypeError when build() is called.
"Remove warnings for tf.contrib.copy_graph.copy_op_to_graph.When I run the test for tf.contrib.copy_graph, there were the warnings as shown below."
Fix adam optimizer related math equation rendering formatThis PR is to fix mess-up math equation format in below Adam optimizer related docstrings.
Fix warning in rnn_cell.pyThis fix fixes the warning in rnn_cell.py caused by l2_normalize with dim:
contrib/image: minor spelling tweaksNo description provided.
Added tensorboard link in Readme fileThere was not Tensorboard link in Readme file since added a nice one to introduce.
Power operator function instead of double star - cleanupNo description provided.
Power operator function instead of double starNo description provided.
Update metrics_ops.pyAdd deprecation notes
"Replace deprecated tf.contrib.metrics.streaming_accuracy with tf.metrics.accuracyAs tf.contrib.metrics.streaming_accuracy (tf.contrib.metrics.streaming_mean_squared_error) has been deprecated and has been replaced with tf.metrics.accuracy, this fix replaces deprecated tf.contrib.metrics.streaming_accuracy with tf.metrics.accuracy in tensorflow/contrib/training/python/training/evaluation.py."
Update build.gradleNo description provided.
"Validate the shape of count for RepeatDatasetThe count in RepeatDataset requires a scalar though the validation is only done in kernel, not in shape function."
Fix some rendering format in contrib doc stringsThis PR is to fix mess-up math equation format in below tf.contrib related api docstrings.
Maxpoolwithargmax cpu#6035
Fix tensor naming for tf.metrics.root_mean_squared_errorTensors returned by tf.metrics.root_mean_squared_error function do not reflect the name passed in the function parameters. This patch fixes that.
Distribute spNo description provided.
Update release notesUpdating release notes:
updated installation instructions for Tensowflow-TensorRT integration@aaroey @cliffwoolley @gunan
Merge pull request #1 from tensorflow/masterSync Base Changes
"1.7.0 cherry-pick request: Prevent warning every time someone imports contrib.learn.datasets.baseEverything in contrib/learn/python/learn/datasets/base.py has been deprecated. One of the function in there is a decorator, retry. Because another function in that file is decorated with retry, the function is called upon import, which prints a warning."
fix cmake windows python 2.7 test failfix cmake windows python 2.7 unit test fail
"Fix the tpu related broken link especially for imagenet_to_gcs.pyAs you can see in using_tpus, the link of below ""a script"" is 404 and no longer valid due to tpu-demos repo moved to tpu repo and adjust its correponding structure."
"Fix some formatting issue in cudnn_rnn and factorization docstringsThis PR is to fix several formatting issues especially math equation in cudnn_rnn and factorization related docstrings.
Take CudnnCompatibleGRUCell as an example below:
Before:"
Adding optional generated code printing in the demo notebookNo description provided.
Fix several formatting issues in python api guidesThis PR is to fix several formatting issues in Python API Guides
Branch 191063815No description provided.
Docs cherry-picks for r1.7No description provided.
"Allow ComplexAbs Op on mobile platformsSeems like it was disabled long time ago before open-sourcing Tensorflow.
I think disabling it is no longer necessary.
Works now on Android. Could anyone check on iOS?"
Branch 191029891No description provided.
Branch 191024726No description provided.
Fix issue with Luong attention when scale=True and dtype of tf.float16/tf.float64This fix tries to address the issue raised in #18099 where Luong throws a ValueError when scale=True and dtype is not tf.float32.
Fix typo in commentNo description provided.
Fix casting in Keras estimatorFixes #18094
Use rules_go to build go APIThis PR allows to add tensorflow dependency for Go API using rules_go and bazel.
[tfgan] Add one sided wasserstein gradient penaltyThis PR adds an optional argument to tf.contrib.gan.losses.wasserstein_gradient_penalty which allows for a one sided wasserstein gradient penalty.
Spelling error breaks GANEstimator documentation exampleFixed a spelling error that broke the tfgan.estimator.GANEstimator documentation example
Branch 190953197No description provided.
Initial commit for the demo notebookNo description provided.
"Implement faster resampling for tf.dataThis method leverages an observation: if we allow ourselves to either sample from a filtered distribution OR the original distribution, we can reduce the amount of data rejected during rejection sampling.  I implemented this 'conditional filtering' in a sort-of hacky way by internally creating an iterator and sticking it in a tf.cond branch. Feedback from a tf.data expert would be great."
Bounds-check node ID before getting it's nameWhen the edge is either a frame enter or exit edge then DescribeCycle() would segfault.
Fix math equation format in tf.contrib.bayesflow.monte_carloThis PR is to fix mess-up math equation format in below tf.contrib.bayesflow.monte_carlo related api docstrings.
Flushing prints to stdout in an autograph-generated py_funcThis change is required for a TF dev summit demo that is being held on Friday March 30. It is a manual patch from a change that already exists internally but has not propagated to GitHub. This is time-sensitive.
[INTEL MKL] Skip special nodes inserted by TF and MKLThis patch fixes SingleMachineTest.GraphOptimizations (//tensorflow/core/grappler/clusters:single_machine_test) unit test failure when MKL is enabled.
Update README.mdAdd YouTube channel
Using shell=True for windows git.No description provided.
Branch 190873003No description provided.
Default disable including the coordinator in the TPU jobFor the master branch so it doesn't make it into TF 1.8 without us verifying that it works.
Default disable including the coordinator in the TPU jobNo description provided.
Branch 190869028No description provided.
Fix git binary not being found on Windows in gen_git_source.py.No description provided.
Fix math equation format in layers docstringThis PR is to fix mess-up math equation format in tf.contrib.layers.legacy_fully_connected.
Branch 190861558No description provided.
Branch 190858242No description provided.
[INTEL MKL] utilize test_util.IsMklEnabled() to check if the MKL support is turned on or notNo description provided.
"Disable the toco binary in pip feature until it can used shared libsThe binary size was doubled by the saved model change. Since to process
saved models most of the TensorFlow runtime is needed. A workaround to
this is in the works and should be submitted in the next couple weeks."
Update version strings to 1.7No description provided.
Fix broken wiki link of Positive-definite_matrix in linalg api guideThis PR is to fix the broken wiki link of Positive-definite_matrix in linalg related api docs.
"Trying to fix libtensorflow GPU build.CUDNN path error.
Invalid path to cuDNN 7 toolkit. None of the following files can be found:
C:/tools/cuda\lib/x64/cudnn.lib
C:/tools/cuda\lib/x64/cudnn.lib"
Fix the incorect format of math equation in factorization_opsThis PR is to fix the incorrect rendering of math equation in tf.contrib.factorization.WALSModel.
"Raise a nicer error message when trying to call gradients with while loopThis PR is to fix #7404.
When you import a graph with a ""while"" loop, you can't calculate gradients as you could on the original graph. e.g."
"documenting that init_op will not be run when loading from checkpointsee #17969
I have also clarified the doc that if both init_op and init_fn are not None, both will be called."
Update api.pyAvoid overwriting existing namespace items that might replace the converted functions.
"Fix typosThis PR fixes some typos: parition, avaliable, exection, ouput, and suports."
Replace PLATFORM_WINDOWS to _MSC_VER as it only applies to MSVCAttempt to fix Bazel Windows build.
small update ctc_ops docstringNo description provided.
1.7 cherry-pick request: Update tensorboard dependency to 1.7.0+Cherrypick to update tensorboard dependency version.
Add link to raspberry pi demoNo description provided.
Fixed the bug in mkl_input_conversionThis PR fixed the failed unit test //tensorflow/python:image_ops_test  for MKL configuration.
Update tensorboard dependency to 1.7.0+TensorBoard 1.7.0 has been released to PyPI: https://pypi.python.org/pypi/tensorboard/1.7.0
Refix spelling error reverted in #18015No description provided.
Update RELEASE.md with 1.4.2 change notesNo description provided.
Revert \Fix minor typos in contrib files\Reverts #18015
Remove conflicting file from contrib.bayesflow to unblock push PRNo description provided.
"Fix issue caused by None in batch dimension for tf.layers.conv3dThis fix tries to address the issue raised in #15655 where error returns when the batch dimension for tf.layers.conv3d is None with ""channels_first"" format."
"Trying to fix libtensorflow GPU build.CUDNN path error.
Invalid path to cuDNN 7 toolkit. None of the following files can be found:
C:/tools/cuda\lib/x64/cudnn.lib
C:/tools/cuda\lib/x64/cudnn.lib"
"Validate axis in shape function of tf.reversetf.reverse requires the axis to be in the range of [-rank(tensor), rank(tensor)). Previously the validation is only done in runtime though it is possible to validate axis inside the shape function if the shape of the input tensor is already known."
Remove warnings for initialize_variablesThe initialize_variables has been deprecated and replaced withtf.variables_initializer.
Fix the math equation format issue in tf.matrix_solve_lsThis PR is to fix #17663.
"Fix the contrib losses function bullet lists renderingThis PR is the fix the rendering of function lists bullet in Losses (contrib).
Before:"
[Intel MKL] Adding support for MKL to docker CI infrastructure.This PR adds support for the MKL to the docker CI infrastructure. Non-development containers are supported via the publicly available pip whls at https://anaconda.org/intel/tensorflow/. Development containers are supported as well.
Branch 190618988No description provided.
Fix the incorect rendering of math equation in monte_carlo api guidesThis PR is to fix the incorrect rendering of math equation in BayesFlow Monte Carlo (contrib).
Fix minor typos in contrib filesThis PR is to fix several typos in contib related files.
"Seq2seq minorspcan squash to be more like #17815 if desired, let me know!"
"Update tb-nightly dep to >= 1.8.0a0, < 1.9.0a0Synchronize tf-nightly dep on current tb-nightly."
Disabling the state_management_test.For non-pip builds also. Failing release tests.
"[Intel MKL] MKL allocator fixreverting mkl allocator inline modifier from #17396. leads to build failures with older compilers (e.g., gcc6.3)."
Update GPU package installation instructionsUpdating GPU package installation instructions.
Adding Installation instructions for TensorRTThis PR updates installation instructions for GPU packages with an optional step.
Branch 190479555No description provided.
R1.1No description provided.
contrib/factorization: minor spelling tweaksNo description provided.
Fix missing interpretation of documentAdd missing interpretation of the mobile optimizing section of the documentation.
Updating install_golang.sh - bumping to 1.10No description provided.
make rnn cell build with flexible inputs_shapeIn case someone manually call them and provide a list or tuple.
Add parallel implementation of CTC greedy decoderUsed work_sharder to shard the computation of each batch according to #17136
add runOptions and metaGraph into LoadSavedModelNo description provided.
BF:Fix for rendering documentationFixes #17971
Add kernels/random_op.cc to contrib/makefileThis fixes an iOS build issue reported in #17666.
"Fix incorrect rendering in community/documentation.mdThis fix tries to fix the incorrect rendering in community/documentation.md.
The issue was caused by the escaping of """". As could be seen in the docs, there are """" (backticks) inside the code block and
the code block was surrended by ""```"" (backticks) as well. The
result is that backticks confused the inteprater of markdown and
messed the documentation. See screenshot:"
Fix windows gpu buildinary.
"Latest nngraph cannot build with Hexagon SDK 3.0While building TensorFlow with HVX support, it failed on the step of building nnlib with Hexagon SDK 3.0."
CUDNN grouped convolutions + depthwise convolutionThis pull request implements grouped convolutions backed by the CUDNN 7 convolution groups feature.
"Fix tf.svd docs issueThis fix tries to fix tf.svd docs issue where ""````"" (four backticks)
were used instead of three backticks (See previous ""```python"" with three backpacks). That caused the docs to render incorrectly."
Branch 190208069No description provided.
Fix the feature shape of maxout outputThis PR is to fix the feature shape of maxout.
Do not follow control edges in segmenter and in conversion and (#17936)gracefully handle some failures
Fix a minor tuple plus operationThis PR is to fix a minor bracket format for tuple plus operation.
Fix typoNo description provided.
"MKLDNN: conv2d forward DNN primitive reuse enhancementThis enhancement enables MKL primitive reuse for conv2d forward operation to reduce the overload of
repetitive creations of primitives. It"
"[tflite] fix number of gemmlowp threads problemRecent changes moved setting of the number of gemmlowp threads to
Init() of conv operation so that invoking Interpreter::SetNumThreads()
after nodes created doesn't change of number of threads."
Replace depreciated function variable_op_scope with variable_scope.No description provided.
Merge branch r1.7 into masterNo description provided.
Segmenter update for TFTRTThis PR cheery-picks #17912  into r1.7
Branch 190141732No description provided.
MKL: Fixing Build IssueFixing build issue where MKL-DNN is getting built when not using --config=mkl.
[Intel MKL] Change inter op defaults when built with MKLReduces inter_op parallelism when using MKL.
Branch 190078959No description provided.
"Fix the mirror link to replace bazel-mirror by mirror.bazelThis PR is to fix the mirror link pattern in the download_dependencies make file.
As we can see, mirror links in workspace.bzl is marked as mirror.bazel instead of bazel-mirror."
"Update tensorflow/contrib/lite/BUILDexports_files([""LICENSE""]) gives error while building on Mac and Ubuntu"
Fix minor markdown typo in lite models.mdThis PR is to fix a minor markdown typo in the lite models.md.
Fix incosistencies in the shape of the input Tensor in Layers DocThis pull request is to fix the inconsistencies in the Tensorflow Layers doc in #17892 and adds to #17893 which only fixes a single instance.
"swapped const and variables in documentationThe freeze_graph.py is converting Variables to Consts, not the other way around :)"
"change denominator so that the normalized values to [-1, +1] rangethe origin code just normalized the values to [-0.5, 0.5], we need normalized the values to [-1, +1] range."
Update TF-TensorRT segmenterThis PR fixes some issues in TF-TensorRT integration segmenter code for graphs where there are heavy control flow connections. This PR also improves error handling and error messages.
spelling fixNo description provided.
Branch 189962437No description provided.
"SetUsrMemDataHandle should return voidIt looks like there are two methods called SetUsrMemDataHandle, but this causes compilation errors because because of incorrect return signature."
"Add Scaled Exponential Linear Unit activation (Klambauer et al, 2017)No description provided."
Fix a variable name typo in the python api exampleThis PR is to fix a small typo in the python api example.
Branch 189913309No description provided.
"Fix the quantized table order by float value for easy readingThis PR is to fix the quantized table order for better reading and understanding in How to Quantize Neural Networks with TensorFlow.
Before fix:"
Fix dataset resampling bug introduced by a bug in datasets itself. fixes #16606Fixes github issue #16606.
Fix the inconsistency in the accepted shape/data_format in layers docThis PR is to fix #17892 on the the inconsistency in the accepted shape/data_format of layers doc.
"Update TF Lite android demo/del
Duplication"
"Clean up image_retraining exampleThe data files are remnants from when label_image.py used to be located
in the image_retraining directory and are no longer used."
"make toco build for androidfor ARMv8bazel build --config android_arm64 --cxxopt=-std=c++11 --linkopt=""-llog"" --linkopt=-pie //tensorflow/contrib/lite/toco:toco   --config monolithic
for ARMv7abazel build --config android_arm --cxxopt=-std=c++11 --linkopt=""-llog"" --linkopt=-pie //tensorflow/contrib/lite/toco:toco   --config monolithic"
"Updated README.mdEdited the word 'lets you' to 'enables you to', which I think is better for this sentence. The word 'enable' here gives the readers a feeling that the architecture makes some awesome things possible, while 'let' is more like to give some permissions to the users."
[Intel MKL] Enabling more operator fusionsSupport for Conv+ReLU fusion; Enabling Shape op as a part of MKL layout propagation
Revert \Fix dataset resampling bug introduced by a bug in datasets itself. fixes #16606 \Reverts #17858
Branch 189819449No description provided.
Branch 189819449No description provided.
Fix windows GPU build scripts.PiperOrigin-RevId: 188629017
Branch 189799697No description provided.
Disable one more flaky test on mac.No description provided.
Revert \Adds missing protobuf dep to tf.contrib.data ops. (#17840)\This reverts commit 36ec749.
"Support a single Tensor in StagingArea.put()This PR is to fix #13288 as a follow-up of #17862 to support a single Tensor in StagingArea.put().
As described in the above issue, considering the following two pieces of codes:Snippet 1"
Update the doc of StagingArea.put() to a tuple or list of TensorsThis PR is to fix #13288.
Fix dataset resampling bug introduced by a bug in datasets itself. fixes #16606Fixes github issue #16606.
improve fp16 tftrt predictiondelay fp32 to fp16 conversion to reduce accumulated rounding error
"Link to gcc_s and gcc if compiler is GCC version 5When using cmake and GCC 5.4 to build tensorflow in Ubuntu 16.04,
the following error message would show up when loading
_pywrap_tensorflow_internal.so:"
Disable kmeans test on mac.No description provided.
Branch 189641833No description provided.
Adds missing protobuf dep to tf.contrib.data ops. (#17840)I think this will help resolve the following:tensorflow/serving#421tensorflow/serving#684#17619
Adds missing protobuf dep to tf.contrib.data ops.I think this will help resolve the following:tensorflow/serving#421tensorflow/serving#684#17619
Fix related doc clarification request on tf.contrib.lookup.MutableHas…hTable insert operation #17835
"Fix internal breakage caused by #16659Due to copybara modification, we cannot put//tensorflow/contrib/ffmpeg:ffmpeg_ops_py into if_not_windows()"
"Fix the doc of tf.contrib.lookup.MutableHashTable insert operationThis PR is to fix #17835.
Document on MutableHashTable is confusing, especially in this line:"
Fix the incorrect link of building the op library in extend tutorialsThis PR is to fix the incorrect link of building the op library in extend tutorials:
"Fix set_difference docThe example in tf.sets.set_difference has a mistake. The result of tf.sets.set_difference(a, b) should be"
Fix typos in `resampling.py`.Correct initial_dist -> target_dist
"Add IndRNN implementationThis PR adds the cell implementation of Independently Recurrent Neural Networks
to contrib together with unit tests."
Add comment to examples to prevent resource leaksIssue #17374
"Variadic arguments for tf.control_dependenciesI see a lot of people get tripped up on tf.control_dependencies as they often try to pass a single tensor/op to it and forget to explicitly wrap it in a Python list. Perhaps it would be better to support both usages, as that is more in line with how tf.keras does things."
contrib: minor spelling tweaksNo description provided.
Add resize_image_aspect_with_pad methodThis method adds the ability to resize the image to specified size with padding without distortions by preserving the aspect ratio.
Add resize_image_aspect_with_pad methodThis method adds the ability to resize the image to specified size with padding without distortions by preserving the aspect ratio.
Fix two external anchor link in kernel method tutorialThis PR is to fix:
Fix broken internal anchor link in rnn quickdraw tutorialThis PR is to fix the two broken internal anchor link in the rnn quick draw tutorial as highlighted below:
Simplify `rejection_resample` test to remove unnecessary iterator initializationTested:
minor formatting fix in random_uniform documentationNo description provided.
"Enhancement with deprecated_argument_lookup for argmax/argminThis fix makes some enhancement for argmax/argmin, using deprecated_argument_lookup instread of customerized logic."
"Fix typo in `dataset_ops.py`: `datset` -> `dataset`.Tested:
This is a noop."
R1.7No description provided.
"contrib/lite: avoid building benchmark_model in build_ios_universal_libIt is not needed part of this script. In addition, since f0633ec benchmark_model
now depends on //tensorflow/core library which is not taken into account by the
Makefile from contrib/lite, and thus causes failure:"
"Fix nested scope issueIf you have a myApp::tensorflow namespace and you are using TF's logging, then missing global scope specifiers :: are cause a compile error."
"contrib: minor spelling tweakspackages:
model_pruning
rnn
solvers
tensorrt"
Update version strings for 1.7.0-rc1No description provided.
"Apply 1.4.2 patch updateThis PR applies the patches requested for the 1.4.2 patch release, and updates the version strings accordingly."
"1.7.0rc2 cherry-pick request: Fixes a bug in `tf.contrib.data.map_and_batch()` shape inferenceThis backports a fix for issue #17720 to the release branch. (It would not be the end of the world if this change wasn't cherry picked, but I'm sending it opportunistically in case it's be possible to fix the bug in the new release.)"
"[update TensorRT converter]fixed FusedBatchNorm to support broadcast;
remove fp16 conversion for type int const
add Snapshot in conversion (treated as identity)"
"Fix inconsistency in parameter naming for tf.nn.conv1dThis fix tries to address the issue raised in #6379 where parameter namings for tf.nn.conv1d/conv2d/conv3d are inconsistent. While tf.nn.conv2d/conv3d (and tf.nn.convolution) uses input and filter, conv1d uses value and filters."
Fix incorrect link of checkpoint files in CNN tutorialsThis PR is to fix the incorrect link of checkpoint files in CNN tutorials.
"MKL Fixed timeline_test unit test failure, changed the test so thatFixed timeline_test unit test fails, changed the test so that it can take cpu name changed with MKLDNN naming conversion"
Revert \Windows: Enable tensorflow/contrib in Bazel build (#16659)\This reverts commit c6a12c7.
"Updated tf.Session.run(...) documentationAdded information that order in which fetches are evaluated inside the call is undefined.
Discussion: #13133"
"[update TensorRT converter]fixed FusedBatchNorm to support broadcast;
remove fp16 conversion for type int const
add Snapshot in conversion (treated as identity)"
fix the bug that all string fields in protobuf share same memory location in the monolithic buildAll string fields in protobuf share same memory location in the monolithic build. This problem is described in #16291. Export protobuf related symbols in the library to fix it.
Branch 189319553No description provided.
"Add missing linking libs for iOSWhen creating a new iOS app in Xcode with Tensorflow, we need to add these references to fix linking errors."
Feature: tf.contrib.data.unordered_merge() #17471Here is the feature for issue #17471.
Fix typofix typo
crf_decode fails when sequence_length is 0Fix for #17746
MKL DNN: fix the TF1.6 speed issue by fixing MKL DNN LRN taking the optimum path (#17605)MKL DNN: fix the TF1.6 speed issue by fixing MKL DNN LRN
"using finally in tf_record_iterator()Hi, this is to handle the case when generator.throw() or generator.close() is called on a tfrecord iterator."
"Cast return value that caused warningThe member function num_runs() returns an int, however the return value from run_total_us_.count() is an int64. Casting the value to an int allows for the compiler to know that the intended return value should be an int."
Update kernel_methods to fix failing build_docs_testNo description provided.
"Fix broken link of performance guide for the `tf.data` APIAs you can see in the Performance Guide, the below here didn't link to the correct place with https://www.tensorflow.org/performance/performance_guide#datasets_performance due to datasets_performance.md is another file instead of an anchor inside current file."
implement matrix 2-normImplement matrix 2-norm by using tf.svd.
"Fix folding unfused batchnorm bugFolding batch normalization which has parameters like is_training=False, fuse=False, scale=False raises an error because its batch_mean_tensor is None. I suggest using moving_mean_tensor instead."
README.cmd typo.Just a typo on README.cmd.
fixed the bug in tf.graph_util.remove_training_nodes when applying to LSTM networksThis bug damages LSTM network structure and make the model unusable.
contrib/boosted_trees: minor spelling tweaksNo description provided.
"Updated Session.run() documentationFor session.run(ops), order in which ops are evaluated is undefined, but that information isn't specified anywhere in documentation. It's quite natural to assume that ops are evaluated in order provided, especially since that's what cpu version of Tensorflow does (at least on every implementation I tried). GPU versions don't always follow FIFO evaluation order though. If needed I can provide a test that shows different behavior with tensorflow and tensorflow-gpu purely due to different order of evaluation inside session.run(ops)."
contrib/gan: minor spelling tweaksNo description provided.
Patch release notesNo description provided.
"Update ios.mdbrew install commonly fails on modern versions of OSX, where the symlink needs to be manually added. I added instructions to chown /usr/local/*, which will allow for this."
Pin the version of cuDNN used in Dockerfile.gpuRelated: #17566Fixes: #17431
Update README.mdFixed location of download_models.sh in the iOS Demo App section
Branch 189071037No description provided.
Elaborate on documentation for using tf.layers.batch_normalizationThis PR adds details about a gotcha not previously documented related to batch_normalization. See https://groups.google.com/a/tensorflow.org/forum/#!topic/discuss/Y0BSYDRQ_BU
Patching r1.2No description provided.
Patch 1No description provided.
Branch 189041421No description provided.
"update doc for tf.train.Saver() max_to_keep argument to resolve #17554Currently, if max_to_keep is set to 0, all checkpoints are kept but only the last one is kept in the 'checkpoint' file. This was not previously clear in the docs. See #17554"
"Fix broken link of TensorFlow Debugger (tfdbg) in layers tutorialsDescribed as PR tile.
Just follow the similar format of linking to debugger.md to fix current broken link issue in layer.md tutorial: https://github.com/tensorflow/tensorflow/blob/173b4067eb8a724b5608f709c83b5a80df87dcea/tensorflow/docs_src/programmers_guide/index.md"
"gofmt with tensorflow/go/genop/internal/genop.goBy default golang use gofmt -s to format the code though
it looks like tensorflow/go/genop/internal/genop.go is not
formattted with gofmt."
"Changed sparse_column_with_vocabulary_file to estimate vocab_sizePrior to this change, the function required vocab_size to be explicitly specified by the user which made the API inconsistent with categorical_column_with_vocabulary_file."
atrous_conv2d doc fix newlinefix newline in docs for tf.nn.atrous_conv2d
Fix masking orderThis fixes the same issue as #14831 but for the BatchNormalization layer and Bidirectional wrapper.
contrib/tpu: minor spelling tweaksNo description provided.
make TFLite kernel tests workmake
"Fix issue of tf.gfile.Exists with Unicode on WindowsThis fix tries to address the issue raised in #17695 where
tf.gfile.Exists with Unicode on Windows does not work as expected.
The issuse comes from the usage of _access (vs. _waccess)."
Update documentationThis PR updates Readme file with instructions to help installation of external packages.
Fix floating point exception when loading from a small events log file using the loaderIssue:  Floating point exception when using the loader to load some data from a small events log file
Branch 188893722No description provided.
Sfu2/numa test 2No description provided.
Fix format issue in ffmpegThis fix tries to address the issue raised in #17533 where some ouput generated by ffmpeg may not be parsed correctly.
Fix warning in embedding_opsThis fix fixes the warning in embedding_ops.py by switching from keep_dims to keepdims for tf.reduce_prod
1.7.0rc1 cherry-pick request: Fixes a race condition in function instantiation.This cherry pick fixes a bug that was discovered independently by multiple TPU users after the release branch was cut. The main consequence of not including this change in the release would be flaky crash failures (segmentation faults) in the input pipeline.
"Fix broken link of tf.train.Example in recurrent_quickdraw.mdIn recurrent_quickdraw.md, the link ${tf.train.Example} is not rendered correctly. This fix fixes the broken link with correct rendering. Now the link is rendered the same way as tf.train.Example in api_guides/python/reading_data.md and extend/new_data_formats.md"
Added data_format to flattenIf you train a model in NCHW format but then do inference in NHWC the results are different as the reshape sets up the resulting array differently.
Added data_format to flattenIf you train a model in NCHW format but then do inference in NHWC the results are different as the reshape sets up the resulting array differently.
"Fix to 'Model' object has no attribute '_container_nodes' error when using tf.keras.utils.plot_model().Fix to #17633. Duplicate of #17658
'Model' object has no attribute '_container_nodes' error when using tf.keras.utils.plot_model().
Replaced
if node_key in model._container_nodes:
with
if node_key in model._network_nodes: # pylint: disable=protected-access"
Sfu2/numa test CLANo description provided.
Fix linkFix wrong link
Sfu2/numaNo description provided.
contrib/quantize: minor spellingNo description provided.
Make tensorflow/python:framework_importer_test largetensorflow/python:framework_importer_test sometime times out during release builds
"Fix to 'Model' object has no attribute '_container_nodes' error when using tf.keras.utils.plot_model().Fix to #17633
'Model' object has no attribute '_container_nodes' error when using tf.keras.utils.plot_model().
Replacedif node_key in model._container_nodes:
withif node_key in model._network_nodes: # pylint: disable=protected-access"
"Fix to tf.keras.utils.plot_model() errorFix to #17633
'Model' object has no attribute '_container_nodes' error when using tf.keras.utils.plot_model().
Replacedif node_key in model.container_nodes:
withif node_key in model._network_nodes: # pylint: disable=protected-access"
"Support NUMA aware CPU deviceWe noticed TensorFlow does not scale too much from single CPU socket to multiple CPU sockets. From the performance profiling, we found the memory traffic between NUMA nodes are very high. The latency from the remote memory access prevents TensorFlow from scaling to multiple NUMA nodes."
"Fix the script entry point for freeze_graph.The wrapper created by setup.py calls the entry point
function with no arguments. freeze_graph.main expects
the global FLAGS to be set, and one argument."
"Add python built-in types support for `tf.as_dtype`This fix tries to address the issue raised in #17641 where it was not possible to use tf.as_dtype(float) the same way as numpy np.dtype(float).
This fix adds the built-in types support for tf.as_dtype, so that it is possible to specify:"
Branch 188738133No description provided.
Fix broken links in tutorial/layersThis PR is to fix:
Added data_format to layersIf you train a model in NCHW format but then do inference in NHWC the results are different as the reshape sets up the resulting array differently.
"Fix unaligned access on Android 4 or 5This issue is caused by a breaking change in NDK clang (r13+). In those
recent NDKs, clang assumes NEON vectors are aligned to 128-bit boundary,
and thus generates 128-bit address hints. However, on old Android
versions, heap-allocated memory are not always aligned to 128-bit."
Fix TensorBoard tutorial links to the wrong MNIST tutorial example codeThis PR is to fix #17600.
minor editbased off my understanding of the source code. here's the stackoverflow post I made about my confusion:https://stackoverflow.com/questions/49145541/tensorflow-retrain-py-understanding-train-batch-size
make benchmark_model for TFLite buildIt doesn't build for Android and Ubutu box. Make it build.
"Fix broken link in programmers_guide/faq and some minor formatAs we can see in programmer_guide/faq, there are two broken links:
The first one:"
"Fix broken link in kernel method tutorialAs we can see in Kernel Methods tutorial, the reference links in Note section haven't generated valid links."
Fix windows gpu cmake buildNo description provided.
Small markup documentation fixes around closing blocksNo description provided.
Fix mac installation documentation errorThis fix tries to address #17614 where installation for python 2 was incorrectly pointing to python3.
Fix incorrect python version in installation doc for MacThis fix fixes the incorrect python version (2 vs 3) in the installation documentation for Mac.
[CMake]Exclude duplicate tests from ${tf_test_src_simple}This fixes errors caused by adding executable targets twice.
Fix inconsistency of eq for TensorShapeThis fix tries to address the inconsistency of eq for TensorShape.
"Include links to new announce@ listWe have set up an announce@ list which only carries important announcements, such as new releases and security notifications. This PR links these from the README and community documentation: we want to encourage as many users as possible to join the list."
"MKL DNN: fix the TF1.6 speed issue by fixing MKL DNN LRN taking the optimum pathThere is a performance regression for TF 1.6 comparing to TF 1.5 for cifar 10. The root cause it cifar 10 uses depth radius = 4, for which MKL DNN takes unoptimized path. Thus we fix this issue by using following strategy:
If the depth_radius of LRN is not 2, then MKL DNN takes unoptimized path. The unoptimized path is slow. Thus we dont rewrite the node  and use default Eigen. But for depth_radius=2, MKL DNN optimized
path is taken, i.e., eigen LRN node is rewritten by MKl DNN LRN node."
Fix broken graphviz download link and change to httpsThe graphviz download link has been changed tohttps://www.graphviz.org/download/
Branch 188540944No description provided.
"Update fold_old_batch_norms.cc to accommodate 'NCHW' format.Fixes the problem of using fused batch normalization and this transform, only shows up when using 'NCHW' as the default is 'NHWC'."
Update bazel toolchains dependency.PiperOrigin-RevId: 186650360
Disable tensorflow/contrib/learn:monitors_test for pip gpuNo description provided.
Including the original path to find bazel.No description provided.
"SECURITY.md: minor sp, permisisons->permissionsNo description provided."
Fix pylint error in single_return.pyNo description provided.
Fix the broken link of tf-learn's iris tutorial also some format and typoThis PR is to fix:
C++ gradient for SliceSee #9645
Support other dtypes in BeamSearchDecoder initializationThe BeamSearchDecoder initialization failed when other dtypes were used (e.g. tf.float16). This PR correctly converts the scalar values to tensors with the current dtype.
"contrib:get_variables_and_layersHere are two function to extract layer names and respective variable values, also an example provided in jupyter-notebook."
Update RELEASE.mdNo description provided.
"Fix cmake build errors for LinuxWhen trying to build TensorFlow with cmake for Linux, as was specified:"
Make spinn_test less flakyNo description provided.
Disable checkpointable_utils_testfailed http://ci.tensorflow.org/view/Release/job/release-debian-cpu/99/consoleFull
Hide `os` from docs generatorHide os so we don't generate api_docs for it
Hide `os` from docs generator.Delete os so the docs generator doesn't build docs for it.
Fix pylint error in single_return.pyNo description provided.
Correct curly brace typoCurly brace required instead of right bracket for code display on getting started guide
contrib/lite: add missing include assert.h (spectrogram.cc)tensorflow/contrib/lite/build_ios_universal_lib.sh fails with:
Update version string to 1.7.0rc0 everywhere.No description provided.
"Run selective registration tool even if it's just been builtFollow-on to #14421 - when running build_all_ios.sh -g path/to/model.pb for the first time, the selective registration tool would be built, but not used."
Update tensorrt import exception.No description provided.
"Remove TF_NEED_KAFKA from configure.py as it is not needed anymore.With the new update in kafka dataset support, it looks like TF_NEED_KAFKA is not needed any more as we are loading .so dynamically. For that I think it makes sense to remove TF_NEED_KAFKA option from configure.py."
"Fix the tpu related broken link especially for imagenet_to_gcs.pyAs you can see in using_tpus, the link of below ""a script"" is 404 and no longer valid due to tpu-demos repo moved to tpu repo and adjust its correponding structure."
Fix markdown error in layers tutorial.No description provided.
"Fix the messed up list format in using_tpu.mdAs you can see in using_tpu.md, this PR is to fix below messed up format:"
C++ gradient for StridedSliceSee #9645
SYCL with ComputeCpp: local_config_sycl has multiple matchesThis patch fixes issue reported lukeiwanski#197
"Exclude kafka on WindowsI tried to enable kafka on Windows, but found it depends on boringssl/decrepit/bio/base64_bio.c which is not available in boringssl's Bazel build. I filed an internal issue for the boringssl team."
"fix some compilation errors on MSVC if IS_SLIM_BUILDUsing MSVC (2017), the record_reader.cc can not be compiled successfully if IS_SLIM_BUILD is defined, so this PR fixes it."
add reflexive method for DimensionFix #17482
"Register half in some ops which support all floating point typesAdd 'half' to the acceptable data types for the depthwise convolution gradients, and some pooling ops."
"Revert \Update external protobuf codebase version for Windows cmake b…uild"""
"remove annoying print of tensor for ValueErrorI ran into this ValueError while using the tf.data.Dataset, and I had to wait for my (3e6, 2) shape Tensor to print out before I saw the error message."
Branch 188272354No description provided.
R1.6No description provided.
Merge 1.6 back to master.No description provided.
contrib/lite: spelling/code tweaksNo description provided.
Add scan command to saved_model_cli to check for security sensitive ops.No description provided.
Add scan command to saved_model_cli to check for security sensitive ops.No description provided.
"Enhancement with deprecated_argument_lookupThe tf.losses.cosine_distance deprecated dim and switched to axis. This fix adds the enhancement of using deprecated_argument_lookup, which is used in all other arguments deprecations."
"Improvements for Android TVTo build for Android TV, user need to modify the orientation from ""portrait"" to ""landscape""
for the four activities in tensorflow/examples/android/AndroidManifest.xml"
Merge r1.6 back to masterNo description provided.
Branch 188235030No description provided.
Making dockerhub the primary installation location.No description provided.
add error message when importing contrib.tensorrt without libnvinferNo description provided.
Branch 188191091o Small BUILD file change needed to be fixed
Fix minor typo in saved_model.mdDescribed as PR title.
Fix broken link of distributed in graphs.mdThis PR is to fix:
"jpeg.BUILD: Use --cpu instead of --android_cpuTF build is broken with Bazel@HEAD, see https://buildkite.com/bazel/bazel-with-downstream-projects-bazel/builds/141#ca77fce7-7ea1-4427-a49b-1ab1305f6bfb"
Modify a typo for the  HandwrittenConv of conv_ops_test.A typo is fixed for the 'HandwrittenConv' test in the conv_ops_test.cc.
set default values of args in print_tensors_in_checkpoint_fileset default values of args in function print_tensors_in_checkpoint_file to avoid backwards compatibility problems.
Cherrypicks for 1.5182804819 not found in github
Updating version for 1.5.1 patch release.No description provided.
Branch 188075262Small merge conflict in tensorflow/contrib/timeseries/python/timeseries/BUILD to disable a test for msan and on windows
Feature/typo 2018 03 07Fixed minor typos :)
Branch 188037439No description provided.
MKL: Optmized Relu by in-place computationsUsing OpKernelContext::forward_input_or_allocate_output()
Fix minor typos for programer guide documentsDescribed as PR title.
Update wide.mdAlphabetized races: standard procedure in documentation.
add assert_element_shape method for tf.contrib.datafix #16052.
Update replicate_model_fn.pyAdded a name attribute to _PerGraphState. Using the TowerOptimizer throws this warning without it:
Update replicate_model_fn.pyAdded a name attribute to _PerGraphState. Using the TowerOptimizer throws this warning without it:
"Windows: Use cc_import to import python lib properlyPreviously, we put python.lib in data attribute of a cc_library and
manually added the link option. That caused the build to be
non-hermetic. This change fixed the problem."
"[XLA] Allow for devices which have F16, no F64, no ComplexThere has been an introduction of flags for support of various types in the XLA_TYPED_TEST macro."
fix typoespected -> expected
Accepts `PathLike` objects for dataset readersFurther work to #15784 to allow PathLike objects to be passed to Dataset readers as well.
Added replicate_model_fn to contrib.estimator.I noticed that multi-gpu training (in a tower-like fashin) in r1.4 is not supported. So I copied the replicate_model_fn from r1.5 and applied the needed changes:
"add a simple tensorflow model safety-check toolCheck whether a TensorFlow model contains security sensitive ops, Output related info."
Don't use NCHW or NHCW in tf.layers.conv1dFixes deprecation warning when using tf.layers.conv1d.
"einsum: allow capital letter indicesSmall tweak to allow capital letters in einsum, as in numpy. This is occasionally a problem when more than 26 indices are needed."
"Fix broken link pointing to vulnerability reporting/SECURITY.mdThe vulnerability reporting (SECURITY.md) has been moved to top level
directory, this fix fixes the broken link inside tensorflow/docs_src/community/welcome.md"
"Deprecation of the LXD PPAsLXD PPAs are deprecated at the end of 2017 and need to use
the official backports in the Ubuntu archive."
Updating the cuda compute info and avx info for Windows.No description provided.
Branch 187892975No description provided.
"Update CUDA capability to 3.5 when install from binary in documentationThis fix tries to address the issue raised in #17445. The minimal CUDA capability is 3.5 for Linux install from binary, though the documentation only specifies 3.0."
"Update the documentation of `softmax_cross_entropy`This fix updates the documentation of softmax_cross_entropy,
and removed the shape restrictions of onehot_labels and logits.
They only needs to be of the same shape, not necessary [batch_size, num_classes]."
Add optimizers with decoupled weight decay.This pull request implements decoupled weight decay as described in 'Fixing Weight Decay Regularization' by  Loshchilov & Hutter https://arxiv.org/abs/1711.05101.
Fix typoNo description provided.
"the correct argument is \--output_image\It looks like the correct argument name is ""--output_image"".  I got the following error when I ran it with ""--output_png"":"
Correct capitalizationNo description provided.
Correct reporter name.No description provided.
Fix build issue with KafkaDatasetThis fix tries to address the issue raised in #17210 where error of NotFoundError: Op type not registered 'KafkaDataset' in binary. returned from kafka ops.
Fix cmake Dockerfile issue on LinuxWhen running cmake on Linux with (clean build with no cached docker images):
Add missing `#define OMPI_SKIP_MPICXX`This fix adds the missing #define OMPI_SKIP_MPICXX in tensorflow/contrib/mpi/mpi_utils.h so that it is consistent with other usages of mpi.h includes. OMPI_SKIP_MPICXX skip the MPI C++ bindings support.
Docker Jupyter: Update deprecated softmax_cross_entropy_with_logitsThe current Jupyter Notebook included in the Docker image 3_mnist_from_scratch.ipynb uses the deprecated tf.nn.softmax_cross_entropy_with_logits.
"TensorRT support for ARM architecturesi.e. without this modification Tensorflow under Nvidia Jetpack 3.2 is not compiling. Else condition in if-then-else block generates a path ""%s/../include"" which results in ""/usr/lib/include"" but it must be ""/usr/include/aarch64-linux-gnu""... So this fix targets ARM architectures and with this fix, Tensorflow 1.6rc compiles fine with TensorRT support."
Branch 187691555No description provided.
updating documentationFix for #16555
Add tensor support for num_spectrogram_bins in linear_to_mel_weight_matrixThis fix tries to address the issue raised in #16553 where it was not possible to provide num_spectrogram_bins as a tensor or placeholder for linear_to_mel_weight_matrix.
"Add missing spaces in multiline stringsCame across a missing space in a ValueError exception, and I run quick grep to find other instances of the same issue in the codebase."
"[WIP] MKL repos download for mac and windows + update to MKL(-DNN) 0.12This PR implements MKL repos for Mac (tested) and Windows (not tested yet)
As well as reworks MKL.BUILD to support all 3 desktop platforms"
add AdaMax optimizerFix #17104. The PR implements the AdaMax optimizer: https://arxiv.org/pdf/1412.6980v8.pdf
add support for other cpu type(aarch64)  for tensorRTadd support for other cpu for tensorRT
"Fix MKL on macFixes #10685
Build can be created with:"
Tensorrt improvementsThis PR improves the TF-TensorRT integration and provides
MKL: Removing unnecessary check for reorderFixes failure in //tensorflow/python/keras:pooling_test
Branch 187471483No description provided.
Fix nsync build issueNo description provided.
minor spelling tweaks for contrib/verbs docsNo description provided.
Enable CUDNN_TENSOR_OP_MATH for fp16 RNNsNotifying @zheng-xq @tfboyd.
Fix the error activation function link in custom_estimators.mdDescribed as PR title.
Fix some minor typos in get_started docs to keep consistentDescribed as the PR title.
minor grappler controller bugsNagging Assignee @benoitsteiner: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
"Add default whl file location and minor update commentsHi, after trying these dist_test scripts, open this PR for:"
"Fix error : ConvNDLSTMCell does not pass name parameterIf I create a ConvNDLSTMCell in tensorflow.contrib.rnn, name parameter cannot be passed through ND-ConvLSTMCell classes. So simply fix it."
Don't use NCHW or NHCW for conv1dFixes deprecation warning when using tf.layers.conv1d
"inception tutorial: added png to allowed extensions, made print statements clearersomething very minor. it'll probably save a couple people some headaches"
Fix markdown error in documentation.Newline in the middle of links was preventing their rendering.
"C++ gradients: Fractional*Pool, Soft{Plus,Sign}I also ran the newly added tests multiple times to check for flakes, seems ok."
fix a typoshould be tf.zeros_initializer()
"Fix batch input in TFLite multithreaded 1x1 convFix the issue that batch size is hard-coded as 1 in TFLite
multithreaded_ops::Conv() when filter size is 1x1 or filter and
input have the same size."
tensorflow lite build issueBuild fails because of LICENSE is not available inside lite dir. Need to remove a small line of code to keep it running. File location is tensorflow/tensorflow/contrib/lite/BUILD
Cross ent logitspractical description for using cross entropy logits loss
Pull request for fixing warm-starting device placement (#17312)Fix device allocation bug for warm-starting op
"Include cstring in logging.cc for use of strrchr()I'm working on Bazel's NDK support for r15 and r16. While building //tensorflow/examples/android:tensorflow_demo at v1.5.0 and v1.6.0rc1 with NDK r16, I ran into the following error:"
Pull request for fixing warm-starting device placementNo description provided.
Bump the version of CUB in cmake build.No description provided.
"Scaffolding for int8 calibration in TF-TRTThis PR prepares scaffolding for Int8 calibration pass for creating int8 TRTEngineOps.
It introduces"
"relaxed_onehot_categorical.py: keep_dims is depreciatedkeep_dims is deprecated, use keepdims instead"
"Bump the version of CUB in cmake build.We made the same upgrade for bazel build, but forgot about cmake."
"Update 1_notmnist.ipynb for clarityThis adds some comments to the command %matplotlib to prevent severe confusion for those of us who are familiar with python but not familiar with iron python, since this page makes absolutely no mention of the fact that is the only interpreter that will work with this code."
Branch 187165096No description provided.
[XLA] Allow the large R1 slice tests to be disabledThe unit tests for the R1 slice have some large values.  This change moves the large valued tests into a different test name in order to allow the blacklist manifest mechanism to disable them for any specific backend/device.
[XLA] Ensure that the backend_deps is a non-frozen objectNew code in the xla_test() generator writes to the backend_deps variable.  In the plugin backends this was referencing a piece of static data which was a frozen object.
Update tensor_shape.pyCorrect two typos where 'if' were written as 'iff'
Fix bug 17175Fix bug reported at #17175
Switch to v2 version of tf.unique to enable axis supportThis fix is a follow up to #15654 to switch to unique_v2 for tf.unique so that axis support could be enabled.
R1.6No description provided.
"Upgrade Jenkins/Docker build scripts to Bazel 0.11.0.The 0.10.0 bazel has problems with static-linking on linux:bazelbuild/bazel#4474. This PR bumps to the
latest bazel that produces proper binaries w/o the linking issue."
Branch 187038889No description provided.
Update word2vec_basic.pyCollections can't receive slice as indexes
Fix bad wrong jpeg/nasm mirrorNo description provided.
Supplement Linear Model Tutorial on how trained model to make predictionsThis is to fix #11440.
Fix some breakages in TensorFlow Windows buildWorking towards #17268
"Add index to plugin_name of Tags tableAdded index to plugin_name of Tags table in TensorBoard DB schema to potentially help query performance (e.g.,  SELECT 1 FROM Tags WHERE Tags.plugin_name = ?) in histograms_plugin."
"Add go_package to proto definition filesThis fix tries to address the issue raised in #16282 by add go_package to proto files, so that generated go files have correct path."
Fix typofix typo
Update version string to 1.6.0No description provided.
Update nn.pyadding missing quantized_relu which was missing before.
"Disambiguate documentation in `multi_class_labels` of `losses.sigmoid_cross_entropy`from continuous (0, 1) to categorical set {0, 1} according to @drpngx
in #17021"
Change repository command to valid valueWhen running the example command I got an error from docker saying: docker: invalid reference format: repository name must be lowercase.
Support GCS URL by tf.estimator.LatestExporterI have found that the parameter exports_to_keep of tf.estimator.LatestExporter() is ignored if export_path is GCS URL (like gs://bucket/object/). All exported SavedModel directories are never removed.
"Error in variable_scope initialization, via estimator api, due to a panda.DataFrame without column headersThe variable_scope initialization generates an error when a panda.DataFrame object without any column headers is passed via the estimator api."
"Clean up output formatting of saved_model_cli.pyThe output of saved_model_cli.py was a bit hard to read, so I added some indentation to make the variable/graph information easier to take in at a glance."
Add nasm mirrorFixes #6956.
Cherrypick: Don't assign device for the keras part of _saved_first_checkpoint. Fi…x #14504.
Ship TF Eager header with libtensorflow tarballs.The TF Eager headers are getting excluded from nightly tarballs because they both have the same filename and output destination. Looks like the core TF c header wins. This PR introduces shipping the eager header in the correct location.
r1.5 cherry-pick request: Fixes issue when linking of rule '//tensorflow/contrib/lite/toco:toco… (#16838)
r1.5 cherry-pick request: Fixes issue when linking of rule '//tensorflow/contrib/lite/toco:tocoFixes issue when linking of rule '//tensorflow/contrib/lite/toco:toco (#16838)
Branch 186777369push after pull
Change unicode() --> six.text_type() for Python 3unicode() was removed in Python 3 because all str are Unicode so this PR changes four calls to unicode() into calls to six.text_type().
TF Lite: from six.moves import xrange for Python 3Lines 1785 and 1818 contain calls to the Python 2-only builtin function xrange() which was removed in Python 3 in favor of range().  This PR adds the line from six.moves import xrange for compatibility with both Python 2 and Python 3.
"C++ gradients for MaxPool3D, AvgPool and AvgPool3DResolves #17195"
Update TrainingSpec and EvalSpec pydocBring TrainingSpec and EvalSpec pydoc in line with pydoc of estimator.train() and evaluate()
Branch 186662441No description provided.
"Extract kernel, bias values of a layerThis function will extract the kernel, and bias values of given tensor-flow model graph layer."
Merge pull request #1 from tensorflow/masterJan31_pull
Fix doc format for `Sequential`see: https://www.tensorflow.org/versions/master/api_docs/python/tf/keras/Sequential
Add dict(features) instead of features in beginners guideNo description provided.
"Fix typoIt should be ""host C compiler"", not ""hostC compiler"". Compare set_host_cxx_compiler."
Disabling kmeans tests for release testing.No description provided.
MKL: Update mkl docsNo description provided.
Merge test localNo description provided.
Fix table format in SECURITY.mdNo description provided.
"Make configure script runnable from external workspace.To run from external workspace, you should now be able to invoke
script like the following. This will generate some TensorFlow specfic
bazel options and import them into your project's .bazelrc."
"Fix compiler error with cuda-clangsegment_reduction_ops.h requires cuda_kernel_helper.h to be
included in clang because it uses some of the helpers directly in the
header (e.g. CudaAtomicMax). It works with nvcc, because the usage is
in a template context and nvcc checks that function is available only later
at template instantiation.
However, clang does more strict erorr-checking for functions found
during template instantiation and requires them to also be found either by
ADL or at the point of template declaration."
"Fix markdown nitWithout a leading blank line, it doesn't render properly in https://www.tensorflow.org/programmers_guide/variables#variable_collections."
"Fix build issues when having packed git refs.This is a workaround to fix build failure caused by packed git refs.
The tf.git_version string will be ""unknown"" in this case."
Do not add --host_copt=-march=native on Power PC.No description provided.
"[Intel MKL-DNN]: added MKLDNN dilated convolution supportThis PR contains the MKLDNN implementation of dilated convolution forward and backward.
we supported following operators:
forward dilated conv with and without bias
backward dilated conv grad input
backward dilated conv grad filter with and without bias"
"LoggingTensorHook to read from runconfig in EstimatorFixes #17115
Based on the suggestion made in this pull request: #17117"
"docker ci allows bad name userOur server maintainer creates user name like ""xxx.yyy"", which is invalid for adduser and so docker ci failed. I hope tensorflow could provide a way to loose the restriction:"
fix: Error on we feed float16 values into BeamSearchDecoderI tried to feed float16 values into BeamSearchDecoder. Then Type Error occurred.
"Update find_cuda_define to handle tabs.The 4.0.4 release of NvInfer.h  uses tabs between the version number and the comments, this causes find_cuda_define to fail."
fix typoNo description provided.
"Branch 186214551Manually merged, mostly formatting changes."
Update to mobile intro documentationI found a grammatical/spelling error while reading this documentation.
"Fix typos in Operation Semantics docsFix MathJax beta display.
Update '( assuming' to '(assuming'.
Update 'in a the first' to 'in the first'.
Change 'nop' to 'no-op' to match other occurrences.
Misc other minor updates (periods, hyphen, etc)."
TFTS: Enhancements to timeseries head@allenlavoie Thanks! I just fixed them as well as the BUILD file.
"Update TF Lite android demo to Android Studio 3Upgrade gradle settings to Android Studio 3.
Also fix githignore, otherwise included files from the build folder."
Cleaner documentation for tf.confusion_matrixAlso use tf.stack with axis=1 instead of a stack + transpose.
Remove extraneous check for Eager modeThe check is already made once at the start of the method
"Add broadcasting functionality for Div and Sub ops.Hi,
Added broadcasting functionality for Div and Sub ops following the examples of Add and Mul.
Regards,
Hovhannes"
Update convolutional.pyAdding tf_export decorators/calls to TensorFlow functions and constants.
Add missing `override'This fixes a warning produced by clang:
Added custom loss logging frequency to estimator trainFixes #17115
"Added a way to accept list as input to get_variable_value in Estimat…Hi there,"
"Fix a bug in tf.multiply documentationIn this commit, a bug that caused ""NOTE: tf.multiplytiply supports broadcasting."" to appear on tf.multiply documentation page was fixed.
See https://www.tensorflow.org/api_docs/python/tf/multiply"
"Add cast functions for complex64 and complex128Maybe the plan is to eventually remove the to_float, to_int32, etc. functions and promote calling tf.cast directly, but if not then it would be nice for API symmetry to have the corresponding cast functions for the complex dtypes as well."
"Add NumPy style warning when casting complex to floatThis is a real numeric gotcha, IMO."
Add NumPy style warning when casting complex to float#17110
Minor improvements to `estimator.predict()` docsJust some grammatical and syntactical improvements.
"Add ability to use default values via environment variablesExtend get_from_env_or_user_or_default() to look for an environment
variable named 'USE_DEFAULT_' + var_name, which if set to 1, causes the
default value to be used and not prompt the user for input."
Add missing `override'This fixes a warning produced by clang:
Updating layers.md (fixing typo)Fixing typo. Changing 'ans calling' to 'and calling'
"make the TfLiteCameraDemo.apk built with bazel work againCurrent bazel build rule needs ""labels.txt"". Build with current head, you get ""Uninitialized Classifier or invalid context"" as shown in the figure below."
tf.Dimension raises TypeError for tf.DTypefix #17079.
tf.tile gradient supports IndexedSliceFix #16930
MKL: Updating performance guide with MKL infoUpdating documentation wrt MKL
Use relative and correct path to find flatc and schema file.The path to schema file is wrong and path to flatc is only correct from the top directory.
"Add support for Maximum to TensorFlowLite.I don't have that many tests (e.g., not sure if broadcasting works), but running bazel test tensorflow/contrib/lite/kernels:maximum_test, bazel test tensorflow/contrib/lite/toco/tflite:operator_test, and bazel test //tensorflow/contrib/lite/testing:generated_examples_zip_test all passed."
Python API FixUse _ for system packages so sealing doesn't break the API.
Branch 186010810No description provided.
add model restore support for tree and forest variablesRight now both tree variables and forest variables only support training.
Update guide.mdFixing grammatical errors in the Installation instructions
"Add wheel dependency to cmake READMEIn order to run to create the pip package after compilation, wheel needs to be installed. This explicitly lists wheel as a prereq in the README. Otherwise the user will hit a ""invalid command 'bdist_wheel'"" error."
Added Deep Speech useNo description provided.
"Documentation api reference badge added in Readme.md and added new header for contribution guidelinesTo see how it looks, please see here:https://github.com/rajendraarora16/tensorflow"
"Fix typos in low-level introduction documentationRemove extraneous comma.
Capitalize 'Loss' title.
Add missing space to 'minimize the'."
Merge branch 1.6 back to masterNo description provided.
Branch 185878562No description provided.
Updated roadmapNo description provided.
Indentation fixNo description provided.
"Fix MKL build break on WindowsEigen with MKL and MKL-ML only, no MKL-DNN."
fixed typo in docstring for unchanged shape methodNo description provided.
conv1d doc string misnames first argumentThe docs say conv2d()'s first argument is input which is maybe how the docstring for conv1d() ended up saying input instead of value when describing the filters argument.
Docs fix r1.5Docs Cherry-pick
Docs fix r1.6Docs Cherry-pick
Add clean_dep to tf_cc_test.No description provided.
Add clean_dep to tf_cc_test.No description provided.
"Fix warnings in tf.contrib.bayesflow.monte_carlo.expectationThis fix fixes several warnings in tf.contrib.bayesflow.monte_carlo.expectation
by switching to keepdims for tf.reduce_mean."
"fix SRU call return typeBecause many other cells , such as BasicLSTMCell 縲 LSTMCell 縲¨ASCell 縲 LayerNormBasicLSTMCell , return h and stateTuple with c and h when call . I think sru should return the same type as lstm ."
Fixes #16152Fixes #16152. Please note that I have tested this fix only on Ubuntu 16.04 with python 3.5. It should in theory work for both python 2+ and python 3+ but I have not tested it on all major versions of python.
"Fix __shared__ complex<T> undefined behaviorstd::complex has a non-empty constructor (zero assignment) that is not
compatible with CUDA shared memory. This fixes current reliance on
undefined behavior (and removes an unnecessary run-time initialization)."
Fix #16152Please note that I have tested this fix only on Ubuntu 16.04 with python 3.5. It should in theory work for both python 2+ and python 3+ but I have not tested it on all major versions of python.
"Adds a check for shuffle=None in numpy_input_fnnumpy_input_fn's shuffle argument is set to None by default. If the argument is not provided, the function raises a TypeError since shuffle is of type NoneType and not bool."
"Adds a check for shuffle=None in numpy_input_fnnumpy_input_fn's shuffle argument is set to None by default. If the argument is not provided, the function raises a TypeError since shuffle is of type NoneType and not bool."
Branch 185747281No description provided.
Fixes #16976No description provided.
Fix typoNo description provided.
Fix cmake for MacOSThis change address cmake build issues for MacOS.
"MKL: cifar 10 divergance fix and batchnorm unit test fixBased on suggestion from Tatiana (tatianashp), changes have been made to fix improper comments such as replacing ""tf"" with ""TensorFlow"".  The fix touches  statements only - so no extra test is needed."
MKL: Fixing MklCPUAllocator error introduced by commit #1baac78PR #16987 also fixes this problem. Commit 1baac78 also broke http://ci.tensorflow.org/view/Nightly/job/nightly-mkl/127
"fix a crash on Android Lollipop and lower versionsThe allocated memory address is not aligned by 16, which causes
BUS_ADRALN crash on Android platform of low versions."
"Relu bn fixWe found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.
In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed."
Cherrypicks for Android CUDA support in 1.6No description provided.
Fix broken link in tfmobile documentationThis fix fixes the broken link in tfmobile documentation asandroid/ had been moved to android/tfmobile/ in the repogooglecodelabs/tensorflow-for-poets-2
Android CUDA cherrypicks for 1.6No description provided.
Branch 185565363No description provided.
"Fix a bug in tf.strided_slice()Current implementation modifies TfLiteNode::builtin_data every time when a loaded graph is executed. The three masks in params (please see the patch) will continually flipping, and causing the op produce incorrect result every two executions."
fixup 1baac78627: Underlying allocator must be a VisitableAllocator tooSigned-off-by: Sylvain Gault sylvain.gault@road-b-score.com
New roadmapRevised Roadmap document with draft changes from Feb 2018.
"[XLA] Allow 3rd party backends to subclass the generic transfer managerI would like to subclass the generic transfer manager, but it does not allow itself to be subclassed by anything but the 3 whitelisted backends."
[XLA] Add header and macros to allow these tests to be disabled in a manifestChange to the XLA specific macro which allows tests to be disabled in a manifest file.
Fix typo in datasets/imdb.pyNo description provided.
Added controlled logging to estimator.pyAdded logging_every_n_iter argument to Estimator.fit and _train_model to control the display of metrics (e.g. loss and accuracy) during training.
Add release note: sparse tensor support in `tf.data`No description provided.
Fix typo in build_and_run_inception_hexagon.shSigned-off-by: MyungSung Kwak yesmung@gmail.com
"Fix compiler error mentioned in #16960 introduced by commit 1baac78627Addressing #16960.
The commit 1baac78 introduced member functions MklSubAllocator::AddAllocVisitor and MklSubAllocator::AddFreeVisitor which respectively use allocator_->AddAllocVisitor and allocator_->AddFreeVisitor but allocator_ is of type Allocator * which doesn't have these member functions."
Added controlled logging for estimator.pyAdded extra argument logging_every_n_iter to the fit function of Estimator in estimator.py to control logging display.
Add instructions for building CUDA-enabled Android TensorFlowNo description provided.
Remove header dependence on cuda_config.h to fix opensource custom op… support.
"Update tb-nightly dep to >= 1.7.0a0, < 1.8.0a0Now that tf-nightly is at 1.7.0+ on PyPI and tb-nightly has been updated to publish at 1.7.0+ as well, synchronize the deps so that current tf-nightly depends on current tb-nightly."
Update data_flow_ops.pyFixes #16948
[1.6] Cherrypicks for RC1No description provided.
TESTING DO NOT MERGENo description provided.
Branch 185398372No description provided.
Controlled logging for EstimatorAdded logging_every_n_iter argument for Estimator.fit. This controls the frequency of the display of metrics.
Fix some warnings with keep_dims in `tf.contrib.distributions`This fix fixes some warnings with keep_dims in tf.contrib.distributions and math_ops_tests.
Fix typos in profiler.hFixed 3 typos in profiler.h
"Complement cmake script to compile tensorflow with mkl and mkldnn on WindowsNote
One has to manually copy mkl_rt.dll, mkl_core.dll, mkl_avx2.dll, mkl_sequential.dll and mkldnn.dll (if compiled with mkldnn) to the executable directory"
[MSVC] Use explicit func pointer to static method instead of lambda funcMSVC cannot decide the common type to accept two lambda functions even though they are non-capturing and have the same function signatures.
"Add documentation for s3 usage with TensorFlowThis fix adds a very preliminary documentation for s3 usage with TensorFlow, as an attempt to address the comment #11089 (comment)."
Add reduction parameter to mean_pairwise_squared_error lossAlso increased clarify of the documentation for the function
Improve formatting of shapes in tf.losses documentationNo description provided.
Add S3 plugin to the list of file system plugin in doc (add_filesys.md)This fix adds S3 plugin to the list of file system plugin in doc (add_filesys.md).
Fix the profiler python docstring linkThis fix fixes the python docstring link of the profiler:profilerg3doc -> profiler/g3doc
Update version string to 1.6.0-rc1No description provided.
Fix Intel compiler build breakFix Intel compiler build break
"Add doc on the order of eigenvalues returned by tf.self_adjoint_eigResolves #16747
As discussed in #16747, I think we can add doc on the order of eigenvalues returned by tf.self_adjoint_eig. But further discussion may be required. Any opinions will be appreciated."
Fix typoNo description provided.
[Windows] Copy NominalCPUFrequency from AbseilAttempt to fix Bazel build on Windows. https://ci.tensorflow.org/job/tf-master-win-bzl/ is all red since 0913833
[MSVC] Workaround MSVC template/lambda parsing bug#16882 #15213
"typo fixCopied the new description from docstring on line 37. Used the phrase ""spectogram timeslice"" rather than ""frequency window"" for consistency with the tooltip on --window_size_ms."
"Add reduction parameter to mean_pairwise_squared_error lossActually, would you mind redoing this on top of master? We're not taking changes to the 1.6 branch. Closing this out, but please send another PR."
Fix the missing Windows cuDNN reference.No description provided.
Improve formatting of Tensor shapes in tf.lossesUpdating the documentation of Tensor shapes in tf.losses to match the documentation guide athttps://www.tensorflow.org/community/documentation
dataset_ops.py batch() checks type immediatelyCurrently if you inadvertently pass a non integer value for batch_size you get a strangely cryptic error with a long trace:
Added detailed discussion of non-strict semanticsNo description provided.
"Improve shape function of NonMaxSuppressionIn the docs for tf.image.non_max_suppression, the shapes of the args boxes and scores are [num_boxes, 4] and [num_boxes] respectively."
"Implementation of the unpooling layer in tf.contrib.layersThis pull request follow the propositions from #2169
And try to reproduce the layer implemented in https://arxiv.org/abs/1505.04366"
"Enable validate_args for all distributions based on a global parameterThe probability distributions in Tensorflow have a validate_args argument that is initially set to False. This PR adds a feature that initializes the value of validate_args to the value of a global flag validate_args_default, which can be set from the user program"
Update bazel version in dockerNo description provided.
[DO NOT MERGE] Testing: Revert \Dropping the Microsoft from the Visual Studio\Reverts #16848
Adding the CMAKE_GENERATOR  line to all external cmake files.No description provided.
Fix warning about keep_dims. keep_dims -> keepdims for tf.reduce_sum().Fix warning about keep_dims. keep_dims -> keepdims for tf.reduce_sum().
Revert \Fix missing . (#16460)\This reverts commit 5e23338.
Improve shape function of SampleDistortedBoundingBox and fix some test casesThis fix tries to improve the shape function of SampleDistortedBoundingBox and fix several test case errors.
Fix broken link in CONTRIBUTING.mdThis fix fixes the broken link in CONTRIBUTING.md.
R1.5No description provided.
Branch 184929151Had probably 50-100 files with merge conflicts due to some files being formatted by internal tools during a recent GitHub pull. Pretty sure I fixed all of them correctly though.
Fixes two wrong links in install documentThere are two wrong links in install document. This fixes them.
Make configure script more lenient to the length of CUDA and cuDNN ve…rsions entered.
cmake flag for Visual StudioAdd the cmake flag for specifying VS version to r1.6 as well.
GLSTMCell fix@case540 could you please have a look
Dropping the Microsoft from the Visual Studiocmake invocation.
"Remove obsolete BernoulliWithSigmoidProbsAs was pointed out by #9485, BernoulliWithSigmoidProbs is covered
by Bernoulli and is obsolete. This fix removes BernoulliWithSigmoidProbs."
Fix comparison in neon_depthwise_conv_op test.This is in preparation for enabling Grappler for all TensorFlow Python tests.
"Have _check_bazel_version_at_least compare versions as ints, not stri…Fix bazel version check issue on r1.5 branch. Example breakage https://source.cloud.google.com/results/invocations/9388d7a7-a2ed-45ce-9fcd-cf69fbdebcf5/log"
Bump JetPack default to 3.2 in Android build scriptNo description provided.
Testing this on the 1.5 release branch.No description provided.
"Fixes issue when linking of rule '//tensorflow/contrib/lite/toco:toco…Fixes issue when linking of rule '//tensorflow/contrib/lite/toco:toco' fails because LD_LIBRARY_PATH is not configured. The workaround is to add --action_env=""LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"" to bazel build as described here https://stackoverflow.com/questions/47080760/tensorflow-fails-to-compile/47295278#47295278."
Remove warnings in tf.losses.softmax_cross_entropyThis fix tries to address the issue raised in #16534 where tf.losses.softmax_cross_entropy causes warnings due to the calling of tf.nn.softmax_cross_entropy_with_logits.
"Tensorflow Lite demo app for Android: add support for floating point models as Inception-v3Although the new Lite interface does support float models as well, the current Android demo app does only support quantized models. Furthermore, it isn't obvious to transfer the code from the quantized version to the floating point model. Based on this discussion I integrated the Inception-v3 slim model as an alternative to the existing MobileNet."
"[tflite] fixed label_image resize bilinear problemsClose this, since it's solved by google's internal patch 8b00f98"
Fix typoNo description provided.
Branch 184768730Pushing from Google Internal to Public
"Fix the tfcompile_testsWe can remove the mock import as its not being used. Also some of the
checkpoints are V1 and V2 versions and we need to handle both the scenarios"
Python3 support of docs generationFix #9437
Move some ndlstm functions to contribMoved images_to_sequence and sequence_to_images to contrib.layers since the ndlstm module might be removed in the future tensorflow versions. Addresses this issue: #16794
"Update tensorboard dependency to 1.6.0+ and new nameTensorBoard for versions 1.6.0+ will use the tensorboard name on PyPI rather than the previous tensorflow-tensorboard name.  Unfortunately PyPI/pip have no notion of package ""renames"" so it will look like an unrelated dependency, i.e. users doing an upgrade will wind up with both names installed, although the new tensorboard package will overwrite the old one functionally speaking."
Fix incorrect links in CONTRIBUTING.mdThis fix fixes two incorrect links in CONTRIBUTING.md about license examples. The reason for broken links is because tensorboard is in another repo.
Improve TensorFlow Lite descriptionI just started working with the new TensorFlow Lite interface and noticed a few errors in the description.
spelling fixes for contrib docsNo description provided.
reshuffle_each_iteration args now default to TrueThe documentation for the tf.Dataset.data.shuffle function states the following:
Fix error message in record_readerCorrected error message logged if unsupported compression type.
Update CONTRIBUTING.mdEdited a few grammar issues.
"Add optimized gif support for decode_gifWhile revisiting the issue of #15838, I noticed that currently optimized gif is not supported. However,
optimized gif is actually possible to be processed as essentially the subsequent frame just adds the content on top of the previous frame on canvas."
[tflite] make calling NNAPI work again (resend)for the previous one (#16256) somehow reverted/overwritten
Fixes variable nameNo description provided.
Branch 184622482No description provided.
Fix typoNo description provided.
Fix for GLSTMCell implementationcase540 partially fixed it. I'll submit another PR for a smaller fix
Bump the rtol in hmc_testThis test is flaky due to the rtol:https://source.cloud.google.com/results/invocations/e381cb7e-272e-41ac-b0da-931f6cf293bb/log
"Fix wrong error message for beta distributionThis PR fixes the assertion failure message for Beta distribution's valid sample check, which is currently incorrect. For a sample with value 1.0, the current error message is: sample must be no larger than '1', wrongly suggesting that sample can be 1.0. After this PR, the will say, sample must be less than '1'."
Merging the 1.6 branch back into master.No description provided.
"Add broadcast support for softmax_cross_entropy_with_logitsThis fix tries to address the issue raised in #11534 where there was no broadcast support for SoftmaxCrossEntropyWithLogits. This fix adds the broadcast support for SoftmaxCrossEntropyWithLogits, and adds test cases for it."
Bump the required numpy version to 1.13.3 in r1.6No description provided.
Fix the incorrect link to vulnerability reportingThis fix fixes the incorrect link to vulnerability reporting.
remove keep_dims warning in maxout layerTrivially replaced keep_dims with keepdims
Resolve Programmatic mistake.SPECIES should have been either imported here or it should have referenced from iris_data. The corresponding code is correct but the conflict in the documentation.
"CMake (Windows): Added support for ninja build and some fixes/changesMost changes have comments stuck with them, but here's the summary of it."
Fix typoNo description provided.
"Fix the mac builds on r1.6Without this setting, it runs 2to3 on the python files. In master, it's set to PY2 which is also wrong."
"Fix issue for JNI library loadingThis issue is founded when running a Java web app from docker. Current NativeLibrary load JNI from a relative path, the program is expecting to load the library from an absolute path."
Fix the Windows GPU build #2No description provided.
Grammatical error fixedNo description provided.
Fix the Windows GPU build #2Tested that this fixes the build:https://ci.tensorflow.org/view/Experimental/job/exp-win-gpu/5/
Allow passing Saver write_version to 'evaluation_once' and 'evaluatio…n_loop'
"Making the for_canonicalization_test only for py2 and 3http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=mac-slave/239/consoleFull"
Fixing the cuda and cudnn versions in 1.5 docs. (#16702)No description provided.
Fix logging format error in retrain.pyThis fix fixes the logging format error in tensorflow/examples/image_retraining/retrain.py.
Add NLSTM RNN cell and the unit testsThe PR implement the RNN cell in the following paper. https://arxiv.org/abs/1801.10308
Fix incorrect reference DOI number/link for GDRThis fix fixes the incorrect reference DOI number/link for GDR:https://doi.org/10.1145/3123878.3123907 -> https://doi.org/10.1145/3123878.3131975.
dupe (#14385)No description provided.
Delete device_functions.h include.No description provided.
Fixed a couple of typosFixed a couple of typos
fix tf.GIT_VERSION always 'unknown' on windows cmake buildfix tf.GIT_VERSION always 'unknown' on windows cmake build
"Fix the Windows GPU builddevice_functions.h moved in CUDA 9.1, which breaks the Windows GPU build. It's not needed here."
Disable win io utils test for windowsNo description provided.
Fix Python3 crazy SessionTest.testReentryWithCApi failure.credit: skyewm
Branch 184376425No description provided.
python 2.7 unit test error repair on windowspython 2.7 unit test error repair on windows
R1.6No description provided.
fix typofix typo
CherrypicksNo description provided.
Branch 184352399No description provided.
Propagate the name on resource variable assignNo description provided.
Add k8 to detection for when to use neon_tensor_utils.No description provided.
Fix spelling: change \invaild\ to \invalid\No description provided.
Fixed a typo in `group_by_window` documentationNothing else to add :)
Removing the typo line.No description provided.
"Revert \Update external protobuf codebase version for Windows cmake b…uild"""
Fix sanityNo description provided.
Absl fixNo description provided.
"Update Eigen library to 2355b229ea4c and fixes conv2d padding issueThis fix updates Eigen to 2355b229ea4c, so that the issue raised in #14601 could be fixed."
Remove all_files rule from com_google_absl.BUILDNo description provided.
Fixing the cuda and cudnn versions in 1.5 docs.No description provided.
Update version to 1.6.0-rc0.No description provided.
Revert \Updating the version to 1.6.0-rc0.\Accidentally pushed this to master.
Branch 184236409No description provided.
"We must also trim everything after TAB, in order to correctly parse version from TensorRT-3.0.2Note TABS after version numbers:"
"Separate constant file for tpu to make reusableUsing constants is more a way of defensive programming, also it improves performance optimization. Most importantly, it is for human reader."
change to anchor linkFixing markdown typo
[DO NOT MERGE] TestingNo description provided.
Fix a broken link in regression_examples.mdThis fix fixes a broken link in regression_examples.md
Sync r1.6 to master HEADNo description provided.
Branch 184220615No description provided.
fix typofix typo
Remove invalid exception in linear operatorRemove unreachable NotImplementedError exception from _assert_non_singular() in LinearOperator.
"Convert unicode to six.string_types for python 3In Python 3, there is no unicode type. This fix converts
unicode to use six.string_types instead, while maintaining
python 2/3 compatibility."
Fix linter error in losses_impl.pyNo description provided.
Fix sanity buildbazel nobuild issue looks new?
Compile libtensorflow on windows with AVX.No description provided.
Updating the version to 1.6.0-rc0.No description provided.
Release Notes for r1.6No description provided.
Fix undefined name: import as_str_any for line 35flake8 testing of https://github.com/tensorflow/tensorflow on Python 2.7.14
"Adds parameter 'msg' to tf.TensorFlowTestCase.This commit adds a msg parameter that defaults to None to the following
functions:"
"Typo in variable name: BETA --> self.BETABETA is defined on line 118 as a class member so it can only be accessed via self or via the class name, ElasticAverageOptimizer."
Improve shape function of NonMaxSuppressionThis fix tries to improve shape function of NonMaxSuppression.
"Fix \Define the model\ link.The link syntax was inverted, that is, round brackets were coming before square brackets, but Markdown doesn't like it."
Windows: Enable tensorflow/contrib in Bazel buildThis change requires upgrading Bazel to 0.10.0 because we need cc_import rule.
"[XLA] Fix subcomputation unification not adjusting conditionalsWhen the subcomputation unification finishes, it calls into the module to adjust any instructions which have had their computation parameters invalidated."
"Fix docsThanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
"Temporarily remove three linter checks for now.Will fix the following 25 error and add them back:
tensorflow/contrib/session_bundle/bundle_shim.py:85: [C0301(line-too-long), ] Line too long (83/80)"
Fix do_cmake_python_sanity error.Add missing dir to tensorflow/contrib/cmake/python_modules.txt
fix python 2.7 build break & import error on windowsfix python 2.7 build break & import error on windows
Address sanity build issues.No description provided.
Resolve pylint issues in image opsThere were 4 line too long errors reported in pylint check of image_ops_impl.py.  Changed the format to not exceed 80 characters based on indentation examples in style guide.  Reran pylint against the file and verified errors no longer listed for image_ops_impl.py.
Fix typo in attention_wrapper.pyThis is to fix #14629.
Support multiple build types in Android build.gradle with the makefile buildNo description provided.
Updated adding_an_op.md to reflect newer API and to fix typosChanges made to adding_an_op.md:
Branch 184052073No description provided.
Add relnote about bug in ptxas in CUDA 9 and 9.1.No description provided.
Update ISSUE_TEMPLATE.mdFixes 16350
"Fixes issues in tf.contrib.keras.utils.ProgbarIn version 1.5 of Tensorflow, if Progbar's target is set to None, internally it gets set to -1.
Changed code that referenced self.target is not None to self.target != -1, self.target is None to self.target == -1.
Also, ProgBar is printing twice as reported here #16538. Fixed duplicate text"
"Update docs for tf.matching_files to mention non-deterministicThis fix tries to close the issue of #15374 by updating the
docs of tf.matching_files (as well as Dataset.list_files
and train.match_filenames_once), to mention that the file names
returned could be non-deterministic."
"Re-add missing argument specifier in build_all_android.shThe "":"" was erroneously removed in 76f70f5"
Replace 'Dan' with 'Dandelion' in the citationsNo description provided.
[For Test; DO NOT MERGE] Add grpcio as a pip dependency of tensorflowNo description provided.
Fixed typoFixed some typos
[WIP] More generic configuration#13851@drpngx
Refactoring by extracting duplicate code into methodsI extracted duplicate code into methods to improve maintainability.
Simplify loader_impl.py logic around main Op Tensor.No description provided.
"Fixed typochanged variable ""sensorOrienation"" to ""sensorOrientation"". This was annoying me"
MKL: Pooling and AddN bug fixesNo description provided.
Branch 183881907No description provided.
"Remove query_layer in LuongMonotonicAttentionIn the constructor for LuongMonotonicAttention, a query layer was being created but it was ultimately never used."
"Moving code using new to absl::make_unique. This should make cleaning… this up when std::make_unique is available easier with automatic tooling easier, and remove references to new."
"Moving code using new in the linear algebra kernels to absl::make_unique. This should make cleaning…Moving code using new in the linear algebra kernels to absl::make_unique. This should make cleaning this up when std::make_unique is available with automatic tooling easier, and remove references to new."
Branch 183846994No description provided.
Merge in final changes from the r1.5 branchNo description provided.
Branch 183846994No description provided.
Merge pull request #1 from tensorflow/mastermerge upstream changes
Branch 183846994No description provided.
Fix FutureWarning on issubdtype from float to np.floatingThis is try to fix #16587.
"Force sorting of CUDA/Python headers to avoid spurious rebuildsIf one does try to re-use Bazel cache of a TensorFlow CUDA-enabled
build, then it might happen that readdir() syscall behind the use of
find in _read_dir() will generate a different ordering of the very same
list of headers. This will make new genrules for symlinking the CUDA
headers and in the end it will result in different actionKey computed by
Bazel, hence invalidating the action cache."
Fix typofix typos
"Fix tfcompile module label.Hi,"
"Ensure bash is invoked as a login shell on windows otherwise fixups fail.Hi,"
"Add option to not include histogramsadd_gan_model_image_summaries does the work of adding images to summaries, but then it also calls add_gan_model_summaries which dumps every trainable variable to histograms. It would be nice to be able to get the image summaries without the histograms."
"By default, only download inception if it doesn't exist alreadyHope this saves some bandwidth:"
Remove duplicated identical linesI believe this commit 32db18b introduced the duplicated lines to the file.
"Support ./configure [--help|-h] to show possible config optionsThis is to fix 16518, which would start the interactive prompt immediately even when issue ""./configure [--help|-h]""."
Fix typos.No description provided.
Support optionally passing mode to GANEstimator `discriminator_fn`.This fulfills a feature request.
"Removing duplicate code block that raises exceptionFor TensorFlow version 1.5.0-rc1, the code block below raises a ValueError. Simply remove the duplication (lines 274 - 277 are exactly the same) and the issue is resolved."
add visibility to  //tensorflow/contrib/tensor_forest/proto:fertile_stats_protoSince the proto is a public-visible and TreePath depending on the proto
"Ndlstm dynamic batch sizeApparently, lstm2d.separable_lstm doesn't accept dynamic batch sizes (number of images). This pull request addresses issue #16510"
"Minor refactor to remove redundant test classThere were two WeightNormLSTMCellTest classes that differed in formatting only.  Removed the (original) one at end of file since based on history, the version above it contained latest formatting updates."
Fix typofix typo
Add remove_control_dependencies() graph_transform.Add a graph_transform that can be used to remove control dependencies from the tensorflow graph. This can allow later passes such as strip_unused_nodes to do a better job.
"Fixed iOS build script for all architectures, fixes #12904Fixes the nightly iOS build, which has been suffering failures."
Update README.mdadded a friendly badge to get the latest android tensorflow version
MKL: Fix for mkl_input conversion for MKL DNN.Fix also enables elementwise operations in MKL
Correct argument doc for BasicLSTMCell.callNo description provided.
Branch 183683856No description provided.
"Add options to enable new features for cloud-tpu-profiler.Add options for the user to manually include dataset ops in trace collection, and to automatically recapture the traces when no trace event is collected.
Also change tf.flags to absl.flags since the former is going to be deprecated."
Fix typos 'followings' 'optionanl'No description provided.
SpellingNo description provided.
"Fix raw summary metrics for Estimators in python 3It looked for six.string_types in the metrics, but should be six.binary_type since tf.string returns a bytes() object."
"Adding tf.image.non_max_suppression_with_overlapsThis commit introduces the op tf.image.non_max_suppression_overlaps.
It allows to perform non-max-suppression with an overlap criterion different to IOU by providing an n-by-n matrix with precomputed overlap values for each box pair."
added audio_ops.cc to tf_op_files.txt to fix the Op type not registered DecodeWav error …- #15921
Make Lstm1d.ndlstm_base_unrolled use lstm_cell with state_is_tuple = TrueThis is to address the deprecation warning thrown by using state_is_tuple = False.
Merge pull request #1 from tensorflow/masterUpdate from tensorflow origin
Merge pull request #1 from tensorflow/masterUpdate from tensorflow origin
Merge pull request #2 from tensorflow/masterUpdate from tensorflow origin
Only trying to load nnapi when we want to.Only call NNAPIExists() when we want to use nnapi to get ride of the unnecessary unable to open library libneuralnetwork.so error.
Fix incorrect docs for DecodeVideoOpThis fix fixes incorrect docs for DecodeVideoOp
"MKL: Reverting the switch to max_pool_v2 in pythonA prior commit #14983 changed python interface to call max_pool_v2 causing failure in MKL build. Currently MKL doesn't support max_pool_v2. Reverting  the commit  for now, will change it back when MKL implementation is complete."
"Periodic resample operation gradients and optimization@vchigrin: I've taken a look at the changes and they seem quite reasonable and beneficial. Thanks a lot for making the PR. If they pass the python tests (as you mentioned in the previous thread), then I think this is good to go."
Fix some typos in the documation (tensorflow/docs_src)This fix fixes some typos in the documentation (tensorflow/docs_src/**.md)
0.6.0No description provided.
Update LICENSE2017 => 2018
Fix typoNo description provided.
"Check more cpu features for Clang on WindowsClang on Windows will define __SSE__, __SSE2__ and other macros."
"Remove BOMThese two files started with ""Byte Order Mark"" <U+FEFF> which we don't want."
Enable multi-dimensional and axis support for tf.unique_with_countsThis fix tries to address the issue raised in #16499 to bring multi-dimensional and axis support for unique_with_counts.
"Define Cr, Fr, Shared, Var to resolved undefined namesflake8 testing of https://github.com/tensorflow/tensorflow"
contrib/learn: Typo in variable name x_exrta --> x_extraflake8 testing of https://github.com/tensorflow/tensorflow
Update docs for installing CUDA/CUDNNThis fix addresses the issue raised in #16479 where CUDA/CUDNN versions from the docs do not match TensorFlow v1.5.0.
Enable [no]unroll for Clang on Windows#15990
Clang on Windows will define __BYTE_ORDER__ etc. for us#15990
Remove all_opensource_filesFixes #15758@gunan /cc@yifeif /cc
"Tflite windowsHi,"
Fix document typoFix TFLite custom op typo
"Tflite windowsHi,"
Change RELEASE.md to specify CUDA 9.0PR for #16348 (tinyest PR ever?)
resolve undefined name array_opsflake8 testing of https://github.com/tensorflow/tensorflow on Python 2.7.14
use gather_nd to _gather_states in LSTMBlockWapperno need for calculate mod_indices and reshape data .
Specify CUDA 9.0 versionThe newest CUDA 9.1 is not supported by TF1.5. Sepecify CUDA 9.0 in order to prevent confusion
Tflite SSD PostprocessingAdding custom operators to implement SSD postprocessing in mobilenet-ssd.
Branch 183446593No description provided.
MKL: Making MKL-DNN defaultMake Tensroflow use MKL DNN by default if --config=mkl is used when building
Fixing hard_sigmoid's documentation to match implNo description provided.
Merge pull request #1 from tensorflow/mastermerge upstream changes
Simplify Android/Tegra GPU makefile file listsNo description provided.
Fix build error with GCC 7.2.1 on AWS Linux 2This fix fixes a build failure when compiling with GCC 7.2.1 on AWS Linux 2:
Branch 183429339No description provided.
Fix a bug in PR #15906@drpngx @rmlarsen @elgehelge
Improve profiler error message when graph_path is not available.This fix tries to address the issue raised in #16451 to provide a better error message when graph_path is not available for profiler.
Fix missing .No description provided.
Fix a couple minor typos for DataSet APIFix a couple minor typos in docs of DataSet API
Branch 183374082No description provided.
Placate pylint on jupyter_notebook_config.pyEliminate the following pylint issues:
Fixing the url for the pip3.No description provided.
use tflite bilinear op to resize input of label_imagereplace previous naive downsize() function with a resize() using TF Lite RESIZE_BILINEAR operator
"Disable AWS S3 virtual addressingThe fix disables the virtual addressing of AWS S3, as was suggested in the comment #16397 (comment)"
"Make raw_rnn accept scalar or TensorArray values for state.tf.contrib.seq2seq.AttentionWrapper rnn cell cannot be passed to raw_rnn, the problem is related#11988, and the same problem in dynamic_rnn  been solved. However, in raw_rnn, it still exists as#11988 (comment) pointed."
raw_input() was removed in Python 3raw_input() was removed in Python 3 in favor of input().  We import six so that six.moves.input() works identically in both Python 2 and Python 3.  We also add .strip() to gracefully deal with leading or trailing whitespace in the user input as well as lower() to gracefully deal with capital as well as lowercase letters.
"long was removed in Python 3long was removed from Python 3 in favor of int.  Here we have replaced the tuple (int, long) with six.integer_types which does the right thing in both Python 2 and Python 3."
xrange() was removed in Python 3Each of these files contains at least one call to the Python 2-only builtin function xrange() which was removed in Python 3 in favor of range().  To each of these files we add the line from six.moves import xrange for compatibility with both Python 2 and Python 3.
"Update README.md-png, --sample_index options are not available in google-perftools (2.4-0ubuntu5.16.04.1).
Also, since Ubuntu 16.04 wrongly recommends to install pprof from 'tau' package"
replace deprecated keep_dims with keepdims in keras.backendThis may not be important but it sometimes triggers warnings with conv nets built with keras.
Increase tolerance on TFGAN losses test. fixes #16238No description provided.
Imported lstm1d and lstm2d in ndlstm __init__.py.Makes importing ndlstm modules easier.
Fix an imperfect implementation of tf.losses.mean_pairwise_squared_errorHere is a fix for the issue Imperfect implementation of tf.losses.mean_pairwise_squared_error (#15968)
Fix docstrings in `scan`No description provided.
Lite: Supporting Raspberry Pi.Now we can cross compiling or native compiling libtensorflow-lite.a for rpi.
Lite: Supporting Raspberry Pi.Now we can cross compiling or native compiling libtensorflow-lite.a for rpi.
Fix an imperfect implementation of tf.losses.mean_pairwise_squared_errorSuggest a fix for an imperfect implementation of tf.losses.mean_pairwise_squared_error (#15968)
Fix build errors in contrib/mpi introduced by commit 6042b5d267fThe commit 6042b5d#diff-7c00d4a3caee74eedf5bb638bce23e5a
import contextmanager in side_effect_guards.pyResolve the undefined name 'contextmanager' in side_effect_guards.py via from contextlib import contextmanager and remove the associated pylint directive.
Fix typofix typos
Windows: Add missing dependencies in lib_proto_parsingNo description provided.
"Update tensorboard dep to >= 1.5.0, < 1.6.0This change fixes the tensorflow-tensorboard dep now that TensorBoard 1.5.0 has been pushed to PyPI, and ensures that TensorBoard releases installed as dependencies of TF stay in sync with their corresponding TF releases even once newer (potentially backwards-incompatible) versions of TensorBoard are released by adding < 1.6.0 as an upper bound."
Windows: Add missing dependencies in lib_proto_parsingNo description provided.
R1.4want to test
common global variable with constant.pyMade a common constant.py for global commonly used variables.
Add missing library in DockerfileThe local Dockerfile does not have all the dependencies for running the exercise notebooks in udacity assignments.
Making global constant.py file for opsCreated a separate common constants.py which can be used globally.
"add URLEncode for the CopyObjectRequest of S3 Rename functionI found that tf.gfile.Rename did not work for S3 objects with UTF-8 names. A ""NoSuchKey"" error will be reported in this case:"
Separate constant file for common variableCreated a separate common constants.py which can be used globally.
Separate constant file for global variablesCreated a separate common constants.py which can be used globally under ops.
"Build libjpeg-turbo ALTIVEC SIMDThe libjpeg-turbo package has ALTIVEC SIMD and this updates the
third_party build to build the ALTIVEC SIMD on the appropriate
platform."
Branch 183220585No description provided.
Correct a small typoSmall typo leaved in the retrain example.
"remove SRU num_units == x.shape[-1] restrictionBased on the author's response, the restriction is unnecessary. Simply add a linear transform to the input will solve the issue"
Modified Implementation of ndlstm_base_dynamic.It now uses a BasicLSTMCell that has state_is_tuple=True to address the deprecation thrown by having state_is_tuple=False.
Separate constant file for global variablesCreated a separate common constants.py which can be used globally under ops.
"Compare_and_bitpack function for bool for big endianAdded condition for endianness check and related conversion for Big Endian.
Removed the note from file:// NOTE(ebrevdo): This assumes memory is little-endian.
Please let me know your feedback."
change from deprecated version to a new versionNo description provided.
cmake gpu build improvementcmake build pass with gpu enabled
Added early stopping and CheckpointSaverListeners to train and evaluateAddresses the issue at #16203
cherrypick bfloat16 changesNo description provided.
fix typosfix typos
Parameterized docker build now supports a local pip whl file path.PiperOrigin-RevId: 183148798
"Disable bfloat16 for sparse_matmul for 1.5.0I'm using this PR to test out simple workarounds for the sparse_matmul problem.
It doesn't need a reviewer yet."
Branch 183148922No description provided.
Update version names to 1.5.0 from 1.5.0-rc1No description provided.
R1.4No description provided.
Apply non-bfloat-related final 1.5.0 cherry-picks.No description provided.
Branch 183115307No description provided.
Allowing override of common_env.sh python directory.PiperOrigin-RevId: 180806246
Revert #15967. Reduce pip package size.No description provided.
Fix of issue #13164 (Merges #13382)Deconflicts #13382Fixes #13164@dantkz /cc@ebrevdo /cc
Andrewharp patch 1No description provided.
Fix typofix typo
"Return type annotationAdded type annotations in the docstring to the return types of dataset functions.
Presented like this, they can automatically be read by tools (I have tested that this works in PyCharm) to improve auto-completion when coding."
Increase tolerance in `losses_impl_test.py`. fixes #16238No description provided.
minor spelling tweaks for eager execution docsNo description provided.
"Loosen bounds on `losses_impl_test`. fixes #16238This should fix issue #16238 , where this test fails on some architectures."
"Fix typosThis PR fixes some typos: intializes, nubmer, varibale, fuction, Ouput, avaliable, ouput, and Explictly."
R1.4No description provided.
Fixed documentation formattingNo description provided.
"[Bazel/Windows] Don't use -Wl, -lpthread and -lm on WindowsNo description provided."
Fix typoNo description provided.
Remove path_to_str from the public API@martinwicke fyi
Fix a bug that capture_tpu_profile only takes absolute logdir path.Also removed package dependancy on tensorflow for better compatibility.
Apply final cherry-picks for 1.5.0 release.No description provided.
Apply final cherry-picks for 1.5.0 release.No description provided.
Fixes #16314Fixes #16314.
Branch 182892876resolved one merge conflict in histogram_ops.py
Making string values in constantWe already have a constant.py in session_bundle since adding these string values as a constant.
Removing os.pathNo description provided.
Using math_ops instead of defining separate mulop functionNo description provided.
py_func convert unicode string results to bytes for python2Fix #16320
tpu contrib fixfix the issue in #16262
Add alternative paths for CUDA installation.This detects negativo17's CUDA packages for Fedora.
import tensorflow as tfThese five files do not explicitly import tensorflow as tf yet they use they use tf. methods or functions which drives linters like pylint and flake8 crazy unless special directives are put in place.
Allow step callback for scipy SLSQPThis simple fix allows SLSQP method of scipy optimizer to use step callback as reported in issue #16294.
Workaround 'too perfect forwarding' issue in variant_op_registryIn variant_op_registry.h
Fix Conv3DTranspose in tf.kerasNo description provided.
"Add LINM (Loop Invariant Node Motion) optimization pass in GraphOptim…izer
This change was inspired by LICM (Loop Invariant Code Motion) of compilers. We observed from some public models, e.g. seq2seq (https://github.com/google/seq2seq) and tensor2tensor (https://github.com/tensorflow/tensor2tensor), as well as some of our in-house models that there are many invariant nodes, including expensive MatMul nodes, inside the loop body.
This optimization pass is to apply on Tensorflow computational graph to detect these invariant nodes and move them out of the loop body, that's why we call it LINM (Loop Invariant Node Motion)."
Add LINM (Loop Invariant Node Motion) optimization pass in GraphOptim…izer
"Replace inception5h references with inception_v1In addition to bringing the name to the updated naming scheme, the new archive contains a version of the graph which does not have the CPU attribute set, meaning that it will run with GPU acceleration if available."
"Don't load libcupti.so from regular path on AndroidOpen to alternatives, but as other methods in this file work similarly this doesn't seem too bad."
Update README.mdCorrect MobilenetV1 variable
Update README.mdCorrect MobilenetV1 variable
"Add tf.multi_one_hot that one-hot encodes multiple columns of TensorHello,
here is the PR for my feature request #16044
Excited to see your feedback for my first TF PR and hope to give something useful back to this great library ;)"
Branch 182808673No description provided.
MKL: Fix convolutional_recurrent_test failureThis branch fixes the convolutional_recurrent_test failure.
MKL: Fixed convolutional_recurrent_testThis PR is to fix convolutional_recurrent_test unit test.
Branch 182802058No description provided.
Branch 182783262No description provided.
Removes redundant variable assignmentAddresses alert raised by lgtm.com:https://lgtm.com/projects/g/tensorflow/tensorflow/snapshot/e6183fbeecf069148371be83988e8e5db2b14185/files/tensorflow/python/framework/constant_op.py#xb77a2f6647d782be:1
"Repair compilation error of tensorflow built with MKL-DNNWhen we compile tensorflow with Intel MKL-DNN, it will meet a failure:"
minor spelling tweaks for lite docsNo description provided.
R1.4No description provided.
Add test for float16 support with conv1d and update docstringThe float16 support for conv1d has already been in place. However there was no test for float16 with conv1d. This fix adds test case to cover float16 support with conv1d.
"Add a rnn example on mnist dataset using tf libraryA Recurrent Neural Network (LSTM) implementation example using TensorFlow library.
This example is using the MNIST database of handwritten digits (http://yann.lecun.com/exdb/mnist/)
Links:Long Short Term MemoryMNIST Dataset."
udacity assignment 1 & 2No description provided.
"Fix compilation error and warnings with CUDA=0There is a compilation error when compiling verbs with CUDA=0. This is rarely used, but we still want it to compile of course.
Also there are some compilation warnings that shouldn't exist. Mostly about 'unused functions' when setting/unsetting certain preprocessor defines."
"Fix two small issues of XLA1.In Tensorflow, conventionally, INT32 ops are regarded as shape or control
ops, and are registered on CPU only. XLA should follow the same rule, to
avoid the potential data transfer between TF CPU ops and in GPU_XLA ops,
which result into performance degradation when XLA is turned-on.
2. Any OpKernel with more than 500 inputs is excluded. This is a temp
workaround to avoid an potential issue that, the cuda drive do not accept
a compiled PTX kernel with parameter space larger than 4352 bytes. The data type
of PTX kernel parameter is u64. An OpKernel with 500 inputs are more likely
to exceed the limit."
"Enhance layout optimization logic to remove duplicated layout transp…Enhance layout optimization logic to remove duplicated layout transpose operation for performance improvement purpose.
For example:
a NCHW-to-NHWC transpose op followed by a NHWC-to-NCHW
transpose op, under this scenario these two ops acutally can be absorbed into
nothing, thus avoid unnecessary computation."
[tflite] make calling NNAPI work againcalling PrepareOpsAndTensors() before using NN API looks
Introducing TensorRT operatorThis PR introduces a new op that wraps around an highly optimized TensorRT engine and provides a seamless integration between TensorRT and TensorFlow.
Branch 182576952No description provided.
Branch 182559534No description provided.
Branch 182554969No description provided.
Branch 182511847No description provided.
fix typofix typo
fix typofix typo
"Fix a buildscript error which prevents macro being used by other workspacesConverting to label and back to string will prepend current workspace,
e.g: //tensorflow -> @org_tensorflow//tensorflow. Projects who
integrate TensorFlow from another Bazel workspace, and use macros liketflite_copts() need the prefix."
"support preconditioner for `conjugated_gradient()` in `linear_equations.py`Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
Branch 182474037No description provided.
Branch 182456096No description provided.
Singleton S3ClientFixes #16230 .
Docker patch 14No description provided.
"Suppress AWS curl init warningThis shows up each time we run the TensorBoard command, even if we're
not using anything AWS related."
Fixing a typo for the argument to docker push. (#16204)No description provided.
Branch 182384458No description provided.
"Fix result shape of tf.tensordot unknown when axes is an integer number#8452 add the function ""Tensordot partial shape inference"", solves the problem #6682.
However, the shape of result of tensordot is still <unknown> when axes is an integer N, which is in common use.
For example,"
"Windows: Add missing dependencies in lib_proto_parsingFix http://ci.tensorflow.org/job/tf-master-win-bzl/2275/console
Culprit: ccbd14b@gunan @panyx0718"
fix typofix typo
Branch 182305106No description provided.
"added CMake options to provide external zlib, GRPC, EigenHere are changes necessary to build tensorflow with different version of GRPC, Protobuf, Eigen, zlib, etc. It is not possible to compile project using two different versions of protobuf for example. To deal with that I've chosen approach similar to one in GRPC library. Copy of #14463 (comment)"
make label_image for tflite build againCan one of the admins verify this patch?
Fixing a typo for the argument to docker push.No description provided.
Branch 182280342No description provided.
Accepts `PathLike` objects for `model_dir`Can one of the admins verify this patch?
Branch 182265266No description provided.
"Fix issue of branch switching not working with bazelThis fix tries to address the issue raised in #15957 where bazel stops working after switching git branch, and reconfigure with ./configure will not work as well."
Fixing deprecated URL linkNo description provided.
"Fix docstring typo of losses_impl.pyAdd missing ""`"" to the docstring."
"add LU operation and return factorized matrices, related to #6992This should be related to #6992 for mccajm request ""It would be nice to expose the decomposition, like tf.cholesky_solve, so that it can be reused on the next solve if A doesn't change."""
`AssignVariableOp` supports `DT_BFLOAT16`Fix #16103
4d55397500 patch 1Provide a practical meaning for the pos_weights parameter.
Add C++ toolchain for portable Linux buildsSee #15777
Merge changes from r1.5 into masterThis change picks up the commits exclusive to the r1.5 branch and puts them back into master.
Updating the docker login command. The email flag is deprecated.PiperOrigin-RevId: 181769938
Branch 182086883No description provided.
Fix unicode string conversion issue in Python 2This fix tries to address the issue raised in #16149 where the unicode string conversion with Python 2 does not match the behavior with Python 3.
"GAN model: move generated and real operations under discriminator namespaceHi everybody,"
Update rules_closure to fix bazel version checkRelated bazelbuild/bazel#4425 (comment)
Added save_checkpoint_steps attribute to MonitoredTrainingSessionfix #15900
New features: tf.alphas and tf.alphas_like - Related to #16128This PR is related to the issue: #16128
"Decoding contents of BMP file on big endianAs the BMP file contents are encoded in little endian format, added byte swapping for reading the various header components correctly on big endian."
fix typoNo description provided.
FIX Typofix typo
Fix typofix typo
Added training parameter to batch_normalizationAccording to the docs the batch_normalization layer does not work properly if the parameter is not set correctly.
"Add training parameter to dropout to make it workI think that without this parameter set dropout is disabled all the time. At least this is what I read in the documentation, besides adding this improves training."
Update contrib/HVX readmeI updated the README because of some imprecisions and to add clarifications of what I think will guide the users more appropriately.
Fix broken python3 buildCurrently building tensorflow master branch with python3 fails with following error message.
"allow 'None' as batch size for TimeFreqLSTMCellCurrently it is not allowed to have a variable batch size in TimeFreqLSTMCell, as the size is casted to an int internally.
This patch fixes this by omitting the int cast."
"fix default parameters for TimeFreqLSTMCell, fixes #16100Resolve #16100"
Disable stacktrace_handler_test becase stack trace isn't generated on WindowsFix http://ci.tensorflow.org/job/tf-master-win-bzl/2259/console
add rolling window batch operation for tf.data.DatasetResolve #15044.
fix typoNo description provided.
Enable some passes for graph_transform on WindowsDon't know why but the following passes are disabled on Windows:
Utility classes for writing Java source code from a C++ process (part 3)Part 3 (and last) of pull request #14094 that has been split into several commits.
Created dense_to_sparse in contrib.layersAdded dense_to_sparse. This does the conversion of dense labels into sparse ones to be passed into the core ctc_loss function. Addresses feature request #15985
"Minor improvements to TFRecord format docsThe TFRecord format documentation mentions that hashes are computed using a CRC32, but doesn't mention the polynomial used. I added that detail, so the documentation is now sufficient for a developer trying to write a parser / writer for (uncompressed) TFRecord files."
"Add nsync lib dep. to cc_library rule android_tensorflow_lib_selective_registrationThe nsync lib dep is missed in rule ""android_tensorflow_lib_selective_registration"""
Update maxout.pySpecify the final number of features in the maxout axis
Propagate the error string of GIF processing for decode_gifThis fix tries to improve the error thrown by decode_gif to include the error string generated by GIF processing.
R1.5just want to download the code as samples of how to access tensorflow using C code.
"Fix crash in `tf.contrib.ffmpeg.decode_video`This fix fixes the crash in tf.contrib.ffmpeg.decode_video. The reason for the crash was that, decode_video dumps the information about streaming etc. (as opposed to dump
to stderr) info a file and read from it. As the loglevel was error the file was empty."
"Add stream selection support for `tf.contrib.ffmpeg.decode_audio`This fix tries to address the issue raised in #16073 where it was not possible to selectively decode a perticular stream with tf.contrib.ffmpeg.decode_audio.
This fix adds an additional attribute stream which could be used to specify the stream to decode (e.g., stream=""1""). By default stream="""" which leaves the decision to ffmpeg."
Make srcd in variableNo description provided.
Address bad merge in Java install instructionsNo description provided.
Branch 181814918No description provided.
MKL-DNN:  fix batchnorm unit test failuresFix failures of all 9 fuse batchnorm test cases.
Disable flaky model_analyzer_test on windows.PiperOrigin-RevId: 180599588
Disable keras data_utils_test as it's flaky.No description provided.
[Intel MKL-DNN] fixes for several MKLDNN unit tests.Current MKLDNN element wise (add) results in several unit test failure. A temporary workaround is provided by comment out the MKLDNN element wise (add) optimization.
Add unspecified dimensions (-1) support for noise_shape with tf.nn.dropoutThis fix tries to address the issue raised in #16034 where it was not possible to have unspecified dimensions for noise_shape with tf.nn.dropout.
"Update download_dependencies.sh to prevent crash from 403The eigen bitbucket seems to have changed causing the scrip to crash with a unrecognized archive error.
Changing to grep -v mirror.bazel seems to fix this because otherwise we get a 403 forbidden error."
"MKL-DNN: fix concat issue related to negative input concat_dimFor a negative concat_dim input, the actual concat_dim should be N + concat_dim with N
being the dims of input tensors."
"MKL-DNN: fix a concat issue which is related to negative concat_dimFor a negative concat_dim input, the actual concat_dim should be N + concat_dim with N
being the dims of input tensors."
Branch 181765083No description provided.
Update important RELNOTES and author listNo description provided.
Update LICENSEThis commit updates an instance of 2017 to 2018.
"optimize_for_inference_lib.fold_batch_norms() preserves data_formatfold_batch_norms() currently breaks graphs containing convolutions using NCHW data format. The function replaces a BiasAdd operation with a new one, while not preserving the data format of the original operation. As a result, the new operation always has NHWC data format, and the execution of the resulting graph fails because of mismatching dimensions."
Fix typoNo description provided.
fix comments and code matchesNo description provided.
Fix typoNo description provided.
"[XLA] Separate out the dynamic slice wrapping testsThis is a set of changes to allow disabling of bfloat16 tests, for backends which don't support bfloat16.  Originally it was a change to the same set of tests to allow the wrapping behaviour tests to be disabled.  That change was made obsolete by some parallel work."
"the loss is nanwhen i training the facenet(build by myself) the loss is normal on the first iteration, but on the second and following iteration ,the loss became nan, i don't know what happened, please help me, Thanks!!!"
"export tflite::Intepreter's  UseNNAPI() and setNumThreads() to javaExport tflite::Intepreter's UseNNAPI() and SetNumThreads() to Java
and modify the Android TfLiteCameraDemo app to use them."
"MKL DNN: fixed a bug related to feature column test in pythonThe fix only affects one file, mkl_aggregate.cc. It fixes both MKL ML and MKL DNN unit test test case. The test case is: python/feature_column:feature_column_test unit test."
Branch 181679271Merging internal changes
[Intel MKL] Fixes for various MKLDNN unit test failuresMklLayout pass changes
Make platform a proper moduleThis fixes an issue where the nice error about importing tensorflow from the TF source directory is not displayed in Python 2.7
Apply 1.5-rc1 cherry-picks.No description provided.
MKL: Fixed 3 bugs picked up by the unit testsCan one of the admins verify this patch?
Fix crash on GPU (out of GPU memory) for `softmax_cross_entropy_with_logits`This fix tries to address the issue raised in #6766 where softmax_cross_entropy_with_logits will trigger the crash on GPU (out of GPU memory) if the first dimension is 0.
Windows: Batch script for building the CUDA-enabled C library.Follow up to PR #15878 to help resolve #11602
Branch 181629980No description provided.
fix C2678 error on VS2017 15.5fix build fail on Visual Studio 2017 15.5
Windows: Remove -j option when zip libtensorflow packageFix http://ci.tensorflow.org/view/Nightly/job/nightly-libtensorflow-windows/329/console
"Use https for `https://github.com/tensorflow/serving`It looks like there are a couple of links in saved_model.md using http to point to serving, and the rest are using https to point to serving, This fix updates to https for consistency and security."
"Update embedding.mdWhen I reference embedding projector, I found the string of https:// was removed. So I added it to help other people get a correct reference about How to Use t-SNE Effectively from Embedding of Programmer's guides."
py2tf: add py2tf_internal BUILD rule to pip packagecc @mdanatg
R1.4No description provided.
Update version strings and revert pom.xml changesThe maven numbers will be updated manually later.
Update version strings.No description provided.
"MKL: Fix LRN tensor shape when Eigen path is taken.On Eigen path, the workspace tensor should only have one dimension of size 0."
Branch 181499300No description provided.
Disable all failing tests to fix TF opensource tests.PiperOrigin-RevId: 181212111
Disabling the warnings test for python3.5 as well.No description provided.
"Modify `_parse_bazel_version` to return a tuple of intsBazel is updating its version to 0.10.0, and this will break the version check. Applying suggested fix in bazelbuild/bazel#4425."
Disabling the interleave_op_test for now.No description provided.
Fix a bug in ResolveConstantConcatChanges to fix a bug in ResolveConstantConcat whereby shared tensors are removed without checking if they are used in other operators in the graph.
Fix inline if/else statement in CMAKE_CACHE_ARGSAn if/else statement was given inline as an argument to CMAKE_CACHE_ARGS for some CMake external projects as discussed in #15209. This resulted in the following init cache entries on some systems:
Add property to get cell wrapped by DropoutWrapperAdding wrapped cell property as discussed in #15810.
"Verbs w 0 copiesFollowing HKUST research on the use of GPU direct, and their GDR implementation, we wish to adopt the 0 copies approach and apply it to the current verbs implementation, while keeping the current implementation advantages, such as configurability and the use of RDMA for control messages."
Adding meta_graph_be.pb testdata for big endian for framework_meta_graph_testNo description provided.
fix a_ to allocator_Please review this PR ASAP... @yuefengz
"Fix typosThis PR fixes some typos: refered, ouptuts, from from, suport, whithin, posibility, and then then."
Hide MSVC workaround from Clang on Windows#15990
Fix freeze_graph command line argument error.Fix TypeError: main() missing 1 required positional argument: 'unused_args' when using freeze_graph command line tool (pip console script entry point)
"Add internal release notes that were previously missing.I wasn't sure about some of the Important/Other changes, so please double-check
that I haven't missed anything actually critical."
Add new internal release notes that were missed in the previous iteration.No description provided.
Fix r1.5 tests.PiperOrigin-RevId: 181212111
Branch 181341793No description provided.
MKL: Fix for a compilation error caused by a previous commitNo description provided.
"Fix local path for hexagon_graph_execution in sample scriptAs Android arch is supported since r1.5, the local path must also be changed.
If not, and error occurs that the file can not be found."
Fix local path for hexagon_graph_execution in sample scriptNo description provided.
Fix variable property of DropoutWrapperFix #15810.
Make graph transform tool accessible via command line for pip install.RELNOTE: Make graph transform tool available from command line astransform_graph for pip package.Fix  #13287.
remove write_version=saver_pb2.SaverDef.V1This PR fixes the failed testAdditionalHooks and testRestoredModelPerformance test for PR #14341
Adding cuda_config.h to the pip package.No description provided.
Branch 181239691No description provided.
Adding an install sources line for 1.5.0-rc0. Earlier we only updated… this for official.
Branch 181174976No description provided.
Update 1_notmnist.ipynbNo description provided.
Windows: Override /DEIGEN_STRONG_INLINE=inline for //tensorflow/core/kernels:conv_opsThis change reduces the Windows building time by more than 15 minutes
Support for large number of classes when using tf.metrics.mean_per_class_accuracy()tf.metrics.mean_per_class_accuracy() uses a num_classes x num_classes matrix to keep track of accuracies for each class. This wastes a lot of memory and doesn't work well for large number of classes (e.g. matrix size for 500k classes is 500000^2*4 = 1 terabyte).
"Fix tensorflow::CurrentStackTrace when TF_GENERATE_BACKTRACE isn't definedFix http://ci.tensorflow.org/job/tf-master-win-bzl/2227/console
culprit: 05386f4"
[tensorflow lite] add setUseNNAPI to the Interpreter classadd setUseNNAPI to the Interpreter class
"Update docs and test cases for missing types in `tf.zeros_like`zeros_like supports POD types as well as strings. However, some of the types are missing in the documentation."
Making SQLite betterNo description provided.
Utility classes for writing Java source code from a C++ process (part 2)Part 2 of pull request #14094 that has been splitted into several commits.
"R1.5/verbs w 0 copiesFollowing HKUST research on the use of GPU direct, and their GDR implementation, we wish to adopt the 0 copies approach and apply it to the current verbs implementation, while keeping the current implementation advantages, such as configurability and the use of RDMA for control messages."
_Assert3DImage that adds a control dependency for the shape checkI noticed that the _Check3DImage was always used in exactly the same way and extracted this into its own convenience function.
"Add clean_dep to copts macro.Currently, copts macro has select statement with //tensorflow/...
This resulted in bazel error when any supermodule that uses tensorflow as a submoudle and uses copts macro."
"Add clean_dep to a bazel macro.Currently, copts macro has select statement with //tensorflow/...
This resulted in bazel error when any supermodule that uses tensorflow as a submoudle and uses copts macro."
"Add pos_weights practical interpretationThe current  weighted_cross_entropy_with_logits docs don't explain practically the relationship ofpos_weights > 1,  pos_weights < 1 to precision, recall, and class imbalance."
Update docs for `concat` in case `axis < 0`This fix tries to address the issue raised in #15905 where the documentation does not cover the case of axis < 0 for tf.concat.
Add additional argument to freeze_graphThis PR fixes the failed testFreezeGraphV1 test for PR #14341
Branch 180993147No description provided.
"Addresses S3 timeout configurability discussed in #15868This provides the ability to specify S3 timeouts via environment variables, as requested in #15868."
DO NOT MERGE YET: Cuda configNo description provided.
"Add EvalResultsExporter for writing the results of evaluation to a filePreviously you could capture the return value of estimator.train_and_evaluate,
which was a dictionary of the final evaluation results (like accuracy, AUC)."
"Use https for `www.tensorflow.org`This fix uses https://www.tensorflow.org for www.tensorflow.org, for the purpose of increased security and consistency with the rest of the documentations."
"Allow `~/` in path for transform_graphThis fix tries to address the issue raised in #13211 where it was not possible to specify ~ (e.g., ~/, ~user/, etc) for the path used in transform_graph. This fix adds the support of ~ transform_graph on Linux."
"Transpose for high dimensional tensors using eigenIn our library we rely heavily on fast transposes of high dimensional tensors, so we have added few extra cases to the CPU and GPU transpose functors. Previously it was done up to dimension 5 and we included dimensions 6, 7, 8 (similarly to the TENSORFLOW_USE_SYCL case)."
Scope subprocess and tempfile imports in tensorflow lite to fix #15410Fix for #15410
Cleanup CocoaPods dependency from TFLite iOS examplesNo description provided.
Deletes unnecessary lines of codeThe rest of this function changed sufficiently that these lines of code are not doing anything and can cause bugs.
Add release note: sparse tensors in `tf.data`No description provided.
"Fix a few pip testsIn training_test.py, avoid calling the assert_called() method, which
is not universally available."
Removing twice times declared same statement in Java_org_tensorflow_Operation_shape functionThere is an already defined statement in shape method Java_org_tensorflow_Operation_shape:
Windows: Release script for C library GPU builds on WindowsFixed #11062
"Documentation fix to contrib.signalsFixed very confusing little typo.
The input signals is segmented into variable number of frames (with frame_length=256).frame_step is the stride, not the size of a frame/window."
fix the comments which mistake x for y in gradient_checkerFix the comments which mistake x for y in gradient_checker.py.
Branch 180856860No description provided.
extract populate weight collection.No description provided.
Fix docsNo description provided.
"Fix typo in eager value_and_gradients docstringThe function is computing gradients with respect to f, so this is possessive of the function if I'm reading this properly."
extract populate weight collection.No description provided.
Branch 180746153No description provided.
Add unsortedsegment(prod/min/max/sqrt_n/mean).This pull request
"Update documentation for gather_nd/gather to specify behaviors for out-of-bound indicesThis fix updates documentation for gather_nd/gather/scatter_nd to specify behaviors for out-of-bound indices. Basically, on CPU an error will be returned and on GPU 0 value will be filled to the expected positions of the output."
MKL DNN: Implementing MKL DNN version of SoftmaxNew MKL DNN implementation of Softmax is added.
"Export inception model after retrainThe are many issues and Stackoverflow posts asking how to export a retrained Inception model: tensorflow/serving#449, tensorflow/serving#33, tensorflow/serving#7. It would be nice if retrain.py did this so that it's easier for newcomers to use Tensorflow Serving."
"Enable tilde expansion in debug wrappersThis commit allows paths beginning with '~' to be used when specifying where
debug files should be dumped. The tilde will now be expanded to the user's
home directory."
Fixes and formatting to configure.pyDone reducing the number of lines. Thanks.
WIP: LSTMBlockFusedCell supports DropoutFix #13649.
Windows: Disable bfloat16_test and framework_dtypes_testReenable after fixing#15297
"Add axis support for `tf.nn.crelu`This fix tries to address the issue raised in #15619 where it was not possible to specify an axis fortf.nn.crelu. By default, axis=-1 was used for concatenation implicitly."
[Bazel/Windows] Wrap rm -rf in Bash for Windows (and some refactoring)rm -rf is not available in Windows command prompt. Run it in Bash like patch -pl.
Merging 1.5.0-rc0 back to master.No description provided.
Remove :0 in final result argumentSmall change to line 393 - in my recent testing of retrain and the label_image workflow as of today (TF master @  136697e) I had to remove :0 from the label_image output_layer argument.
Update advise.mdNo description provided.
Move SpeechActivity animation to XML.Moved SpeechActivity animation to res/animator/color_animation.xml.
Fix a pessimizing-move warning in GetDeviceLapackInfo()clang reports:
Updating error handling in normalize_tupleIn normalize_tuple we test to see if all values are an int (or able to be cast to an int) using int()
Revert \Remove unneeded branch check (#13495)\This reverts commit 3aee5f1.
Revert \Fix a bug: bfloat16 is unsigned on Windows (#15302)\This reverts commit fdf34a8.
"Fix git configuration on Windowshttp://ci.tensorflow.org/job/tf-master-win-bzl/2188/console
Running python script on Windows require explicitly invoke python binary."
"Fix typo in UserInputError()The phrase ""The followings are ..."" (lines 336 & 337)
should be changed to ""The following are ...""."
"Closing input stream, runner session in TensorFlowInferenceInterface.java and fixing bit changesNo description provided."
Fix typo in LinearModel() docstringadn -> and
add checking for input values in GANHead constructorNo description provided.
"Remove noop python command in pyx_library rule.It looks to me like the command produced should be:shutil.copyfile(src.split(""."")[0] + "".cpp"", src.split(""."")[0] + "".cpp"")
based on how cpp_outs is constructed a few lines above?
Allen,  could you take a look and comment?"
Fix unstable test case for Select opFix #14862. CF: #15764
"Memory allocation improvement for `decode_libsvm`This fix is an improvement to #14330. Previously, string split was handled through str_util::Split, which may incur unnecessary memory allocations. This fix uses StringPiece instead."
"Remove calculation of unnecessary matrix columns in SVD gradientThe SVD gradient calculation when compute_uv=False currently uses the orthogonal ""U"" and ""V"" matrices returned by the SVD operation with full_matrices=True, but it really requires only the full_matrices=False versions.  This pull request makes the calculation use the full_matrices=False versions."
Fixing the item_test failure.Implementing @caisq fix for the item test. Push + CP will take quite a long time.
"Fix docs to recommend cuDNN 6.0, rather than the old 5.1 or non-exist…ent 6.1."
"Change dso_loader to look for libcupti.so instead of libcupti.so.8.0On Android, it is hard to package libcupti.so.8.0 with bazel to generate CUDA-enabled apk
The cc_library macro in bazel only looks for *.so, not .so."
Fix build issues with cuda 9.1 through updating eigen.No description provided.
Fix kmeans gpu and upgrading TF base images to 16No description provided.
order quantized table by value for ease of readingNo description provided.
order quantized table by value for ease of readingNo description provided.
order quantized table by value for ease of readingNo description provided.
order quantized table by value for ease of readingNo description provided.
[configure] eagerly determine the truthfulness of environment variablesEagerly determine the truthfulness of environment variables in get_var function.
R1.2No description provided.
"Fix invalid Markdown in docstringThere is currently invalid markdown in the docstring, which is causing the docs site to render incorrectly."
remove trailing semicolon at the end of lineremoved trailing semicolon(;) in the statement
fix todo: make a class which constrcuts resource and provide get_next.No description provided.
Trivial python syntax fixesNo description provided.
Revert \C++ gradient for Select (#14862)\This reverts commit dc355dc.
Branch 180441903No description provided.
Make unused variable warning an error during TF builds.We will need to eyeball build logs and see if this is really working as intended
Revert \add c++ gradient for op: Pow (#15245)\This reverts commit e1ded7f.
Update license yearTO DO:
"Fixes #15736This will allow users to import keras submodules without typing from tensorflow.python.keras... but just directly from tensorflow.keras.
This change also does not create a duplicate of the module object but just assign it two names, one with tensorflow.python.keras keeping current functionality and tensorflow.keras allowing a much more consistent API use."
"Fixes #15736This will allow users to import keras submodules without typing from tensorflow.python.keras... but just directly from tensorflow.keras.
This change also does not create a duplicate of the module object but just assign it two names, one with tensorflow.python.keras keeping current functionality and tensorflow.keras allowing a much more consistent API use."
[XLA] Fix std::array initialization take 2#15511 did not fix the issue on MSVC.
[XLA] Define TF_COMPILE_LIBRARY for two librariesBoth index_ops_kernel_argmax_float_1d.cc and index_ops_kernel_argmax_float_2d.cc use TF_EXPORT macro. We need to define TF_COMPILE_LIBRARY (comes from tf_copts) to make sure TF_EXPORT is expanded into __declspec(dllexport).
"[XLA] Add missing win header deps to framework_liteContinue from #15579. Most Tensorflow components depend on framework rather than framework_lite, so I did not notice this until I try to build XLA/tfcompile locally again."
Including common.h with NEON_2_SSE.hIncluding common.h to make sure that USE_NEON is defined in case of NEON_2_SSE.h is used; otherwise USE_NEON will not be propagated to this file and portable_tensor_utils.h will be used
"Use Eigen version of the `scalar_pow_op` for `pow` opsThis fix use scalar_pow_op in Eigen to replace customerized scalar_binary_pow_op_google, as scalar_pow_op seems to be in place in Eigen."
"Simplify the dense_to_one_hot methodSimplified the dense_to_one_hot method.
The updated method behaves exactly like the old one, but is more concise."
Fix the headers error due to recent CUDA9.1 changeSome headers in CUDA 9.1 has been move to cuda/include/crt directory.
fix typofix typo
Clarify the description of batch_norm in order to highlight the dimen…sion selection for normalization.
Batch support for deterministic image opsBased on #14854 and working on #8926
Load region from `~/.aws/config` if possible in S3This fix tries to address the issue raised in #15662 (comment) where TensorFlow does not load region from ~/.aws/config if exists. The reason was that AWS C++ SDK does not use the config file by default.
Fixed a typo for CreateBody()No description provided.
MKL: update mkldnn to the latest releaseThis commit will pull the latest changes from the mkl-dnn tree.
Optimizing code and adding from http to httpsNo description provided.
getting latest pullNo description provided.
"Removing extra space, preventing double declared \if\ statement and from http to httpsNo description provided."
"Update estimator.mdThe anchor ""#fit_dnnclassifier"" can not locate to a valid position. You can try the following two links:"
fix doc `tf.data.contrib.map_and_batch` to `tf.contrib.data.map_and_batch`change from unexist tf.data.contrib.map_and_batch to tf.contrib.data.map_and_batch
Update graphs.mdNo description provided.
Update estimator.mdNo description provided.
updated the latest mkldnnThis commit will pull the latest changes from the mkl-dnn tree.
updated the latest mkldnnThis commit will pull the latest changes from the mkl-dnn tree.
"Used template version of SafeStringToNumeric to reduce code duplicationThis fix uses template version of SafeStringToNumeric to avoid customerized ConvertHelper, for the purpose of reduce code duplication."
Branch 180304271No description provided.
"Fix out of memory issue on Tegra devicesTF used to allocate (available memory - 300MB) or (available memory - 225MB)
for TF to use. This is fine for graphic cards, but will cause out of memory
issue on Tegra.
Modify to allocate (available memory - 1GB) for Tegra.
1GB should be enough for OS and other apps
(available memory - 1GB) should be 0.8-1.5GB which is enough for most graph for TF."
CherrypicksFixes for release tests.
fix description of HASHTABLE_LOOKUP in smartreply docHASHTABLE_LOOKUP is a builtin op rather than a custom one.
R1.4No description provided.
"Improve doc of TFRecordDataset, shuffle ahead of mapIn the origin document, the code to demonstrate TFRecordDataset do dataset.map(parser) then do dataset.shuffle(10000).
This code use a high number of buffer size (10000), and since map do ahead of shuffle, means when the first time this dataset yield one result it will need to run map over 10000 items and this can take a lot of time.
So, instead we can do shuffle ahead of map, since the item of TFRecordDataset is one Example raw data, shuffle ahead will not compromise the randomness and then the map(parser) only need to process one batch of items at a time. Which results much faster startup."
De-Bazel pip_smoke_test sanity checkSee #15368 (comment) for reference.@gunan @martinwicke /cc
De-Bazel check_load_py_test sanity checkSee #15368 (comment) for reference.@gunan @martinwicke Friendly ping.
Enabling tests to pass with python3.6. Updating dependencies for dock…er tests.
Branch 180224227Need a push for the release.
Remove third_party/ prefixesNo description provided.
[README] Link to build historyCompletes #15666
Turn check_futures_test into a sanity checkSee #15368 (comment) for reference.@gunan @martinwicke /cc
"[CMake] Add sanity tests for python file listsReplaces #15166
See discussion in #15368@gunan @martinwicke Friendly ping."
"minor wording fix in (slim) readme""we want to restore a model from a checkpoint
whose variables have different names to those in the current graph.""  (add the to in the line)"
updated Readme.mdtf-nightly whl files download links added for Linux of python 3.6 version
Fix NadamOptimizer to work with sparse gradients properlyFix for #15035 and  #13980
"Fix small typo in docstring which causes the API doc to render incorr…ectly
See
on https://www.tensorflow.org/api_docs/python/tf/train/piecewise_constant"
Revert \Fix a bug: bfloat16 is unsigned on Windows (#15302)\This reverts commit fdf34a8.
Fix typo 'updaye' in audio_recognition.mdFix typo 'updaye' to 'update' in audio_recognition.md
add a function to add extra logging handlerI want to separate different level of logs. So error message will not be buried by info/debug logs. In r1.4.  I use following code to do the job.
Removed misplaced quote charNo description provided.
"Enable `axis` support for `tf.unique`The axis support for Unique has been Added in PR #12952 (defined in UniqueV2 ops). The support for axis in python version of the tf.unique was not enabled yet, due to the API workflow porcess (3 weeks). This fix adds the support for axis with tf.unique by adds Unique to hidden.txt, and adds a python wrapper of tf.unique to pointing to UniqueV2."
Clarify batch_norm documentation to highlight that the dimensions for…... normalization depend on the shape of the tensor.
fix variable nameNo description provided.
Predictor fixes for core estimatorsCreating a predictor from a core estimator was broken due to:
Branch 180147476No description provided.
adding ps_strategy to run_config to enable different placement strate…gy in estimator
"fix doc for benchmark_model for androidafter configure.py set framework_shared_object=true,
benchmark_model won't build for Android without tweeks. Add
'--config monolithic' to avoid confusion."
Fix an lib error while building with CUDA9.1Some header files in CUDA9.1 was moved into dir cuda/include/crt causing when building with CUDA9.1 headers like math_functions.hpp could no long be loaded.  Adding the directory into BUILD file fixs the issue.
Branch 180053468No description provided.
Update: HTTP -> HTTPSURLs updated to use HTTPS protocol where appropriate to improve security and privacy.
Fix periodic resampleNo description provided.
[CMake] Include example compile script@mrry Friendly ping.
Branch 180008567No description provided.
"Support Negativo17 Fedora PackagingSupport the Negativo17 Nvidia driver packaging for Fedora. libdevice libraries are under /usr/share/cuda, includes are under /usr/include/cuda and libraries are under /usr/lib64. This PR should help #8264 too."
"Optimize FusedBatchNormGrad.Reuse the output buffer and allocate only one temporary tensor, when data format is NHWC and
GPU is used. This is based on the observation that cudnn can perform the backward computation
in place. The same idea is used in PR #15601 ."
"update _DECORATED_OPS for each latest callThis fixes a race condition where the arg list is not being reliably extracted during add_arg_scope .
The simple solution is to always update _DECORATED_OPS on each latest call to _add_op."
"Fix `tf.pow(x, y)` edge case with integer x and negative integer yThis fix tries to address the issue raised in #12156 and #9560 (and PR #11852) where pow(x, y) hangs with an integer x and a negative value of y."
"Fix issue #15588 by simplifying the codeThe allocator.h code tried to be clever and use 32 byte alignment for SSE/AVX2/etc use,
and 64 byte alignment for AVX512."
Make `frame` positions configurableThis also fixes a bug in get_root_dir_with_all_resources.
[CMake] Remove invalid python modulesSplit from #15368@mrry Friendly ping.
"[CMake] Test existence of python entriesSplit from #15166@mrry Friendly ping,"
"Optimize FusedBatchNorm (and fix a bug).I discovered experimentally that cudnn computations can be performed in place. Therefore there is no need to allocate two temporary tensors in FusedBatchNorm for GPU and data format NHWC. One is enough. This lowers memory consumption, and hence increases the maximum possible batch size."
Exclude tf_stream_executor.cmake for CPU onlyBug introduced in #15099Fixes #3996
"Freeze pb model will not remove is_training flag of bn attr and it is moreover still set as trueUsing /tensorflow/python/framework/graph_util_impl.py # convert_variables_to_constants to freeze graph to pb model will not remove is_training flag of batch_normalization as well as fused batch_normalization ops (tf.layers.batch_normalziation) in the inference graph.  Moreover, the is_training flag is still set as true. This issue will not cause any errors to use the pb model on Android. However, it will cause converting errors to tflite model by toco. Is it possible to optimize this conversion tool to resolve the problem in further versions."
R1.4No description provided.
Adding installation dependencies for python3.6 based on failures from… the release job.
Update tf-learn reference to TF EstimatorsNo description provided.
"Issue #15572, support for unspecified spatial dimensions in layers.Conv3d_transposedPatch to 3d transposed convolution to use the same code for adding biases that regular 3d conv uses.  This allows transposed convolution to add biases if the spatial dimensions are not specified and the dimension ordering is channel last.  The case with channel first ordering still requires spatial dimensions be specified for both conv3d and conv3d_transposed because add_bias doesn't support 5d dimension ordering specifications."
MKL: Adding MKL-DNN support for LRN opNo description provided.
Branch 179953488push
"Refactor methods for path calculation@jart I really appreciate your advice. I've rewritten #15315 to be more ""boring"":"
Apply rc0 cherry-picksExcludes #15458.
[CMake] Extract more file listslike #14877@mrry /cc
WIP: Remove invalid merge_repeated option from CTC beam decoderThe CTC beam decoding implicitly collapses repeated characters as part of calculating the optimal path (i.e. 'AAA' will contribute probability mass through the path 'A').
[Bazel/MSVC] Fix build error since aae439c#15213
Portability fix for StrAppend#15557
update README.mdAdded whl file downloading links of Python 3.6 for Linux with CPU only and GPU both :)
"Fix adding elements to collections.deque.In some cases, word2vec_basic.py will fail at L123 and throw the following error:"
"Recognize more environments as interactive... and log to stdout in those cases, and show INFO messages by default."
"MKL: Reverting PR #14478, which breaks Inception v3 with MKL.PR #14478 #14478 (based on commit e7b69e4) removed line 276 from  #ifdef INTEL_MKL section and breaks Inception v3 with MKL. Perhaps someone meant to remove line 202?"
Fix typosfix typos
_Assert3DImage that adds a control dependency for the shape check.I noticed that the _Check3DImage was always used in exactly the same way and extracted this into its own convenience function.
Branch 179822007No description provided.
Show CCI badge in READMEFixes #7645.
"RGB<->YIQ colorspace conversionImplementation of functions for colorspace conversion RGB <-> YIQ, according to https://en.wikipedia.org/wiki/YIQ#Formulas.
This PR adds CPP functions and python wrappers in tf.image namespace"
"[XLA] Replace GCC vector extension with portable Intel SIMDMSVC does not support GCC vector extension, so replace it with Intel SIMD library. Eigen also uses Intel SIMD library to implement vector functions."
fix random_distributions_testiota is declared in <numeric>
Bug fix for example_parsing_ops_testDelay tensor allocation.
"Update Imageops DocsCreated using update_api_def.sh and tested using api_test, all tests passed."
support unknown shape for `sparse_multiclass_hing_loss`Fix #15480.
Remove quantized_matmul_op_for_hexagon_test in Windows build scriptsNo description provided.
"Use a trailing period to define floating point constant.In the example code for basic usage of tf.estimator, the array y_eval uses the constant ""-7"", when the rest of surrounding constants use trailing periods.  The corresponding code for a custom estimator has the trailing period.  (compare line 378 to line 450)"
"mpi_collectives: Refactor to fix build issuesAfter TF commit 5c7f9e3, the mpi_collectives package would no longer build
ops and kernels. This build issue caused mpi_collectives import to fail in
Python with the following error: ""NameError: Could not find operator MPISize
in dynamic library mpi_collectives.so"" (ref: issue #13875)."
"added note about weights gradient in compute_weighted_lossAdded a note concerning the gradient computation w.r.t. weights in losses.compute_weighted_loss,
see #15046."
Update API DocsUpdated api dos for SampleDistortedBoundingBox v1 and v2 to update tf.image_summary to tf.summary.image
"Fix sample_distorted_bounding_box where min_object_covered could be NoneThis fix tried to address the issue raised in #15529 where not providing min_object_covered a value will result in a ValueError. In the docstring, however, min_object_covered has been described as default to 0.1."
"Update debugger.mdWhen working thru the examples, I'm seeing just Softmax rather than softmax:Softmax.  If this is indeed correct the output image also needs to be updated."
Branch 179628764Push
Fix Golang readme installation instruction formattingThis looks like it got pasted in incorrectly
Clear the decref cache after calls to py_func to ensure no leaksFixes #15518
fix typosfix typos
"[XLA] Define LANG_CXX11 for >= VS 2015In MSVC, __cplusplus == 199711 even when /std:c++latest is set because MSVC is still not ""fully"" C++11 compliant."
[XLA] Use simplified version of TF_ASSIGN_OR_RETURN for MSVCThis simplified version also works for GCC as well actually.
[XLA] Remove unused dlfcn.h and implement sincos[f] for MSVCSplit from #15310.
[XLA] Define ssize_t for WindowsSplit from #15310.
[XLA] Hide GCC 7.1.1 workaround from MSVCSplit from #15310.
[XLA] Fix std::array initializationSplit from #15310.
"[XLA] Use tensorflow::port::Aligned{Malloc,Free}Split from #15310."
"[XLA] Explicitly include <numeric>std::accumulate comes from <numeric>, but <numeric> is not implicitly included by <algorithm> in MSVC."
[XLA] Add 'const' to custom comparatorSplit from #15310.
[XLA] Use os.path for path manipulationSplit from #15310.
bugfix: long is 32 bits on WindowsPlease avoid to use 'long' as data type.
Fix typosNo description provided.
Use BSD fnmatch on Windows#15501
"fix pooling1D dimension bugWhen data_format is channels_last, input is NWC, so we have to expand_dim(1) to make it become NHWC. Then we apply pooling on W which is the 3rd dimention."
Add ws2_32.lib to gcs_dns_cache_test's linkoptsNeeded for Windows
Update mnist.pyComment modification
"Enables 0-D indexing for Gather() in TFLiteHi,"
Add S3 logging to TensorFlow's logging systemThis fix is an attempt to help the issue raised in #15159 where there is no logging in S3 file system and it is not easy to debug to diagnose.
Branch 179578952Push
Hotfix/fix android example for focus mode continuous picture - #15487No description provided.
"fix _Pooling1D data format bugWhen data_format is channels_last, input is NWC, so we have to expand_dim(1) to make it become NHWC. Then we apply pooling on W which is the 3rd dimention."
Fix a compile error in file_block_cache_test.cctensorflow/core/platform/cloud/file_block_cache_test.cc(461): error C3493: 'block_size' cannot be implicitly captured because no default capture mode has been specified
"Fix issue building memory_stats with openclThis PR fixes #15477
This bug exists in at least 1.4, 1.5 and master branch, should I send PR for every branch?"
[XLA/tfcompile] Add Env::CreateUniqueFileName and use it in SaveGraphSplit part of tensorflow::Env::LocalTempFilename into tensorflow::Env::CreateTempFilename so that it can be used in SaveGraph.
fix typosfix typos
[WIP]  Add bazel runfiles manifest support for WindowsTo implement the ideas in:https://groups.google.com/forum/#!msg/bazel-discuss/Po8xN8dhWkI/sWPUYV9YBAAJ
Revert changes in TrainingHelper that cause \no gradient\ errorChange occured in 69c3245
BUG: fix name scope collision in `tf.layers`Fix  #13429.
Release notes and version string update.No description provided.
"Compute test accuracy in batches to avoid OOM on GPUsReported here: #136
Alternative to this for mnist_deep.py: #157"
"Compute test accuracy in batches to avoid OOM on GPUs.Reported here: #136
Alternative to this for mnist_deep.py: #157"
Add a wrapper for cc_library: tf_cc_libraryI'll replace every cc_library under //tensorflow with tf_cc_library
Disable failing testcases on windows.No description provided.
Updating MKL to the latest release.No description provided.
Branch 179464468Push
Enable api compatibility test to also run on macos.Looks like it also passes on macos when we use python 2.
Upgrade all TF base images to ubuntu 16.No description provided.
Small fix in the exampleThere's a typo in the example
Use Eigen version of the `scalar_fmod_op` for `fmod` opsIt seems that scalar_fmod_op is supported in Eigen so this fix changes scalar_fmod2_op to use Eigen version of the scalar_fmod_op.
Add customerized kernel implementation for clip_by_valueThis fix is a follow up on #13998 as it was reverted in 943201b
"Update core.pyCorrected the documentation of the Dense layer, regarding the computation performed by the layer"
Update math_ops.pyCorrected documentation of tf.reduce_mean()
call within the loopoptimize call within the loop
Fix lib_strings_str_util_test on WindowsNo description provided.
New metric: Cohen's kapparesolve #15285.
"[WIP] Add tf_copts to XLA librariesSplit from #14531
Required by #15213
Depends on #15466"
"Make get_placeholders() accessible and add exampleThis is an improvement of PR #14541.
This PR makes get_placeholders() visible in the document as tf.contrib.framework.get_placeholders and add example to the docstring."
Add an is_external arg to tf_coptsIt's for support build custom ops on Windows@meteorcloudy This is what we talked last week.
R0.7No description provided.
Simple Recurrent UnitAs per #15434 (comment).
Revert \Initial SRU Implementation (#13978)\This reverts commit e3e2ac9.
Add shape function SingleImageRandomDotStereogramsThis fix tries to address the issue raised in #15429 where there is no shape function for SingleImageRandomDotStereograms.
Fix failing test //tensorflow/python:function_test@benoitsteiner It seems //tensorflow/python:function_test is failing with my last commit from #13998 (sorry about that).
Add common error documentationSee #15258
"Fix the CODEOWNERS file syntaxNote: even though this file is currently disabled, it still seems worth fixing the syntax in case it's enabled again in the future."
MKL: Fixes for concat and elementwise opsFixes concat for Svd test cases and disable 4 elementwise ops to get SSG/VGG-16 model to work with MKL DNN. Disabled tanh due to differences between Tensorflow and DNN primitives.
New rolling window batch operation for tf.data.Dataset #15044This is a new feature
Fix tflite models.md titleNo description provided.
MKL: Adding missing reorders in ReLU and AddNCommit to add missing reorder primitive in ReLU and AddN operators.
Bump the eigen dependency version.Fixes #12052
"DOCS: Update the description of the fused parameter.Update the description of layers.batch_normalization and contrib.layers.python.layers.batch_norm to reflect the fact that fused=None is equivalent to fused=True. In fact, both functions check at the beginning if fused is None, and if yes they set it to True."
Add complex64 and complex128 support for ApplyAdadelta kernelThis fix tries to address the issue raised in #13521 where the complex64 and complex128 support for ApplyAdadelta is missing. The test cases have also been updated.
Fix bug: leaky relu supports float64Fix #15391.
"Fix typo of tf.abs docstringChange ""'"", which causes incorrect highlight, to ""`"""
Update C API test data comparison for s390xBase64 encode/decode is not endian-dependent. The hash passed to Base64 will generate different string on big-endian platform. Correcting the test data comparison for s390x architecture.
Fix api usage in examples of GANNo description provided.
"Silence warning of graph_replaceThis PR fixes #8661
The warning is caused by access to deprecated graph key VARIABLES."
"CMake: optionally link to ZLIB as systemlib / shared objects.If the user has ZLIB (and devel pkg) installed at the system
and the user wants to keep using that ZLIB for tensorflow,
the cmake option ""-Dsystemlib_ZLIB=ON"" will allow to do so."
"CMake: fix -fPIC control.if / endif cannot be stated inside.
Use tensorflow_ENABLE_POSITION_INDEPENDENT_CODE itself
to express ON or OFF; it is already set as ON or OFF by
tensorflow/contrib/cmake/CMakeLists.txt"
"Only emit PTX code for the most recent CUDA compute architectureWhen there is no gap in the compute architectures you are compiling
against, there is no point in generating PTX for all architectures but
the latest."
Fix PEP8This PR fixes pep8-related issues.
Add description for new PR workflow.No description provided.
Instead of \option\ use \set\ to define non-bool cmake build args.No description provided.
Clean bazel `all_files` targetsBroken out of #15166
"fix that remove_nodes drops input suffixesThe transform remove_nodes didn't take input suffixes into consideration, and might make mistakes if the removed node used not :0 but :1."
Fix broken image link in TensorFlow Lite's docsI fixed the link of image in the same way as other documents in tensorflow/tensorflow/docs_src/.
Branch 178996911Improvement over last PR in that we rolled back a break in the CPU tests
"Dockerfile.devel-gpu: optimize the size of the generated imageThe image is 2.94GB, down from 4.87GB."
CPU: Support for DT_STRING type in ScatterNdThe PR is proposed to fix #15321.
"[Go]: Make op wrapper generation more robust.Jenkins, test this please"
Branch 178965261Fixed a minor merge conflict in tensorflow/core/platform/cloud/gcs_dns_cache.cc
Revert \Add batch support for various image_ops (#14854)\This reverts commit 20aa9e0.
Benchmarks for flipping and random flipping@martinwicke fyi
Update location for x86_64 android buildSee #15345
Fix broken link in tensorflow lite readmeNo description provided.
added crucial documentation on SELU activationUsers extrememly frequently forget to use the correct initialization with SELUs. Added notes to documentation to use correct initialization wherever possible.
[XLA/tfcompile] Implement mkstemps for MSVCmkstemps used in SaveGraph is not available on Windows.
"Fix typosThis PR fixes some typos: transfered, betweeen, forwared, occuring, occured, varibale, succesfully, and depedency."
Fix issues in doc `tf.Placeholder` should be `tf.placeholder`This fix fixes issues in the doc (data_feeder.py) where tf.Placeholder should be tf.placeholder
Explicitly specify CUDA and CUDNN versionsA workaround to the base problem causing #15291
"Make GANEstimator global_step_inc dependent on gen and dis lossesThis solves a non-deterministic problem that prevents to use global_step in tf.cond during training.
See also #15271 (comment)"
Exclude tests from contrib_py@gunan @mrry Don't you think?
Refactor methods for path calculationThis allows other scripts to access this logic.@gunan This is what I meant.
Fixing typoNo description provided.
[XLA/tfcompile] Various fixes for MSVC Part 1This is the initial work to solve #15213. More changes will come in other PRs.
"Correct channels_first format in 1d_pooling for tf.layersThe code was equivalent in the case of self.data_format == 'channels_last' or self.data_format == 'channels_first'.
My modifications fix it when data_format == 'channels_first'."
improve compute high rank hessiansfix possible compute high rank hessians
Setting proper sonames on LinuxSetting proper soname prevents from linking with absolute path when using cmake.
"Removing unused variable \b\ in EventsWriter from events_writer_test.pyThere was no use of ""b"" I have found so far in codebase. However, ""foo"" was a proper tag."
Fix initialization of tf.contrib.layers.spatial_softmax temperatureIt's now possible to initialize a trainable temperature with values other than 1
Fix #15297: bfloat16 is unsigned on Windows#15297
Removing extra \d\ after close() method in SessionTest.javaNo description provided.
Documentation - Fixing 'if' spellingFixing 'if' spelling
Model Average OptimizerI have implemented model average optimizer and open a new pr since the original one is closed.
Parameterize tensorflow CUDA and cudnn versions in cmake build.Also upgrade the defaults to cuda9 and cudnn 7.
"Add name scope to tf.imageThis PR fixes #1560
I searched through the tf.image API list and found the following APIs need to add name scope"
"Replace loop iteration with `chip`In unique_op.cc, the ouput tensor was generated through loop iteration. It seems that this could be improved through Eigen's chip."
"Use base_dtype for self._dtype in tf.layersThis avoids mismatch dtype (ref vs no_ref) when using variables as inputs to a layer.
See #15262"
Branch 178689056No description provided.
"Fix minor typo in CUDNN_VERSION checkEffectively enables CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED in
CudnnSupport::GetConvolveBackwardFilterAlgorithms() for cuDNN v5.1."
Fixed memory_stats_ops_testAdded explicit dependency to avoid matrix free prior to stats op execution.
Remove redundant dependencies.Looks like they got added back during merge. #15136
"Minor optimization of conv_ops.If data_format is NCHW, and the computation is done on the GPU, the temporary tensor transformed_output is not needed. One can use directly the output tensor. This
leaves more memory for the cudnn scratch allocator, possibly improving performance
of the convolution algorithm."
[XLA] Make the client_test able to be disabled using a manifest fileThis change allows these 3 tests in the XLA ClientTest to be selectively disabled using the manifest mechanism.
[XLA] Fix OS/X compile error with std::transform and  std::addressofI don't know if this has been flagged up elsewhere...
"[XLA] Allow components in the plugins directory to create devicesDue to a change in the visibility of sub-components of the XLA JIT, the Graphcore device was unable to use the target needed for creating devices."
Fix issue #15269A possible solution to fix issue #15269.
correct the misspell of QuantizeNo description provided.
"Test remove __force_inline [DO NOT MERGE]This is only a test for fixing #10521, please don't merge this PR."
"Support empty input tensor for some ops (fix #14657)Cudnn kernels doesn't work for empty input tensors.
This PR adds support for empty input tensor for FusedBatchNorm,FusedBatchNormGrad,Conv2DBackpropFilter, and cudnn pooling. (fix #14657)"
Fix typoNo description provided.
"Add int64 support for BroadcastArgs and BroadcastGradientArgsIn array_ops.cc, both int32 and int64 are expected to be supported for BroadcastArgs and BroadcastGradientArgs. However, this was not the case as only int32 kernel are registered even though T is part of the TypeConstraint."
"include _solib_* in pip packageSee issue #15252 for detail, also should fixes issue #13711.
The problem is that when compile tensorflow with --config=mkl on virtual machines, mkl libraries won't be included because they locate under _solib_local, however, setup.py only includes _solib_k8."
fix typoNo description provided.
"Instead of python, use PYTHON_BIN_PATH in pip.sh.No description provided."
Replace `variables.get_global_step()` use `training_util.get_global_step()`No description provided.
add c++ gradient for op: PowFix  #15239.
Switched optimization mode for Pi builds to avoid internal compiler errorThe nightly Pi3 builds have been failing with:
"Add support for explicit broadcasting in TensorFlowThis fix tries to adds support for explicit broadcasting in TensorFlow, as was suggested in #14509. This fix adds the op of tf.broadcast_to, which is equivalent to the numpy.broadcast_to in numpy."
Fix static shape inference for keras.layers.LSTMfix #15165
fix typoNo description provided.
[XLA] Fix another XLA/tfcompile compile error on OSXThis fixes issue #15196 (though that was accidentally closed)
MKL: Fixing MKL-DNN convolution filter propagation to backpropAdded code to propagate the 2D convolution filter to the backward pass.
Also install libssl-dev to make pip/py3.6 work properly.No description provided.
Update .gitignoreNo description provided.
Add TensorFlow support for tf.repeat (equivalent to np.repeat)This fix tries to address the feature request proposed in #8246 where there was no equivalent of numpy.repeat in TensorFlow.
pip.sh: unify the way virtualenv is invokedbetween python3.6 and the other versions
"Delete Dockerfile.devel-gpu-cuda9-cudnn7our default dockerfiles now use cuda9-cudnn7.
No need for this file anymore."
Create test.txtNo description provided.
"Remove extra param of concatenation in nnapi/NeuralNetworksShim.hThe param specifying activation is not documented in this. It is actually needed in 8.1 Preview MR1, but not needed anymore in MR2."
1.4.1 Release UpdatesNo description provided.
Fix tag in source_remote_test: no_mac --> nomacNo description provided.
"[MSVC] Add tensorflow::ops prefix for {Read,Write}FileReadFile and WriteFile collide with the functions in windows.h. Tell MSVC we want Tensorflow's ones."
Fix a typo in estimators.mdA small typo similarily -> similarly
Training test fixNo description provided.
Branch 178260923No description provided.
"Fix ios_makefile.inc for TFLite iOS demo appIt seems broken when merging change in b2db981.
The file was formatted with an invalid way."
fix #15188 replaced isnan with std::isnan to avoid build errorNo description provided.
Cherrypicks for 1.4.1No description provided.
Fix assert_called error on Python3by replacing it with assertTrue(....called)
"[XLA] Add fast path cases for common scatter and gather operationsThis change checks if the indices vector passed to a scatter or gather operation is a constant, and does a fast-path operation when it is filled with a zero-based incrementing set."
Add some sparse operatorsNo description provided.
GPU: Add Complex kernel for tf.exp()Fix #15103.
"Add un-fed placeholder warning to negative-dimension errorSometimes a user runs a tensor and forgets to initialize one of its placeholders in feed_dict. If that placeholder has a shape that includes None, the None gets converted to -1 and rejected at the C++ level, resulting in confusing error messages (each word a separate link). This problem also appears in #11371."
"Use argmax output_type argument instead of cast opargmax supports int32 output type since e3d99f4, so use it instead of cast op inside those helpers."
"fix a problem in tflite custom_operators.mds/SinResize/SinPrepare/
Obviously, it should be SinPrepare instead of SinResize."
Branch 178185697No description provided.
Fix for #12537I have built the fix on x86 linux no gpu and it's working.
"Go: Don't require -std=c99 for the cgo code.This should fix the error:
github.com/tensorflow/tensorflow/tensorflow/go/graph.go:31:3: error:
'for' loop initial declarations are only allowed in C99 mode
//  for (int i = 0; i < num_shapes; i++) {
^"
DO NOT SUBMIT: Temporarily disable go:testcontext: b/70154286
"Adding reading op for hadoop sequence file format (very basic version though).This CL allows tensorflow to be able to read tf.Example stored in Hadoop sequence file, which is the one of the well supported output format in the Hadoop eco system (comparing to recordio or sstable)."
"Fix some Bash issuesArgument mixes string and array. Use * or separate argument.
Don't use $ on the left side of assignments."
[CMake] Add bazel tests for python file listsProgressing #10296
"minor docs addition to fixed_size_partitionerClarifying whether fixed_size_partitioner is equivalent to partition_strategy='div' or ='mod', as described in https://www.tensorflow.org/api_docs/python/tf/nn/embedding_lookup (to hopefully help use downstream with embedding_lookup)."
"Fix problem with camera on Android TVFor a scenario of using a usb external camera, we should use Camera API 2 according to the definition:
Camera1 API is framework API that had been created to support HALv1.x
Camera2 API is a new API that is meant for HALv3.x."
Add uint32 and uint64 kernel support for `Invert`This fix adds uint32 and uint64 kernel support for Invert.
"summary_image_op_test_fixed_on_ppc64leHi @gunan ,
As we discussed here #12325 , I have created this PR to fix summary_image_op_test on ppc64le."
Allow keras applications to load weights from arbitrary pathThis PR allows tensorflow.python.keras.applications to load pretrained weights from an arbitrary filepath (rather than only ~/.keras/models).  It is the parallel PR to keras-team/keras#8637 which was merged by @fchollet on November 30.
MKL: Revving mkl-dnn to include all changes before 2017-11-20.This commit will pull the latest changes from the mkl-dnn tree.
"Support --config=monolithic in tf.sysconfig.get_link_flags()Currently, tf.sysconfig.get_link_flags() always adds -ltensorflow_framework.  With this change, it would check whether TensorFlow was built with --config=monolithic."
Document tf-coreml converter in lite/README.mdNo description provided.
"Solved for MNIST file downloading problemA lot of folks (#6742, #8126, #8134,#8116) were having trouble regarding this issue. Even I faced it today while writing the MNIST code as the mnist.py was unable to connect with the source url. I downloaded the files and pasted it in the folder containing the code and made some changes in the code which solves the need for connecting it to the website. Hope so this works out."
"Revert \Speed up safe_strtod and safe_strtof functions by using doubl…e-conversion library (#12102)"""
Add decode_compressed supportThis fix tries to address the issue raised in #14887 to add decode_compressed support.
Synchronize threads for safe outputNo description provided.
"OS X ld does not have icfwhen using tflite_linkopts_unstripped() or tflite_linkopts() to build stuff, such as #15095, on OS X, identical code folding flag is not supported."
"Improve the Windows Bazel buildIn this PR, we are making following improvements:"
Fix typo*fix typo
"improve py_funcSee #14448
Improved py_func to accept nested structures as input and as output like in tf.data.Dataset.form_generator"
"Fix the iOS makefile on tensorflow lite.Just make it right.
Ref: #15074"
"variables.get_global_step() is deprecatedvariables.get_global_step() is deprecated, use training_util.get_global_step() instead"
"add a new operator :`sparse_tile_like interface`Hi, we are doing some research on graph networks which is very necessary for us to use sparse operators. we think there might be someone else who has the same demands will join us. Here we would continue to update those operators. Thanks."
Merge pull request #1 from tensorflow/masterFetch from upstream
"Add a setter method variable_scope.auto_reuse_variables() to enable AUTO_REUSECurrently we can enable variable reuse in a scope with variable_scope.reuse_variables(). However, there is no handy method to enable auto reuse yet. This PR adds this functionality."
Fix link to BUILD file in android readme.Simple syntax error.
"MKL: Dockerfile Locked to Broadwell/AVX2 arch to work around Eigen Issues with AVX512Eigen currently has issues when Tensorflow is compiled with -march=skylake, or the container is build on a skylake system with -march=native. The container is now compiled with -march=broadwell, which adds AVX2 instructions, which are supported on Skylake, Haswell, Broadwell, KNL and KNM architectures."
"Update docs for `tf.contrib.losses` -> `tf.losses`This fix updates the docs in extend/estimators.md and changes the reference from tf.contrib.losses to tf.losses, as the former has been deprecated."
Branch 177809511No description provided.
[CMake] Re-Enable includeIssue #3996 (and referenced tickets) are already fixed.
Fixing “activate the Virtualenv”in 窶廬nstalling TensorFlow on macOS窶. Probably needs to be fixed for Linux as well.
"add label_image for tflitelabel_image for TensorFlow Lite is inspired by TensorFlow'slabel_image, a command line app to load and run classifier
models."
Fix typoNo description provided.
Add an argument for additional linkopts to py_wrappers ruleThis will help a repository that uses tensorflow as a submoudle to use existing tensorflow bazel rules in tensorflow.bzl
"DOC: Fix documentation for dataset.mdThe code image = tf.decode_jpeg(parsed[""image_data""]) in 738 lines is incorrect. It should be tf.image.decode_jpeg instead of tf.decode_jpeg."
"Update deprecated get_global_step in exampleWARNING:tensorflow:From /usr/local/lib/python2.7/dist-packages/tensorflow/contrib/tensor_forest/client/random_forest.py:193: get_global_step (from tensorflow.contrib.framework.python.ops.variables) is deprecated and will be removed in a future version. Instructions for updating: Please switch to tf.train.get_global_step
thrown when running random_forest_mnist.py"
Add S3 to the list of implemented file systems in docThis fix adds S3 to the list of implemented file systems in doc.
DOC: Fix documentation for inverse_time_decay.Fix the example in the documentation of inverse_time_decay and correct the pseudo-code formula.
"DOC: underline that tf.Print behaves like tf.identityAs @alextp suggested in #14788, fix the docstring: print should have the same behavior as identity (and it does)"
"tf.Print supports VariableCF #14788, #14874"
Update AWS C++ SDK to 1.3.15This fix tries to address the issue raised in #15066 where AWS C++ SDK version was not high enough to support ECS.
Update 4_convolutions.ipynbNo description provided.
Update 4_convolutions.ipynbNo description provided.
Update 4_convolutions.ipynbNo description provided.
update Android libsFor android sample:
Increase test size to prevent timeoutNo description provided.
Branch 177236996No description provided.
[DO NOT SUBMIT] TESTNo description provided.
"Only install enum34 on Python <3.4 versions (Take 2)Python 3.6 sometimes has issues with enum34 because the standard library
relies on enum features not in enum34 (seehttps://bitbucket.org/stoneleaf/enum34/issues/19/enum34-isnt-compatible-with-python-36
for more details)."
"Support \causal\ padding in tf.layers.convolutional.Conv1DBecause #15000 is closed by mistake, hence the PR is reopened to resolve #14933 issue."
Fix error message of WhereOpCPUNo description provided.
Revert \Arbitrary dim for slice (#11140)\This reverts commit 8011eda.
Branch 177545934No description provided.
"Fix a BUILD file bug in `tensorflow/contrib/cloud/BUILD`In tensorflow/contrib/cloud, invoking bigquery_reader_ops_test will fail."
update label_image.pyCan one of the admins verify this patch?
add link to decode_bmpadd link to decode_bmp to image api guide
Fix deprecated functiontf.contrib.framework.get_or_create_global_step() -> tf.train.get_or_create_global_step()
Introduce tf_http_archiveI decided to give #14813 another try.
"Update freeze_graph.pyIf there are spaces in multiple parameters, a parameter is not recognized.
ex) ""hypothesis, cost"" (X)  => ""hypothesis,cost"" (O)"
Add additional linkopts argument to tf_custom_op_library.This will help a repository that uses tensorflow as a submoudle to use existing tensorflow bazel rules in tensorflow.bzl
Fix dataset tests broken on HEAD@gunan PTAL
Fix export_test failure as test wasn't updated@gunan PTAL
Document iOS demo app in TF Lite ReadmeSee the rendered markdown here: https://github.com/miaout17/tensorflow/blob/ios-example-readme/tensorflow/contrib/lite/README.md#ios-demo-app
Change bazel-mirror to mirror.bazelNo description provided.
"Make build rule for //tensorflow/contrib/lite/tools:benchmark_modelResolve issue #14581
Note that this benchmark_model.cc is not completed yet. It doesn't
load and models."
WIP: Support \causal\ padding in tf.layers.convolutional.Conv1DFix #14933.
fix clip weights testsusing learning rate 1; variable value after the first update becomes zero resulting in failed tests.
"Add broadcasting for rank 6 TensorsAs per @aselle's comment in #14924, this bumps up the broadcasting dimension limit of Tensors from 5 to 6."
Update input_fn.mdNo description provided.
"[Go] Adds Operations() method to GraphThere is currently no way to list all of the operations in a graph
from the go api. This patch ads an Operations() method to retrieve the
list using the existing TF_GraphNextOperation c api. The graph_test
was modified to include testing this new method."
"Wrong code in programmer's guide in Variable SectionIn Programmer's guide Variable section
窶ｨtheﾂ assignmentﾂ variable is aﾂ tf.Tensorﾂ and should useﾂ assignment.op.run() instead of assignment.run()
Otherwise, this code would produce an error:"
improvement in the tf.nn.raw_rnn documentationPR for #14963. This exposes the advanced use-case of the raw_rnn where the user can project the cell_output into logits as a part of the loop_fn computations. Earlier it mislead the users that it is mandatory for the loop_fn to return emit_output such that it matches the cell.output_size.
Add `AWS_REGION` env for S3 in TensorFlowThis fix tries to address the issue raised in #14951 where the region can only be specified with non-common S3_REGION environment variables.
"Switch over to max_pool_v2 in PythonThis fix is a follow up to #11875 so that MaxPool in Python use v2 version. As 11875 has been merged several months ago, this fix conforms to the deprecation policy."
Added ability to skip rescan bottleneksNo description provided.
Bump the GRPC version TF depends on.To help fix #14039
improved estimator.export_savedmodel exceptionNo description provided.
"Wrong Code in example in Programmer's guideIn Programmer's guide Variable section
the assignment variable is a tf.Tensor and should use .eval() instead of  .run()"
"Add missing <stdio.h> includeAdd missing <stdio.h> include in tensorflow/contrib/lite/kernels/op_macros.h. Otherwise, it fails to find stderr."
Support passing layer instances to produce attentional hidden statesThis PR closes #14972.
Fix Wrong Rendering of Code ExampleCode example was being rendered as plain text. This commit fixes it.
"Fix decode_bmp crash by adding length check before reading the data in bufferThis fix tries to address the issue raised in #14959 where the bmp content length was not checked before reading the buffer. As a result, decode_bmp might trigger a crash if the content of bmp is incomplete."
Clarifying checkpoint is not a fileI would like to clarify checkpoint is not a file. I also changed some wording which may lead readers to use a physical file name in their code.
"Make tf_upgrade.py dependency freeNothing else references the ast_edits, so it will make tf_upgrade.py much
easier to use if it's just absorbed. This change fixes #11217 where a whole
bunch of folks encountered difficulties for this very reason."
"add support for quantized ops on windowsQuantized ops support on windows. Added some simple python unit test to make sure it works.
Gotcha: I need to use the latest version of gemmlowp in gemmlowp.cmake which is not on mirror.bazel.build so I use github.com directly for now.
This should provide the same functionality as tf on linux. Performance could be better because msvc can't make use of the inline asm in gemmlowp (compiling gemmlowp with clang would show much better results)."
"Tensor roll op implementationCloses #10761
Added a tf.manip.roll op that works similarly to numpy's np.roll. This was a feature requested in #10761 and was marked as contributions welcome."
Branch 177191521No description provided.
Add user friendly error checking on download_dependencies.sh@tensorflow-jenkins test this please
"FreeBSD compatibilityAfter 1.2.0 tensorflow broke on FreeBSD, provided changes makes it build again."
"Update datasets.mdSpecifically, I changed Iterator into tf.data.Iterator for people who read programming guide of Tensorflow"
Merge pull request #1 from tensorflow/masterjust merge
softmax_cross_entropy: Improve docstringImprove docstring of softmax_cross_entropy.
"Variable size multi-label candidate sampling.A fix that adresses the following issue #12968.
Makes candidate sampling ops accept a tensor instead of an int per batch as a num_true parameter. Interface change (switching the .attr to .input). I left out one check in ComputeAccidentalHits - .SetShapeFn(), and would be open to any suggestion on how to fix that."
Fix a typo in commentits cached -> it's cached
Branch 176737730No description provided.
Adapt identity initializer API to other initializers.This API extension is completely backwards compatible and supports consistency.
Branch 176732156No description provided.
Branch 176791620No description provided.
Branch 177033313No description provided.
golang: ~15x speedup for decodeTensor()Make decodeTensor() faster by running binary.Read() for the whole slice in last dimension.
add extra document to parameter:num_epochsAdd extra documents to DatasetDataProvider. I forget to call  tf.local_variables_initializer when I set num_epochs to 1. I trace source code to find out that I need to do that.  I think put some extra documentation will help others to avoid this mistake.
Replace sys.maxint with sys.maxsize in learning.pyuse sys.maxsize because sys.maxint doesn't exist in Python 3
TensorBoard Modifications for Word2Vec ExampleTensorBoard modifications are added to Word2Vec example for visualizing the loss graphic and embeddings with proper words in TensorBoard.
Create new_fileNo description provided.
"Fix typosmemory_intialized -> memory_initialized
set_memory_intialized -> set_memory_initialized"
fix typosintialized -> initialized
Update tf_core_framework.cmakeTo resolve this issue
Add `tf.unravel_index` as an equivalent of `np.unravel_index`This fix tries to address the issue raised in #2075 where there was no implementation of  tf.unravel_index.
"[XLA] FIX XLA/tfcompile on OSX. #if Guard AVX, SSE and NEON instructionsThis fixes XLA / tfcompile on OSX."
R1.4No description provided.
"Add collection parameter into built-in runnersTo use built-in queue runners in fine-grained manner within a single graph,
each thread shouled be managed in different collection, not default collection."
"Add uint32 and uint64 support for `bitwise_and/or/xor`In tensorflow/core/ops/bitwise_ops.cc, uint32 and uint64 have been enabled for bitwise operations and/or/xor/left_shift/right_shift."
Format AUTHORS fileNo description provided.
"Restore CONTRIBUTORS fileThis file got lost in 2ecd0e4 and was since not restored.
Also, I populated it using graphs/contributors"
"Some PATH typo : no `train_dir` in tutorialThis file uses train_dir. But in code file, there is no train_dir  anymore, it should be replaced with log_dir input_data_dir and checkpoint_file respectively"
[CMake] Extract list of python modulesProgressing #10296@drpngx FYI
tf.Print converts Variable to mutable TensorThe PR is proposed to resolve #14788.
Add DT_HALF support for SpaceToDepth on GPUThis fix tries to address the issue raised in #14871 where there were no DT_HALF support for SpaceToDepth on GPU.
fix overpadding in MixtureSameFamilyThis fixes pad_mix_dims when mixture distribution does not have scalar batch size -- previous version would add too many dimensions
fix overpadding in MixtureSameFamilyThis fixes pad_mix_dims when mixture distribution does not have scalar batch size -- previous version would add too many dimensions
"change bazel-mirror to mirror.bazelhi i'm back , using only one email."
Fix bug: divide by zero in embedding_lookup_sparseFix #14851
change bazel-mirror to mirror.bazelthis time i added email
"change bazel-mirror to mirror.bazelthank to @jart ,  for letting me know how to do pull req.~"
C++ gradient for SelectFix #14845
min_quantize lib and command linea quantize/obfuscate lib
Enable GCS filesystem for WindowsNo description provided.
"Add batch support for various image_opsWorking on #8926
I used #7369 as a guide for my work here."
Automate download and unzip of the model fileTESTING
TFLite: Add unsupported op Equal and ExpandDimsNo description provided.
Add label_wav_dir.pyPredicts all wave files in a directory.
Branch 176796142No description provided.
Revert \Only install enum34 on Python <3.4 versions\Reverts #14730 to address #14779
"Update .gitignore files for Android StudioWithout these, Git shows lots of noisy build/IDE config files."
Change pathchange path
Typo fixTypo fix : uniqified -> uniquified
Typo fixingtypo fixed : libaries -> libraries
Fix missing __sincos in XLA on macOSBuilding XLA on macOS failed due to missing __sincos and __sincosf.
"Update datasets.mdThere is omission of tf.data in front of Iterator.from_structure(~). I found it, When I read and tested"
Fix of issue #10479Fixes issue #10479
fixed bug that Dropout support_masking gets reset to Falsefix #14819.
TFlite readme.md add mobilenet frozen_graph.pb linkadd mobilenet frozen_graph.pb link
[DONOTMERGE] Debug windows GPU build.No description provided.
make the link be more perfectNo description provided.
1ERROR PR
"Fix several potential memory leaksThis fix fixes several potential memory leaks, mostly caused by error return without proper deleting."
Branch 176709725No description provided.
"Introduce tf_http_archiveThis new repository rule consolidates patched_http_archive,
temp_workaround_http_archive, http_archive, and new_http_archive."
Also ignore no_oss tags in windows builds.No description provided.
"Remove useless statements in Dockerfiles'CMD [""/bin/bash""]' is not useful since it's already provided by the base ubuntu image.
'RUN [""/bin/bash""]' looks like a typo and just creates an extra empty layer."
Branch 176676125No description provided.
#NAME?
TFLite: Add unsupported op Equal and ExpandDimsNo description provided.
"Remove `non-fused` version of `adjust_saturation` as GPU kernel already existsIn the existing implementation for adjust_saturation the non-fused version was still in place. As the non-fused is for non-GPU support of adjust_saturation and GPU kernel already exists now (See commit 25c4f27#diff-b53c223158b7c4fd248ef581da6566c2), it makes sense to remove the non-fused version."
modified convolution documentfix #14027.
"TFLite: get closer to build with Bazel on WindowsBazel cannot yet build TensorFlow Lite on Windows,
but this commit gets us closer."
"Fix nccl.BUILD on WindowsBazel doesn't allow a random file name in linkopts attribute, so use -DEFAULTLIB: option to specify ws2_32.lib"
"Add templated functions for `safe_strto[f|d|i32|i64|u32|u64]`While working on #14330 I noticed that there is no templated functions for safe_strto[f|d|i32|i64|u32|u64]. As a result, an additional wrapper has to be created in different places to apply the typename in a templated class or function."
"Update layers pull requestI have created a new pull request by updating the unit test cases with reference to my previous pull request#13829 .
I have already updated layers.py initially by checking for beta in the if condition.
The initial pull request was raised in accordance with the issue#11673 ."
"Improve variance_scaling_initializer descriptionAdded mention of the ""MRSA initialization"" alias. This name has been mentioned in multiple publications. Mentioning it in the docs will make this initializer easier to find."
"Load boundaries array into shared memory before hand for `bucketize`This fix is a follow up to #13922. This fix loads boundaries array into shared memory before each thread, in order to improve performance for bucketize op."
Upgrade cuda to 9 and cudnn version to 7.No description provided.
Update Eigen hash for fix of fp16 predux bugAttention: @benoitsteiner and @zheng-xq
Fixed typo in usage docstringChanged tf.SyncReplicasOptimizer to tf.train.SyncReplicasOptimizer.
Revert \Fixed typo in usage docstring\Reverts #14765
Fixed typo in usage docstringChanged tf.SyncReplicasOptimizer to tf.train.SyncReplicasOptimizer in usage example.
MKL: Adding MKL-DNN graph pass implementationNo description provided.
fix: tf.contrib.slim.nets.vgg will not workinit.py of slim module don't import nets module. so
"change bazel-mirror to mirror.bazelgrep -v bazel-mirror:
do you mean to not use mirror to download ?"
update how_tos/reading_data to use Dataset APISince the Dataset API moved from .contrib.data into .data (core) update the MNIST example to use Dataset over queues.
"[XLA] Use the specific float list rather than a hard coded listThis change makes the test use the list of supported types for the backend under test, rather than a hard coded list."
"change bazel-mirror to mirror.bazelgrep -v bazel-mirror:
do you mean to not use mirror to download ?"
execute command properly in bash.exe on windowsOn windows using bazel:
Have tf-nightly depend on tb-nightlyTensorBoard now has an automated nightly release process!
Add str(Label(...)) to bazel macrosThis is a similar pull request to
"Add str(Label(...)) to bazel macrosWhen using tensorflow as a submodule in bazel, importing bazel rules from tensorflow.bzl is not working.
The main reason is that some of the dependencies are hard coded instead of using str(Label(...)) and this makes bazel to generate dependencies like"
R1.1No description provided.
Fixing download_dependencies.sh bugs for generating TFLite iOS exmaplesThis is the 2nd try for #14631
"Only install enum34 on Python <3.4 versionsPython 3.6 sometimes has issues with enum34 because the standard library
relies on enum features not in enum34 (seehttps://bitbucket.org/stoneleaf/enum34/issues/19/enum34-isnt-compatible-with-python-36
for more details)."
Edit mnist data read in to match tutorialThe accompanying tutorial (https://www.tensorflow.org/get_started/mnist/beginners) and this file did not match. The proposed code change was copied from the tutorial and confirmed to run correctly.
New Feature: #12686 Softmaxcrossentropywithlogits gradient functionThe test case is failing. Submitting a PR for review as I am unable to debug what's wrong with the code. I'll continue debugging but submitting the PR in the interim.
Allow GANEstimator get_hooks_fn to be set manuallyNo description provided.
Add a way to provide target nodes in AndroidThis is required when running some models as a step for initializing the graph etc.
"Add back whitespaceWhen tfcompile_flags was changed so it could be not just a string but also a list of strings, the initial white space was erroneously removed (probably a misunderstanding of str.join) meaning --out_object= would consume the first flag."
"Update docs for using Docker with GPU, with nvidia-docker2Update docs to reflect the current version of nvidia-docker (version 2)."
Change ndimage.imread to imageio.imread.Scipy will not support imread from 1.0.0 as its document says:https://docs.scipy.org/doc/scipy-1.0.0/reference/generated/scipy.misc.imread.html
"Include _solib_local for MKL-DNN libs_solib_local/libmklml_intel.so is not getting included in the package.build_pip_package.sh has been updated to copy *solib* instead of just _solib_k8, so just update setup.py to include it.
See #13711 for details."
"Fix docstring of variable_scope()Add missing ""```"" to docstring."
fix misspellingsFixed some typos. :)
"[CMake] Don't build tests for RE2Issue #14691 shows a build error on Windows in the RE2 tests. Since we do not run these tests, and they seem to be causing problems on some platforms, do not build them as part of the TensorFlow build."
Update CONTRIBUTING.mdAdd Objective-C Style guide to list.
added my name as a contributorsNo description provided.
Added a check for a macro to specify that an ARM device is not mobileI've copied the existing mechanism for Raspberry Pi to allow other ARM platforms to be designated as not a mobile platform and thus get the full feature set.
Update AUTHORSNo description provided.
"Fix pip package tests.They depend on a testonly package, so they break pip test runs for
nightly and releases."
MKL: Adding MKL-DNN Reshape opNo description provided.
MKL: Adding MKL-DNN AddN opNo description provided.
MKL: Adding MKL-DNN Identity opNo description provided.
MKL: Adding MKL-DNN pooling opsNo description provided.
"Fix shape inference for bitwise ops with broadcastingThis fix tries to address the issue raised in #14646 where shape inference for bitwise ops is incorrect with broadcasting.
As was specified in #14646, in the following"
Avoid using illegal characters in checkpoint file names in normalizat…ion_test.
Fix parameter pack expansion in ptr_util.No description provided.
"Fixed bug in code within programmer's guide markdown docs for Variabl…es. Had a call to {tensor}.run() method, but Tensor instances have no run() method, switched to eval() instead."
Added mode to input_fn argumentAnd modified existing tests to include the mode argument.
Revert \Add missing conv1d in `tf.contrib.layers`\Reverts #14513
`mean_relative_error` supports complex labelFix #14658
"Use cub::ReduceByKey to count partition indicesThis implements a suggestion made by @ekelsen in the comments for #13905.
It replaces the previously custom-made counting method, and is likely more efficient."
typo fixedIt appears that you are missing a comma after the introductory phrase In the last few years. Consider adding a comma
little_modifyModify the list '[' ']' to the tuple '(' ')'
"Use the known fixed size of the tensor array instead of the dynamic oneFor compatibility with XLA:  The tensorarray.size() operator produces graphs which are not caompatible with XLA.  The size of the tensor array is known explicitly, so by using that size we can avoid the incompatibility."
[XLA] Fix build issue with TensorShape constructorThe TensorShape requires a default provided constructor.  This change uses the same style of providing that as is seen elsewhere in the code.
Move ptr_util to core/util.Break the dependency of core onto XLA.
[Java] Add support for shape list attributesThis allows passing a list of shapes as an attribute to an operation. Some operation wrappers cannot be generated without it.
Fix up link to ios.md in docs.Fix up the broken link so it points at the ios docs correctly instead of 404
Branch 176031889No description provided.
"Add LICENSES to gitignore for iOS exampleUpdate gitignore file for ios to cover the license files that get
installed following the install instructions."
"macOS doesn't have wgetMake building easier on macOS by using curl instead of wget
because wget isn't part of macOS, and wget installed from
brew has trouble resolving certificates appropriately."
Disable for generated_examples_zip_test in open-sourceNo description provided.
1.4.1 patch release update version stringNo description provided.
"Fixing download_dependencies.sh bugs for generating TFLite iOS exmaples.Root cause: The script downloads files for building TFLite for iOS
example. It writes to downloads/ directory and conflicts with the
visibility rule ""**/*"" in BUILD"
Branch 175983704No description provided.
Simplify importsNo description provided.
R1.4No description provided.
Implement LoggingAsync for GRPC Worker ServicesThis allow RecvTensor events to show up in StepStats and in turn in Chrome Tracing format.
Fix the mac buildThis test times out at 300 seconds. It takes almost exactly 300 seconds.
[Speech commands] Add `num_classes=label_count` when constructing the… confusion matrix
Add compression support for TextLineReaderThis fix tries to address the issue raised in #14593 where it was not possible to process compressed TextLineReader.
upgrade minSdkVersion to 21Fix all 56 lint errors about NewApi: Calling new methods on older versions
Disable slice_op_test.No description provided.
add photo selection and some changes in ios simple appadd photo selection and image preview for tensorflow lite simple app
"iOS Camera example for TensorFlow Lite.The code is derived from the TensorFlow mobile camera example in
tensorflow/tensorflow/examples/ios/camera/."
typo: s/cesnus/census/No description provided.
Fix MPI compilationFixes #14558  introduced by 2ce0b91
Changed ffmpeg verbosity semanticsThe tf.contrib.ffmpeg.decode_* and tf.contrib.ffmpeg.encode_* functions are extremely verbose and make it nearly impossible to see other printed messages.
Add LayerNormBasicGRUCellLayerNormBasicGRUCell add layer normalization to basic GRU unit.
minor spelling tweaks in headersNo description provided.
Converting the real and imaginary float values from short_test_segmen…t_spectrogram.csv.bin on big endian for spectrogram_test
Added mode to input function argumentsNo description provided.
minor spelling tweaksNo description provided.
Fix speech hotword model links.No description provided.
TFLite doc fixes.No description provided.
Merge of two internal changes175695370  by A. Unique TensorFlower:
Part1 of contrib/lite documentation.No description provided.
"Improve SkipNBytes to RandomInputStreamThis fix tries to address the issue raised in #14512 where SkipNBytes will takes a long time. In existing implementation, it needs to read through the file even though it is possible to random access the file itself."
"Changes to the TF mobile docs for TFLite, and a new intro for TFLite.PiperOrigin-RevId: 175638087"
"Remove python boolean check from adjust_gammaThe adjust_gamma operation used a python boolean to check if gamma was positive.  This however removes any possibility of using a scalar tensor, which means it can't be used to apply random augmentations during training."
Exporting tensorflow package for cmakeThis PR is based on the PR #13867.
Fix a bug of model_to_dot()This patch fixes #14542
"Make sparse_to_dense differentiable by wrapping scatter_nd_add.Make sparse_to_dense a wrapper of scatter_nd_add, as the two have very similar functionality and the latter is differentiable while the former is not. Ran into this because there apparently is no warning when trying to differentiate not differentiable ops."
"Fix the wrong ValurError formatting in convolutional.pyThis commit makes the error message of the build function of Conv2DTranspose a complete string, which is more human-readable."
Update wide.mdNo description provided.
Add feature get_placeholders()Add a new API that can get all placeholders of a graph easily as #14374 requires.
Removes non-existent linkNo description provided.
fix broken linkNo description provided.
R1.4No description provided.
Partially synchronize from internalNo description provided.
Branch 175638087No description provided.
"Add missing tf_copts callsTo eliminate warnings like:
libarithmetic_optimizer.a(arithmetic_optimizer.o) : warning LNK4049: locally defined symbol ?DEVICE_CPU@tensorflow@@3QEBDEB (char const * const tensorflow::DEVICE_CPU) imported"
"session_clusterspec_prop_test and common_runtime_direct_session_with_tracking_alloc_test fixed for GPUAs I discussed here - #14515 and #14576 , I made the changes in code to pass session_clusterspec_prop_test and common_runtime_direct_session_with_tracking_alloc_test tests for GPU."
"Fix control input name for quantize nodeRelate to #9792, strip :x at the end of control input name. Fix the problem that @snownus mentioned."
Add correct gradle repository.No description provided.
fix broken section links in the documentNo description provided.
IosNo description provided.
Portable path parsing in speech_commands/input_data.pyConvert some code using a regular expression with '/' characters into code that uses os.path methods and therefore handles '\' characters in Windows paths.
"[Java] Remove obsolete Input interfaceInput interface is obsolete and has been replaced by Operand a long time ago. It probably came back to life as a result of a merge, I guess?"
"Fix typosThis PR fixes some typos: mutli, accomodate, ouput, conjuction, accross, simplifed, and seperately."
"Add missing conv1d in `tf.contrib.layers`Currently, conv1d exists in tf.layers but does not in tf.contrib.layers."
index_to_string_table_from_file can use tf.string as vocabulary fileFix #14505
PrefetchDatasetOp checks buffer_size in c++ sidealternative pr for #14447
"Correct space in ValueError for input rankThe current error message is ValueError: ('Inputs should have rank 4Received input shape:', '(?, n)') where a space is missing, so the change would result in ValueError: ('Inputs should have rank 4. Received input shape:', '(?, n)')"
"Sgdr fixProposed fix for SGDR implementation.
Developed together with the author @loshchil"
fix assert_shallow_structure for dictsThe function tensorflow.python.data.util.nest.flatten_up_to used in tf.data.Dataset.from_generator does not compare the dict keys (only the length of the dict)
"use with when calling TFRecordWriterTFRecordWriter supports enter and exit .
Calling it through with is more pythonic and does cleanup in case something throws an uncaught exception."
"Add a mutex in cuda_solvers GetrfImpl.This should solve issue #13558. Because NVIDIA does not publish the code, it is not possible to prove
the bug is in the cuSolver function. However, I have removed / commented code from
matrix_inverse_op.cpp until essentially only the call to solver->Getrf remained, and from @yaroslavvb'
project mostly everything except the regularized_inverse calls, and the segmentation fault still
occurred. It did not appear when there was a single thread calling regularized_inverse. The segmentation fault always occurs without my change, and never after introducing the
lock (although that in itself does not mean the bug is solved)."
Sync from internal More Limited Tests@tensorflow-jenkins please test this.
Fixed incorrect documentation in tf.contrib.nn.deprecated_flipped_spa…rse_softmax_cross_entropy_with_logits where it referenced labels rather than logits.
R0.10No description provided.
"Remove redundant code of slice_op.ccIn slice_op.cc line 252, when input_dims is 4, it is handle as a special case."
Update docs for r1.4No description provided.
Added checkpoint V1 test for SaveRestoreShardedTestIt seems that the V1 path of the SaveRestoreShardedTest test is not executed but the code is there. This patch will execute the V1 path.
Merge internal changesNo description provided.
Branch 175324895No description provided.
MKL: Adding Convolution implementation using the open source MKL-DNN LibNo description provided.
Fix license declaration for Python headersThis appears to be a legacy package so we might want to consider deleting it at some point too.
"Added Ubuntu 16.04 Dockerfile with TF 1.4 optimized for CPU with Inte…l(R) MKL
This is an Ubuntu 16.04 Container running Tensorflow 1.4 with Intel MKL.
To test on a system with Docker installed, do this as root:"
Fix Python auto configure build support7ccfbdf caused our Python autoconf to no longer be auto. This was likely due to the helper function _get_env_var() which has now been removed. I also used this change as an opportunity to apply DRY and remove some legacy documentation.
Add named contacts to Code of ConductNo description provided.
Fix a stray hyphen and add an SO linkTo help address #14455.
Revert \Branch 175277161\Reverts #14453
"added CMake options to provide external zlib, GRPC, EigenHere are changes necessary to build tensorflow with different version of GRPC, Protobuf, Eigen, zlib, etc. It is not possible to compile project using two different versions of protobuf for example. To deal with that I've chosen approach similar to one in GRPC library. Also for some reason I don't see changes from #13867 in master, thus changes from that branch are also here, @mrry might know something."
Sync Branch 175311543@tensorflow-jenkins test this please
MKL: Adding Batch Normalization implementation using the open source MKL-DNN LibNo description provided.
MKL: Adding Concat op implementation using the open source MKL_DNNNo description provided.
MKL: Adding Relu implementation using the open source MKL-DNNNo description provided.
Branch 175277161No description provided.
"PrefetchDataset with buffer_size==0 results in deadlockHey,"
fix the distributed training problem for the estimator apiCurrent version will fail as I tried to use the tf.estimator.train_and_evaluate api for distributed training on the same machine. All the gpus will be occupied even when I  set session_config.gpu_options.allow_growth = True for tf.estimator.RunConfig.
code comments error in docker notebookas is related with issue #14430
Fix all tests under python/keras on windowsFixes #12959
code comments error in docker notebookin related with issue #14430
"Typofix typo
dissassemble -> disassemble"
"Fix typofix typo
initialize -> initialize"
Fixed typo in tfprofintialized -> initialized
typo fixedthats -> that's
"golang: ~2x speedup for encodeTensor()This is duplicate of #14368, but now it can be merged safely because #14331 is merged."
Fix absl flag initialization in cloud_tpu_profilerThis fixes a regression caused by 2652704 where the command would not run. See also: tensorflow/tensorboard#716
Fix typo <Copybara Experiment DO NOT MERGE>Fix typo in tensorflow/python/framework/function.py
Add the C++ gradient of the Prod operation.This PR adds the gradient of the Prod operation to the C++ API.
"[iOS] Add optional Selective Registration of OpsThe current iOS library is huge. Add the ability to selectively
register for the ops the tensorflow library will support. This
greatly reduces resultant binary based on the network."
Fix allow_smaller_final_batches for bucket_by_sequence_length.Fixes #8182
Replace the docker check with an OS check.PiperOrigin-RevId: 174057778
"enum34 is only required for Python < 3.4I ran into problems when building TensorFlow 1.4.0 on top of Python 3.6.3 because enum34 is pulled in, but not compatible with Python 3.6, i.e. python -c 'import tensorflow' lead to:"
Fix typo. <Copybara Experiment DO NOT MERGE>Fix typo in tensorflow/python/layers/base_test.py
Revert \golang: ~2x speedup for encodeTensor()\Reverts #14368
"added patch needed for jetson tx2/1arm64 does not support NUMA, so TryToReadNumaNode in cuda_gpu_executor.cc has to be modified accordingly to avoid a failure at runtime."
Fix Jenkins build error (`//tensorflow/go:test`) on HEADThis fix fixes Jenkins build error of //tensorflow/go:test on HEAD introduced by #14368:
Fix a build error in windows debug buildRequired by std::_Debug_range<_FwdIt> in std::lower_bound function. Fix #14396
modified convolution documentfix  #14027
"CMake: configure default string values of options properlyBecause cmake configures defaults values as ON or OFF only,
string values as default doesn't work."
Fixed typos in commentsNo description provided.
"remove duplicated codeI'm remove duplicated code, and to avoid missing when adding new error code."
"Installing TensorFlow for CTensorFlow蝨ｨ c_api.h荳ｭ螳壻ｹ我ｺｸ\螂 C API,逕ｨ譚･謠蝉ｾ幃\ょ粋莠主ｻｺ遶句柱蜈ｶ莉冶ｯｭ險\逧ｻ大ｮ.
霑吝･輸PI蛟ｾ蜷台ｺ守ｮ\蜊墓\ｧ蜥御ｸ\閾ｴ諤ｧｼ瑚\御ｸ肴弍譁ｹ萓ｿ縲"
`variable_scope` use `auxiliary_name_scope` to control whether to create new name scopeNow variable_scope always create a new name scope (side-effect?) when invoked. The behavior will result in name scope collision mentioned in #13429 . Hence we proposed to add a parameter auxiliary_name_scope to control whether to create new name scope or not.
"Forward declare condition_variable, fix for #14388Necessary to enable friendship with mutex on msvc"
Fix typo <Copybara Experiment DO NOT MERGE>Fix typo in tensorflow/python/client/timeline.py
golang: added Session.ListDevices methodImplemented Session.ListDevices() method
Revert \[OpenCL SYCL] Add support for triSYCL in TensorFlow\Reverts #12882
Looks like an rc1 string got into master. Here is the fix.No description provided.
Fix sycl BUILD bazel syntax errorFix build issues from #12882
Fix typo. <Copybara Experiment DO NOT MERGE>Fix typo in tensorflow/python/client/session_clusterspec_prop_test.py
Fix indenting on cache check in Network layer classResolves #14054
"Typo fixed in RELEASE.mdThe spelling of backwards is a non-American variant. For consistency, consider replacing it with the American English spelling."
golang: added Session.ListDevices methodImplemented Session.ListDevices() method
Fix #14324 and another compile error with mklThis fix fixes #14324 and another compile error with mkl below
Change `NHWC`/`NCHW` to `NWC`/`NCW` for conv1dWhile working on #13105 I noticed that in the current code base conv1d uses NHWC/NCHW which should really be NWC/NCW.
golang: ~2x speedup for encodeTensor()before:
golang: added Session.ListDevices methodImplemented Session.ListDevices() method
在Windows上安装TensorFlow譛ｬ莉ｽ謖㍾ｯｼ蟆相隸画お螯ゆｽ募惠 Windows 荳雁ｮ芽｣ TensorFlow縲
"Fix estimator convert from Keras to export_savedmodel() #14284PR for #14284
[FIX]the estimator generate by tf.keras.model_to_estimator() cannot export saved_model because the model_fn provided by _create_keras_model_fn wasn't set export_outputs in the returned EstimatorSpec. Here I provide a default export_outputs with serve_default key and Predict API, and the result inside is same as predictions"
"memmap changes@andrewharp  @martinwicke
Here is the new PR with changes as discussed in 12922"
Bag of wordsNo description provided.
update create_train_op to use get_global_stepFixes this warning:
"Add curses install note for Windows in tfdbg docsOn Windows, using the curses UI with tfdbg is a nicer experience than the suggested readline, so I thought it would be worthwhile to include a note in the documentation about Windows curses installation."
"Add checkpoint file prefix checkV2 format refers checkpoint files by their file name prefix whereas V1 format refers checkpoint by actual file. I added a check to verify the V2 checkpoint reference is not a file. Also, the return value for saver.save() has changed for V2 so I corrected the doc string."
Fixes for Python3 Raspberry Pi CI BuildPasses a needed environment variable through to the build script.
PeriodicResample Op: Fixes #9369 (clean history)This is the same PR as #9376 with no CLA issues
Branch 174921332No description provided.
Allow tfcompile_flags to be a listThis PR is a follow up to #12769 and #14333 to address the issue raised in #12767 so that it is possible to specify the flag with
Disable flaky multinomial_testNo description provided.
MKL: Faster CPU implementation of batch matmul kernel using MKL cblas apisNo description provided.
"Revert \Allow tfcompile_flags to be a list\Reverts #12769, which breaks everything."
Update Android JCenter linksLooks like the bintray repo was reorganized and the previous references to tensorflow-android now 404. This PR adds working links.
Added missing parts for uint32 and uint64 support to golang bindingsAdded missing parts for uint32 and uint64 support to golang bindings
"Add `decode_libsvm` for libsvm format supportThis fix is an effort to add libsvm format support with the implementation of decode_libsvm, as was proposed in #14313."
MKL: Fixing a regression in slice opFixing a build/runtime issue in MKL Slice op caused by another PR.
Branch 174861804No description provided.
Fix issue in the `Defun` docsThis fix fixes a couple of typos in the Defun docs:tf.Constant -> tf.constant
add not equal op to tf_op_files.txtAdding the kernel op NotEqual to tf_ops_list.txt
"updated keras backend with missing methodsHi,"
"added reuse in kwargs checking for reusing shared variableWhen I am implementing DeepID2 from ""Deep Learning Face Representation by Joint
Identification-Verification by Yi Sun, Xiaogang Wang and Xiaoou Tang"", I realise that using same architecture for two inputs (two face image) and sharing weight (if I didn't misunderstand) when feedforward, there is a layer called locally connected convolution, and only keras implemented LocallyConnected2D, when I trying to reuse weight, but failed because the layer didn't allow ""reuse"" as a kwargs, so when I added it, it seems working (I am not expert in deep learning, so I am not sure if I am doing it correct, so I'm always trying any way)"
R1.4No description provided.
ONNX Support (Run ONNX nodes using TF)As per #12888.
ONNX SupportAs per #12888.
"Code Cleanup for Makefile iOS BuildJust cleanup the coding of Makefile iOS Build, should be reducing maintenance effort."
Update Custom Op instructions to use tf.sysconfg flagsNo description provided.
Merge 1.4 branch back into masterThis merge only includes version string updates.
UpSorry:) It was mistake
improve int data type check in sessionright now this would fail
Updating the bazel version in the install from sources page.No description provided.
Fix batch dataset op testNo description provided.
Add support for grayscale bmp imageThis fix tries to address the issue raised in #13942 to support grayscale bmp image. Previously only channels of 3 or 4 are supported in bmp decoding. This fix adds the support to have 1 channel grayscale image.
"Adding connectivity check, compilation fix and some code refactoring to verbsCan one of the admins verify this patch?"
Fix XLA compilation on OSXThe double versions of these functions are overloaded on OSX which means we need an explicit cast to disambiguate them. Fixes #14127.
Add layer scope to tf.contrib.layers.spatial_softmaxtensorflow.contrib.layers.spatial_softmax is lacking a layer-level scope
"fix InvalidArgumentError when using cv2 with tf.py_func()If we use cv2.imread(filename, cv2.IMREAD_GRAYSCALE) here, we'll get an InvalidArgumentError: TypeError: bad argument type for built-in operation, using cv2.imread(filename.decode(), cv2.IMREAD_GRAYSCALE) instead solves this issue."
better visualization nameNo description provided.
typo fixed : did't -> didn'ttypo fixed
Keep the document consistentNo description provided.
Fix typoFix typo
minor eager notebook examples cleanupMinor eager notebook examples cleanup.  See https://github.com/tensorflow/early-eager/pull/37/files
R1.4No description provided.
Revert \Upgrade gRPC (#13958)\This reverts commit fccc3d2.
consistency in function name..No description provided.
Implement backpropagation for SVD when full_matrices is FalseThis pull request implements backpropagation for the singular value decomposition operation when full_matrices is False.  A request for this feature is in #13641.
Fix typo in `mobile/prepare_models.md`This fix fixes a typo in mobile/prepare_models.md:targetting -> targeting
Update estimator.pyReplace contrib metrics with core metrics
#NAME?
Fixes for Raspberry Pi cross-compilation in CI BuildNo description provided.
"Add int64 support of `axis` (`Tidx`) for ConcatV2In array_ops.cc, it was specified that ConcatV2 support both int32 and int64 data types of axis (Tidx):"
typo fixed in CONTRIBUTING.mdThe noun phrase [contribution - decision - code] seems to be missing a determiner before it. Consider adding an article.
Remove duplicated com_google_absl workspace object (#14238)No description provided.
Disable flaky prefetching_ops_testNo description provided.
Remove duplicated com_google_absl workspace objectNo description provided.
Added an option to `kernel` to `skip_metropolis_step`.Fix #14221
Branch 174534886pushing internal commits
Add missing flags to tfdbg doc chartSome command flags for tfdbg weren't listed in the doc chart. This commit adds the ones that are missing.
Bulleted lists need a leading blank line.No description provided.
Clean up our libcuda stub when building the GPU Docker containerNo description provided.
Add int64 `Tdim` support for `ExpandDims`This fix tries to add int64 Tdim support for ExpandDims.
[CMake] Generate `gen_audio_ops.py`.Fixes #14004.
"Fix typo : specifiedtypo fix
specfied -> specified"
R1.4No description provided.
"Fix typosThis PR fixes some typos: a same, specifed, signalled, and compatiblity."
"Update word2vec_basic.py in generate_batchFile ""/word2vec_***_basic.py"", line 139, in generate_batch
buffer[:] = data[:span]
TypeError: sequence index must be integer, not 'slice'"
Fix formatting in readme.@flx42 thanks for letting me know!
Update For more information in READMEChange from lowercase to uppercase
Update head.pyMinor typo fix
Fix broken code tag in tf.contrib.data READMENo description provided.
Dockerfile.gpu: use the runtime cuDNN v6 imageThe generated Docker image will be approximately 900 MB smaller.
Remove `non-fused` version of `adjust_hue` as GPU kernel is already in placeWas looking into adding batch support for tf.image.random_hue (#8926) and noticed that the non-fused version of adjust_hue was still in place. The non-fused is for non-GPU support of adjust_hue.
improve production condition of debug log with VLOGThis patch improve a debug logging VLOG .
change set_tf_cunn_version to set_tf_cudnn_versionNo description provided.
"typo fixed in CODE_OF_CONDUCT.mdThe spelling of behaviour is a non-American variant. For consistency, consider replacing it with the
American English spelling."
Eliminate ambiguity[batch_size] + shape means the sum of two matrix
fix typoNo description provided.
TensorFlow for NVIDIA Tegra devices with CUDA supportNo description provided.
Documentation fix - clarifying sum in softmax function.This notational fix makes it more clear that you're summing over the classes in the denominator of the softmax function.
Initial add of docs for Tensorflow on Mobile.Cherry-pick of mobile docs from master onto r1.4
"Fix a broken link in `Threading and Queues` docsThe link to Datasets in Threading and Queues seems
to be broken. This fix attempts to fix the broken link."
Make sure to set _GLIBCXX_USE_CXX11_ABI=0 if it's not definedThis is necessary to make sure we can compile TensorFlow with gcc4 and compile custom operator with gcc5.
"Implement shape constraints for `Cross`This fix implements shape constrainsts for Cross, as was specified in the TODO:"
Comment out dynamic slice tests that rely on wrappingThe wrapping behaviour has not yet been specified so it can't be tested. See https://groups.google.com/forum/#!topic/xla-dev/XQ7LbZOg9Nc
"Fix typosThis PR fixes some typos: tf.constant, tf.placeholder."
Update comments for variables in get_startedThis PR updates the comments in the Getting Started guide to make it more clear to which variables they refer to.
Resolve //tensorflow relative to tensorflow repo in tfcompile.bzl.Do this so that tfcompile.bzl can be correctly loaded from another Bazel project
Update version strings to 1.4.0No description provided.
"Use 'LABEL maintainer=' in DockerfileThis fix is a follow up of 13961 to replace MAINTAINER
with LABEL maintainer= in Dockerfile. The keywordMAINTAINER has long been deprecated and is replaced by LABEL,
which is much more flexible and is easily searchable through docker inspect."
[XLA] Rename symbols for OS/X only - it doesn't have sincosOn OS/X the sincos and sincosf are apparently not present.  There is a __sincos and __sincosf.  This change creates an alias for them on OS/X.
eager: Update broken link in READMENo description provided.
eager: Update broken links in guide.mdNo description provided.
Fix typos in Linear Model Tutorial samples and install_sources.mdPiperOrigin-RevId: 173733442
"Update golang to 1.9.2 in `install_golang.sh`This fix updates install_golang.sh to 1.9.2, see release:https://golang.org/doc/devel/release.html#go1.9.minor"
Branch 174023371No description provided.
Recover the lost output channel number of atrous convolution for NC formatFix #13861.
fix broken linkNo description provided.
Disable clang_format check.Different clang_format version can cause different formats with the same style option. This check might be too strict. Disable for now.
Add apt-key for ubuntu keyserverNo description provided.
Add GCC/Compiler version to issue template.As suggested in #13930
"Batch normalization for LSTMA recurrent batch normalization is implemented based on https://arxiv.org/pdf/1603.09025.pdf. The new functionality allows for setting normalization for each of the inputs, the actual input or the state, and the cell prior to the activation function. To avoid a double implementation, tensorflow.python.layers.normalization.BatchNormalization is called to perform the normalization, and it can be controlled fully, but if no extra configuration is provided a good default configuraiton is used. By default no normalization is done. The only aspect mentioned in the paper that was not implemented, was that it was recommended there that the statistics be taken on a time step basis, rather than having all time steps share the same statistics. This would have necessitated a lot of tinkering in BatchNormalization, to the point that it would be more economical if that behaviour was desired, to simply port the parts needed into LSTM and adjust them as necessary, but that should not be part of the main branch."
Resolve //tensorflow relative to tensorflow repoFixes #13984
"Dockerfile: do not perform cleanup in a separate RUN statementCleanup must be performed in the same statement, otherwise the build
files are still stored in the upper layer and no space is reclaimed."
Branch 173904309No description provided.
"fix fused_batchnorm_test.pyIn file fused_batchnorm_test.py,  the function _reference_training use"
Add KafkaReader for processing streaming data with Apache KafkaThis is a proposal to add KafkaReader so that it is possible to read data from Kafka like TextLineReader and TFRecordReader.
Utility classes for writing Java source code from a C++ processThis PR sets up a few tools for writing Java source files from the op generator (or any future generator of Java code written in C++).
small unseen typossmall typos fixed
grammer fixedfixed a small typo
typo fixedthere is an additional whitespace between ' the method '
"Minor change in tolerance to pass resnet_v1_test test on ppc64leAs discussed here - #13992 , I am raising this PR to fix resnet_v1_test failure."
"Handle nil return from TF_TensorDataWith some memory allocators, attempting to allocate 0 bytes will return
a null pointer. This specifically happens when building tensorflow with
mkl support. If TF_TensorData returns null, the go code to create a
slice from the data leads to a null pointer exception. This fixes the
issue by checking for the nil return and returning a slice zero value to
(nil) to the caller. Fixes #13764."
Fix a minor typo in readmeNo description provided.
"Add gradient tests for `tf.maximum` and `tf.minimum`Was looking into adding gradient tests for tf.clip_by_value (#13998 (comment))
and then noticed that there is no gradient tests in math_grad_test.py
for tf.maximum and tf.minimum."
experimentalNo description provided.
"Explicitly pass label_count to confusion_matrix.If batch size gets small enough, there can be not enough classes
in the validation batch, and auto-inference on each step may
return different sizes of the confustion matrices, and their
addition will fail"
R1.2882830
"Fix position of arguments of nce_loss calculationThe nce_loss positional arguments in word2vec_simple.py are incorrect, leading to the following traceback:"
"Fix position of arguments of nce_loss calculation on tensorflow_basic tutorialThe nce_loss positional arguments in word2vec_simple.py are incorrect, leading to the following traceback:"
Branch 173772851No description provided.
Add int64 input tensor support for `tf.invert_permutation`This fix tries to add int64 input tensor support for tf.invert_permutation.
"Adding a feed for boolean tensors to TensorFlowInferenceInterfaceFor #13601, adding the requested implementation to TensorFlowInferenceInterface."
Fixes build breakageNo description provided.
Half Normal Distribution (and inverse error function)Added erfinv as a simple function of ndtri (the api mirrors the approach taken in scipy.special. Mainly to prevent distributions with methods in terms of the inverse error function reimplementing their own wrappers around ndtri.
"Fix failing build on Fedora 26 (stropts.h)Tensorflow branches 1.4 and master do not build on Fedora 26. When bazel builds curl as a third-party package, the file stropts.h is always included, while it is no longer present on many Linux distributions (including Fedora). Curl can be easily built without it by removing the HAVE_STROPTS flag."
Fix minor typoNo description provided.
Branch 173716375No description provided.
Fixing the sources docs in master.No description provided.
Remove name_scope from convolutional calls.Cherry-picking conv layer fix to 1.4 branch.
"Update cudnn_rnn.pyFor addressing this issue,#14001 (comment)"
"Add go format check as part of the sanity checkIn go, it is very common to format the code with gofmt -s -w file.go. This fix adds the gofmt check as part of the sanity check."
"Fix documentation error in tf.size() - output typeout_type can be any non-quantized numeric type, not just int32 or int64."
Update Scikit Flow link and descriptionNo description provided.
"Fix an ouput typo in `ci_sanity.sh`In the last PR #13924 (clang sanity check) the output message should be changed:due to the absence of Python code changes
->due to the absence of .h or .cc code changes"
Typo fix in file 'fully_connected_feed.py'No description provided.
"Add `double` support for `tf.decode_csv`In the current tensorflow tf.decode_csv accepts float, int32, int64, string but not double.
It seems adding double support makes sense as StringToNumber already support double type."
"Fix incorrect annotation tag in the docs of tf.VariableIn tf.Variable the annotation tag of @compatiblity (missing i) should be @compatibility , without the fix the rendering of docs may be incorrect."
Add `SANITY_STEPS_DESC` for do_clang_format_checkThis fix is a follow up to PR #13924 to add the corresponding description in SANITY_STEPS_DESC.
fix broken linkNo description provided.
support DepthwiseConv2dNative op when use python/tools/optimize_for_i…support DepthwiseConv2dNative op when use python/tools/optimize_for_inference.py
"tf.zeros doesn't accept a tensor argumentValueError: Shape must be rank 1 but is rank 0 for 'zeros_2' (op: 'Fill') with input shapes: [], []."
support DepthwiseConv2dNative at file tensorflow/python/tools/optimiz…support DepthwiseConv2dNative op when use python/tools/optimize_for_inference.py
"avoid confict when installing pip3When using  parameterized_docker_build.sh to build a tensorflow docker image from nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04. There is code that change ""pip"" to ""pip3"" which will cause an error while installing pip3 because it change ""python-pip"" to ""python-pip3""."
CMake-Linux support for GPU-buildThere had been some fixes for Linux
"Set reuse=False instead of reuse=None, and add suggestion for tf.AUTO_REUSEAs per #13887 we'd like to change the message that contains ""reuse=None"" to ""reuse=False"" and suggest the use of tf.AUTO_REUSE."
"iOS/RPi Add the ability to choose ANDROID_TYPES_FULLSome networks require ""full"" types instead of ""slim"" so remove
the hard coding of SLIM in iOS and RPi. It still defaults to
building SLIM for them if not ENV var is specified but now
you can build with"
"Fix documentation error in tf.size()tf.size() returns a symbolic Tensor, not an integer."
Add link to datasets docLink to datasets doc to make it easier to find.
Branch 173560463No description provided.
Branch 173553770No description provided.
"Add customerized kernel implementation for clip_by_valueThis fix tries to address the issue raised in #7225 where tf.clip_by_value does not have a custom kernel and reused tf.maximum and tf.mimimum. In case scalar values are passed to tf.clip_by_value, unnecessary memory usage might incur."
Fix list formattingMarkdown needs a blank line before the list to render it correctly.
Support fold batch norm for atrous conv2dFix #13990
"Support fold batch norm for atrous conv2dAs we can fold batch norm with convolution, we should also fold batch norm with atrous convolution, which has not been implemented."
R1.3No description provided.
Feature Request: C++ gradient for LRNthis resolves #13789
"Update adding_an_op.mdI am proposing several changes to this file.  I am a new user to TF, and used this documentation extensively while trying to put a together my custom activation function, since I wanted to explore how different activation functions might affect NN training and performace.  I eventually figured out everything I needed to know, but it took weeks because this documentation is lacking in several areas, so I have a good feel for how this documentation can be improved to make life easier for future new users.  Changes 1 and 2 are pretty clear and I expect to not be controversial.  Change 3 you will probably need to think about, and might want to do further work to make things more clear."
Changed GPU driver version assumptionFixes #9669
Update docs for `begin_params_axis`This fix fixes the issue raised in #13975 where begin_shift_axis should actually be begin_params_axis.
"Initial SRU ImplementationHi, as per #13094, I'm submitting an initial PR for SRU implementation. I have checked the results with implementation here."
Branch 173415707No description provided.
"Update device string comments in node_def.protoClarifying comments for valid device string in NodeDef, as discussed in PR #13874."
"Fix typosThis PR fixes some typos: prediciton, iteraton."
Use 'LABEL maintainer=' in DockerfileThis fix is a follow up of #13661 to replace MAINTAINER with LABEL maintainer= in Dockerfile.
"Merge v1.4-rc1 back into master branch.Mostly version string changes, but also adds some documentation that was directly committed
to r1.4 branch."
"Allow build_all_ios.sh to build just one archThis change allows build_all_ios.sh to take an -a flag with a
specific arch so you dont have to waste time building unwanted
architectures (32bit etc)"
"Upgrade gRPCUpdate commit ID of grpc, update bazel.rc to force non-use of ares resolver, and also stop patching gRPC. This should enable regular updates of gRPC since separate patches will no longer be needed."
Fix a typo of \Jenkins\.No description provided.
make \smart_cond\ api public and reusableFix #13903
Merge pull request #1 from tensorflow/masterUpdated on 2017/10/24
"Dockerfile devel: Fixed broken bazel LICENSE urlno more .txt extension to the bazel LICENSE file
this results in HTTP 404 error during docker build"
"add a note on numpy compatibilitynp.mean has a dtype parameter that could be used to specify the output type. By default this is dtype=float64. On the other hand, tf.reduce_mean has an aggressive type inference from input_tensor. This should be clear in the Numpy compatibility section.#13885"
make \smart_cond\ api public and reusableFix #13903 .
"Use := instead of ?= to set MAKEFILES_DIR to fix Android build flakinessThis change should fix Android build flakiness we see with error:
fatal error: google/protobuf/stubs/common.h: No such file or directory"
Standardised caps on Virtualenv.Standardised capitalisation of the name Virtualenv.
"Fix mnist_softmax tutorial: W should be randomly initialized, should …Fix mnist_softmax tutorial: W should be randomly initialized, should not be initialized as zeros. Otherwise, you will get a symmetric NN."
Branch 173194115No description provided.
"Add links and fix typosAdd links to the docs in GitHub, to make it easier for contributors to find them. Also fix some typos in the names of GitHub and TensorFlow, and standardise capitalisation in headings."
R1.3No description provided.
Add clang style check as part of the sanity checkThis fix is an effort to add clang style check as part of the sanity check.
Branch 173127955No description provided.
Add GPU support for Bucketize opThis fix tries to add GPU support for Bucketize op. Before this PR only CPU implementation is available.
Add int64 type `multiples` support for TileGrad.This fix is a follow up of #13884 to add int64 type of multiples support for TileGrad for completeness.
Update build_all_ios.sh to support per arch buildsNo description provided.
make data file configurable(issue#13876)Fix issue#13876.
R1.3No description provided.
Branch 173060283No description provided.
"Add int64 Tperm type support for `Transpose`This fix adds int64 Tperm support for Transpose. In array_ops.cc, Transpose and ConjugateTranspose have been specified as accepting int32 and int64 perm types. However, only int32 kernels has been registered."
"Add int64 shape support on GPU for stateless random ops.This fix adds int64 shape support on GPU for stateless random ops StatelessRandomUniform, StatelessRandomNormal, StatelessTruncatedNormal."
Add int64 padding support for MirrorPadThis fix adds int64 padding support for MirrorPad. In the array_ops.cc the MirrorPad/MirrorPadGrad has been specified as supporting int64 padding. The related kernels does not have the int64 padding registered though.
"Add a GPU kernel for tf.dynamic_partition.This PR partially addresses issue #5965.
The implementation follows closely the outline proposed by @ekelsen in the comments:"
"Make special_math._ndtri work with partially-specified shapesCurrent implementation of the special_math._ndtri function does not work with tensors of partially-known shape, which prevents one from computing Normal distribution's quantile function for non-fixed size batches."
add segment_reduction_ops to tf_op_filesfix problem:No OpKernel was registered to support Op 'SegmentSum'
"nsync lib name changeNow, the lib name is nsync.a. It will cause problem lnsync not found in cmake. So, change it to libnsync.a"
R1.3No description provided.
Cauchy DistributionAdded the cauchy distribution to contrib.distributions.
Update protobuf.cmake to b04e5cba356212e4e8c66c61bbe0c3a20537c5b9This fix tries to address the issue raised in #8187 where protobuf.cmake used different version as bazel.
"Add int64 axis support for reduction ops.This fix is a follow up to PR #13863. In PR #13863 the program crash is fixed if int64 axis is passed to reduction ops,e.g. reduce_sum, reduce_max, etc. However, it does not process the case of int64 axis support, it merely fixes the crash."
Give each variable a unique name in accumulate_n_v2_eager_test.No description provided.
"Add `int64` type `multiples` support for `tf.tile`In the doc of tf.tile (tf.tile.doc) both int32 and int64 are supported for multiples. However, the kernel for int64 is not registered yet."
Branch 172965466No description provided.
"Fix doc in TF_CALL_ when invoked in mobile platformThis is a small doc fix that includes bool as part of the types that is supported in mobile, as bool is clearly invoked in the following define (See Ln 105 and Ln 135) in mobile platform:"
"protobuf lib path bug fix for benckmark on osxIf not fixed, /usr/local/lib will before tensorflow/contrib/makefile/gen/protobuf-host/lib/ in the library search path. It will cause undefined symbol problem of protobuf when building benchmark because of incompatibility of system installed protobuf."
"Update layers_test.pyHello!
I have merged the two pull requests i have made earlier (#13829 and #13864) with reference to the issue #11673 .
Please suggest if any more changes are required."
Update node_def.proto commentsThe device field had outdated comments.
Variable name for the eager testNo description provided.
"Remove deprecated 32bit IOS buildsApple has stopped supporting 32bit iOS builds staring with iOS11.
Building these binaries are pretty much useless on iOS, but saves
a lot of time by just building arm64 and x86_64."
Add known Dataset issue to RELEASE.md.Adding info about issue using Unicode strings with Datasets to 1.4 release notes.
added CMake install targetsThis way you can use cmake to install tensorflow into some location. It is easier to package tensorflow this way.
Branch 172924803No description provided.
"updated unit test caseThe following PR contains the required unit test case regarding issue #11673
and it also has a fix in another pull request #13829"
Fix crash when `int64` axis is passed to `tf.reduce_sum`This fix tries to fix the crash triggered by int64 axis passed to tf.reduce_sum:
Fix issues where int64 crops could not be passed to batch_to_space.This fix tries to address the issue where int64 crops could not be passed to batch_to_space even though both int32 and int64 are specified as supported in the docs (tf.batch_to_space.doc)
"Merge two GPU kernel launching to one in DiagOpThe PR is the following update for the discussion of #13666, which tries to merge two GPU kernel launching to one launching in DiagOp, as @ekelsen suggested."
"Update the C++ API guide [Doc only, should be in 1.4]Fixes #13855."
WIP: ENH: only master is allowed to export modelFix #13849
Updated tf.svd documentation to state \ u * s * v' \Updated tf.svd documentation to state the index for V matrix is transposed.
Fix `tf.py_func()` and `Dataset.from_generator()` on Python 3.Cherry pick to make Dataset.from_generator() work on Python 3 when the generator yields (unicode) strings.
"Fix ../makefile/download_dependencies.sh on OSXwget expects parameters before the URL on OSX (tested on
version 1.16 and 1.19)"
Fixes build breakageNo description provided.
Cherry-pick to disable S3 on windows and renamed serving_input_fn arg.No description provided.
Branch 172798007No description provided.
Improve resize_bicubic performance by reorganizing loopsThis fix tries to address the issue raised in #13693 where performance of resize_bicubic is subpar compared with opencv.
Add `int64` out_idx` support for `listdiff`/`list_diff`/`setdiff1d`This fix tries to add int64 out_idx support for listdiff/list_diff/setdiff1d.
"Add \PlainSessionCreator\Not sure if this is desirable, but I found this improves the usability of the SessionCreator interface. When I use a factory to create session, it's helpful that it can at least create session in the simplest way.
An example usage would be to write a ""train"" function that takes a SessionCreator and a bunch of other things."
"Allow _FilterFloat to pass None values.Tensorflow 1.3: tf.constant with dtype=[float32, float64, float16] may have inconsistent behavior. #13827"
"Fix import of spatial_softmax from tensorflow.contrib.layersCurrently spatial_softmax cannot be imported from tensorflow.contrib.layers, but has to be imported all the way from tensorflow.contrib.layers.python.layers"
"Fix AWS SDK missing symbols on Linux PPCTF on linux ppc64le builds but when loading the environment, some AWS related symbols are missing and thus resulting in a failure to load TF. This patch adds the same file inclusions/macro definitions to linux_ppc as one does to linux_x86 and this seems to fix the problem."
Fix casting to `size_t` for mkl conv filter dimsHere's the output from clang regarding explicit casting int64 to size_t.
"R1.3On Windows, after reinstalling Anaconda3 I run the commandconda create -n tensorflow python=3.5
to create a tensorflow environment within Anaconda installation in the hidden user appdata folder."
Update layers.pyI have added a check on beta with reference to the following issue raised.#11673
Update resnet.pyTest with mnist test set. Previously it was testing on the training set.
"Branch 172647355@vrv the release needed a push so I hope you don't mind, went ahead and did one early."
allow to run configure from a parent workspaceWith this patch you can configure tensorflow directly using bazel.
Disable flaky tests in cmake build.No description provided.
"Cherry-pick in additional bug fixes to r1.4 branch.Fixes to Datasets, S3 file system, and a change to no longer set random seed in Estimator run_config."
Add GPU kernel for `tf.bincount`This fix tries to address the issue raised in #11554 where there is no GPU support for tf.bincount.
Add missing `uint16` type registration for ops `CropAndResize`/`CropAndResizeGradBoxes`This fix adds missing uint16 type registration in image_ops.cc for CropAndResize and CropAndResizeGradBoxes.
"fix the issue: \libcuda.so.1 not found\ and add some minor changes.The newer version of Bazel, i.e. BAZEL_VERSION=0.6.1 won't cause any trouble. I've built the image that uses this version of Bazel successfully."
gitignore: ignore build files relevant for iOS sample appsNo description provided.
"add swish activation function to python opsSwish activation function swish(x) = x * sigmoid(x) has
just been published by the Google Brain team. This is a
simple implementation of the same in TF's python interface."
"Fix MPI and Verbs compilation when not using GPUsCode compilation would fail when building without CUDA support, but with MPI and/or Verbs support. This PR adds the required dependencies directly into the MPI/Verbs BUILD files and fixes those compilation errors."
"Update boringssl to a0fb951d2a26a8ee746b52f3ba81ab011a0af778This fix update boringssl to a0fb951d2a26a8ee746b52f3ba81ab011a0af778, which contains bug fix related to #13733."
Branch 172556044No description provided.
Branch 172543319No description provided.
Fix minor typos in TF Boosted TreesFix minor typos in TF Boosted Trees
Add `int64` axis support for `tf.cumsum` and `tf.cumprod`This fix adds int64 axis support for tf.cumsum and tf.cumprod.
Fix #13731 by adding HistogramdFixedWidth in hidden_ops.txt and create the python wrapperThis fix fixes the build breaks in #13731. The issue was caused by the fact that API compatibility requires a default value for nbins=100 while the test utility code in contrib need to pass a tensor (not through attribute).
"Revert \Add GPU and CPU implementation of `tf.histogram_fixed_width`.… (#13731)"""
"the comment is confusingI find the comment say that embedding shape is [num_encoder_symbols x input_size], I was so confused and checked the source code, I believe it will be better to change the input_size to embedding_size"
Branch 172408922No description provided.
Revert \Fix broken link in debugger doc\Reverts #13757
Branch 172380659No description provided.
Fix ambiguous type comparison in s3_crypto.ccWe were seeing the following compilation error on Windows builds.
Fix broken link in debugger docSee https://www.tensorflow.org/programmers_guide/debugger
"Allow num parameter in tf.linspace to be int64.According to the API, tf.linspace is defined for num int32 or int64.
However the C++ kernel only allows int32, even though the op in core/ops/math_ops permits int64 too.
So I slightly changed the kernel to allow int64 too. I also added tests for RangeOp and LinSpaceOp."
Fix dev remnants 1.4No description provided.
Creating a patch for the wrong links that still point to dev.No description provided.
"Improve shape inference with `DecodeAndCropJpeg`While working on improving shape inference for several other ops in #13561 and #13193, I noticed that DecodeAndCropJpeg does not inference shape even though crop size might have already be provided. In that case the shape will be [h, w, channel] and h, w is part of the crop_window in input."
Add `fast_tensor_util.cpp` to .gitignoreWhile working on building TensorFlow I noticed that a file fast_tensor_util.cpp is generated:
"Utility class for outputing/formatting generated source codeThe following class is used in an upcoming PR for generating Java operation wrappers but is generic and useful enough to take place in the core library. This way, any source code generated from C++ can make use of it."
"Fix typosThis PR fixes some typos: a a, for for, tranpose, from from, and to to."
"Propagate -DPCRE_STATIC from pcre.BUILD to swig.BUILDpcre_internal.h uses this macro to determine the content of PCRE_EXP_DECL. So, in order to keep consistent, every file who includes pcre_internal.h  directly or indirectly should also have this macro defined."
Add freeze_graph to CONSOLE_SCRIPTS.Make freeze_graph accessible from command line from pip package.
tfdbg release notes in r1.4No description provided.
"tfdbg: add persistent config (cherry-pick to r1.4)Fixes: #13449
PiperOrigin-RevId: 172270804"
Branch 172270804No description provided.
"Fix build error with boringsslThis fix tries to fix build error with boringssl on Ubuntu 16.04, gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4), and bazel 0.6.1:"
Update CUB to 1.7.4Was working on #13731 and noticed that the CUB version is 1.7.3.
Add GPU and CPU implementation of `tf.histogram_fixed_width`.This fix adds the GPU and CPU implementation of tf.histogram_fixed_width.
Disable the newly failing windows GPU tests.No description provided.
AddSign and PowerSign optimizers for contrib.optAdded optimizers with update rules from https://arxiv.org/pdf/1709.07417.pdf
Fixed incorrect `hooks` doc in `EvalSpec`No description provided.
Fix cmake build with `Dtensorflow_BUILD_ALL_KERNELS=OFF` errorThis fix tries to address the issue raised in #11975 where cmake with Dtensorflow_BUILD_ALL_KERNELS=OFF will throw out an error:
Update documentation for uint16 support in `tf.resize_...` opsThis fix tries to address the different between the registered kernels and the documentation differnet for uint16 support of:tf.resize_areatf.resize_bicubictf.resize_bilineartf.resize_nearest_neighbor
Add nth_element opThis PR tries to settle the issue #13360 and add NthElement op in kernel and tf.nn.nth_element wrapper for python.
Support reversing bool sequence.This PR tries to fix issue #13717.
Updating install_golang.sh - bumping to 1.9.1No description provided.
"fixed type error (API r1.3 document, tf.truncatediv)It was just type error
from '-7 / 5 = 1'  to '-7 / 5 = -1'"
Tidy up tf_tests.cmake and reenable tests that are not failing anymore.No description provided.
Reenable tests that use matrix_set_diag op.No description provided.
"Clarify low-latency model stride lengthfirst_filter_stride_y = 4 has no effect, since first_filter_height = input_time_size. If cnn-one-fstride4 should be used, then first_filter_stride_x should be 4 instead. However, during my experimentation cnn-one-fstride4 provided significantly worse results than the current TF impl, so I think the impl is fine."
Update version strings for 1.4.0rc1No description provided.
Fix typos in datasets guideI think recommend->recommended is definitely necessary.
"Remaining cherry-picks for 1.4.0rc1Java doc fixes. Fixes for S3 file system and making S3 file system a default build option when
running configure."
Add `cudnn_rnn_ops` to the Windows buildFixes #13696.
Branch 172118528No description provided.
Minor fix to MKL allocator to address a build regressionUses char* instead of char[] to deal with build issues related to allocator strings.
Add  'log_progress' argument for tf.estimator.Estimator's evaluate functionThe output of estimator.evaluate can be unnecessarily verbose with logging level INFO and many batches to evaluate on. The old tf.contrib.learn.Estimator had the ability to pass the log_progress=False argument along to to tensorflow.python.training.evaluation where it suppresses logging in the after_run function. This PR adds the same functionality for tf.Estimator.
"Adding equals and hashCode to Shape.Hello, I know this is a bit of a simple and trivial pull request.  However, for some other work I'm doing I wanted to compare Shape instances in some tests and I found that it didn't work in the standard way.  Hence this pull request to just add an equals method. It has some tests and also does hashCode because it's a common thing to do at the same time."
Always add bias term to the output of LayerNormBasicLSTMCell.These would solve the problem of referring untrained bias term during inference with self._layer_norm=False.
Update README.mdUpdate information about local builds and TensorFlow's CI system.
"Fix deadlocks in Staging Areas.Previously, notify_one was used to notify inserters and removers waiting to insert and remove elements into the Staging Areas. This could result in deadlock when  many removers where waiting for
different keys in the case of the MapStagingArea, or were waiting on either peeks or get operations in the StagingArea."
Branch 172057283No description provided.
Merge pull request #1 from tensorflow/masterUpdated on 2017/10/13
Branch 172045110No description provided.
Fix cuDNN version string in CUDA9 cuDNN7 docker image.No description provided.
Configurable upper bound for MKL allocatorMultiple ways to configure upper bound on the MKL cpu allocator
Add a new MKL build script for linux.No description provided.
"Fix discrepancy between doc and impl for `tf.reverse`This fix tries to address the discrepancy between doc and implementations for tf.reverse. In the documentation, both int32 and int64 could be used for axis."
Cherry-pick \Fix for a regression in graph rewrite pass (MKL)\ into 1.4 branch.No description provided.
Merge changes from 1.4-rc0 back into masterThese contains mostly release note additions and some version string updates.
configure.py: Disable AWS support on Windows by defaultThis is a follow up to #13662@gunan
Add GPU support and improve performance for tf.diag and tf.diag_partThis PR tries to settle the issue #13491 and makes some contribution for tf.diag and tf.diag_part:
Improve CRF documentation.This PR aims to improve documentation of CRF decoding introduced in #12056 .
Add missing default config setting in aws.BUILDFix http://ci.tensorflow.org/job/tf-master-win-bzl/1714/console
Docker \MAINTAINER\ instruction is deprecatedhttps://docs.docker.com/engine/reference/builder/#maintainer-deprecated
add code sample on inspect checkpoint variablesTested in Jupyter Notebook.
Enable vectorization on z13Enable vectorization on z13 to improve performance.
R1.3No description provided.
Enable setting HDFS userFollowing issue #13627 add enable TensorFlow to access HDFS as a specific HDFS user instead of the the system user owning the Tf process
"Fixes and additions to release notes.Added line about Keras moving into core.
Added line about CUDA/cuDNN versions.
Added line about custom ops."
Adding basic MKL-DNN codeThis PR includes basic code of MKL-DNN integration in the graph rewrite and the convolution op. It is the base for the upcoming MKL-DNN kernels.
Branch 171836140No description provided.
"Boring ssl update.As per #13587.
Ping @gunan .
Also what's the standard way of getting the checksum? I used sha256sum on the file I downloaded.
The patch to the BUILD file is no longer applicable, I'm not sure if we still need that patch.. Any comments?"
Merge pull request #1 from tensorflow/masterpull
add the missing closing parenthesis to code snippetNo description provided.
Add contributing authors to 1.4 Release notes.Thanks!
Branch 171718021No description provided.
"Added support for Python3 Raspberry Pi CI buildsUpdates the Docker and install scripts to use Python 3.4 in the cross-compilation toolchain, so we can set up nightly CI builds for Python3 wheels for the Raspberry Pi."
Configurable upper bound for MKL CPU allocatorMultiple ways to configure upper bound on the MKL cpu allocator
"Disable iterator_ops_test on Windows for 1.4 releasetestRemoteIteratorUsingRemoteCallOpDirectSessionGPUCPU test is failing
with ""TypeError: only integer scalar arrays can be converted to a scalar
index"" on the Windows GPU Release bot. Disabling test."
"Batch normalization dtype depends on inputs dtypeMake the batch normalization layer dtype be the same type as the inputs,
before it was always float32"
Branch 171672655No description provided.
"Fix typosThis PR fixes some typos: overriden, explictly, corresonding, accross, and contructor."
Calculate largest max rather than smallest max in quantized_add_op.ccI think this is a simple error that just didn't get spotted
Rewrite matrix_set_diag GPU kernel.Base new implementation on matrix_diag_op.
"Fix discrepancy between docs and registered kernels for `tf.ones_like`/`tf.zeros_like`This fix tries to address the discrepancy between docs and registered kernels for tf.ones_like. From the implementations the OnesLike/ZerosLike are registered with all POD types. However, in the documentation several data types are missing (uint8, int8, uint16, int16, bool)."
Revert \Implementing ghost batch norm as defined in https://arxiv.org…@chrisying fyi
Fixing the name of the disabled test.No description provided.
Fixing the name of the disabled test.No description provided.
update from originget the latest commits from original tensorflow
Branch 171489827No description provided.
[XLA] Reorder the parameters in a map inline operation according to the parameter numberThe inliner (not typically in use) has a fault where it doesn't spot that the parameters within the mapped operation are not in the same order as the actual parameter numbers on the operands.
"Protobuf must be compiled with the same versionAdded CXX=g++-4.8 to make command. On Raspberry PI protobuf must be compiled with the same gcc version as tensorflow, otherwise compile stops with error see #5684."
"Fix broken link in performance modelsThis fix fixes broken link in performance models as models repo moved inception to models/research/inception:https://github.com/tensorflow/models/tree/master/inception#getting-started
->https://github.com/tensorflow/models/tree/master/research/inception#getting-started"
"Adding --verify_images to example image retrainer.Adding --verify_images to allow soft checking of image files before bottleneck creation.
When enabled, invalid images are ignored with a warning instead of throwing an exception."
top level estimator docs update to match dnn.pysee #13570
"update dnn.py to clarify outputs arg to predict fnIt is unclear what the valid values are for predict(). Since the 2 variants are predict_classes and predict_proba, it's easy to think that the valid values are ""classes"" and ""proba"", which is untrue.
I think I've listed all the relevant values for DNNClassifier -- at least that's what the error msg told me when I used ""proba"" as my arg :D"
Initial Haiku supportNo description provided.
"Add RDMA verbs configurationRDAM configuration is now possible with the following environment variables:  RDMA_DEVICE, RDMA_DEVICE_PORT, RDMA_GID_INDEX,  RDMA_PKEY, RDMA_QUEUE_DEPTH, RDMA_TIMEOUT, RDMA_RETRY_CNT, RDMA_SL, RDMA_MTU and RDMA_TRAFFIC_CLASS."
"Fix for a regression in graph rewrite pass  (MKL)Changed CPU device string from ""cpu"" to ""CPU"" to re enable MKL graph rewrite pass that was disabled by a prior commit."
Improve shape inference for `tf.slice`This fix is an effort to address the issue raised by #4590 where improvement of shape inference for tf.slice is needed.
Add execute permission to import_pb_to_tensorboard.pyI used chmod +x to add the execute permission.
"Fix broken link in performance guideThis fix fixes broken link in performance guide as models repo moved slim to models/research/slimhttps://github.com/tensorflow/models/tree/master/slim#Data
->https://github.com/tensorflow/models/tree/master/research/slim#Data"
"Update installation instructions for conda install to include pipThis branch updates the installation instructions for conda install to include pip as well, in order to prevent the usage of the pip installed in the root conda environment."
"Add `<` operator for IndicesRowIteratorThis fix adds the < operator for IndicesRowIterator to address C2678 error in VS Debug mode, as was specified in #12000."
Added missing `` in train_and_evaluate docNo description provided.
"Fix a small typoThis PR fixes a small typo : categort -> category.
Thanks for the awesome project!"
"Fix typosThis PR fixes some typos: initalizers, fileds, mutli, beacuse, and summmary."
Pin TensorBoard 0.4 to tf-nightlySee also #13544 which pins 0.4 to TF 1.4.
Pin TensorBoard 0.4 to TensorFlow 1.4See also:
"Update version strings for TensorFlow 1.4-rc0Strings were updated by tensorflow/tools/ci_build/update_version.py script.
Hand-edited several pom.xml files missed by the script."
Update README.md with tf-nightly-gpuNo description provided.
Update release notes for TensorFlow 1.4No description provided.
Branch 171343275No description provided.
more pythonicremove semicolons
<DO NOT MERGE> infra experimentNo description provided.
"Fix unevaluated link in \Reading data\ docsIn the pull-out in https://www.tensorflow.org/api_guides/python/reading_data#Reading_from_files
there's a link that's unevaluated due to beginning with a $ instead of a @."
Simplify random selection of context words for word2vec exampleUse random.sample to simplify random selection of context words
"Add an actionable error message for build_info ImportErrorThis import statement is now the first point where we attempt to import a generated file, and hence could see a failure if the user tries to import tensorflow from the root of the git repository source tree. When this import fails, raise a more actionable error message."
"R1.3(I meant to merge to my own branch not to r1.3, please ignore)
first success attempt to use OpenCV in Tensorflow C++"
"Fix for AVX2 support in Visual StudioThis is a fix for issue #10199. Visual Studio 2015 (possibly other versions) lacks definitions for  _mm256_extract_epi8, -16, -32, or -64 in the immintrin.h header, nor in the associated runtime, so it must be implemented manually."
"WIP: BUG: fix inconsistent scope for `tensorflow.python.layers.base.Layer`It is proposed to fix #13429, however, I'm not sure whether it's the best solution. I'll finish the PR when I get back from holiday (next week)."
Fix crash when `tf.pad` is used with int64 paddings.This fix tries to fix the issue raised in #13506 where int64 data types for bounds in tf.image.pad_to_bounding_box crashes.
"Modified README for dockerPlease accept my PR! I'm trying to get a hacktoberfest tshirt and I'm new to opensource, just trying to get my feet wet with how PRs work on github."
Fix small typo in docs of learn runner.No description provided.
Branch 171234659@frankchn Doing a push so we can cut the 1.4 branch. Hope you don't mind!
Branch 171231427 for 1.4 rc0No description provided.
Make GCS and HDFS default build options.No description provided.
Branch 171199546No description provided.
"Fix for #13498@skye I'm kind of indecisive it turns out. :P This is just your fix along with an equivalent fix for RemoveEdge. I don't know if you want to merge it given that you might make changes to your fix, but I'm putting here just in case. The RemoveEdge fix is pretty much equivalent and since the method is not used in the graph constructor, I didn't change its call sites to use false for the update node def argument. I'm not sure if that collides with anything else, but I guess the tests can tell us something (I didn't run them on my laptop because they take forever and I can't use it in the meantime)."
Use --config=monolithic for the Android CI buildAvoids building some code for op generation. @av8ramit could you test it?
"Unstack int64 tensors on GPURegistered unstack GPU kernel op for int64 tensors.
Extended tests to check unstack op on different types of tensors for CPU and GPU."
"Allowing a single Tensor in a StagingAreaThis brings the code in line with the documentation so that both of the
following are valid:"
"Fix documentation error in tf.reverse docstring (#1)The first example in the tf.reverse docstring causes a ValueError, as shown below.  tf.reverse requires axis to be 1D; -1 is not 1D, it's 0D; it should be [-1]."
Add tf.sysconfig.get_compile_flags() & tf.sysconfig.get_link_flags() for custom operatorsThe goal is to make custom operators compilation a breeze.
Remove unneeded branch checkNo description provided.
"model_dir keyword argument repeatedIn https://www.tensorflow.org/tutorials/wide#adding_regularization_to_prevent_overfitting, the code snippet repeats the model_dir keyword argument, causing a syntax error if you try to run it (SyntaxError: keyword argument repeated).  This removes the second occurrence of the model_dir param."
Branch 171047652No description provided.
Make code Python 2 and 3 compatibleUpdate the Python implementation so that both Python 2 and Python 3 environment can execute
Branch 170960975No description provided.
Fix tf-signal tests on pip packages.No description provided.
"Merge fixes related to Bazel depset to r1.3 branch.Currently unable to build branch r1.3 with recommended version of Bazel. Cherry-picking two
changes that change set to depset within tensorflow and within a library Tensorflow depends
on."
Branch 170919783No description provided.
Rename set to depset (#13443)Fixes #13377
Fixing a typo in the docs for math_ops.No description provided.
Branch 170899880No description provided.
GetConvolveAlgorithms fixup take 2Attention @tfboyd
Merge pull request #1 from tensorflow/masterMise ﾃ  jour
Remove unnecessary specification for default kernel nameThis line doesn't effect in any cases.
remove warning for forward declreplace struct with class to remove warning.
Clean up our libcuda stub when building the GPU Docker containerA sensible suggestion by @flx42.
Branch 170752644No description provided.
Simplify random selection of context words for word2vec exampleUse random.sample to simplify random selection of context words
"sampled version of sparse_softmax_cross_entropy_with_logitsFollowing from the already implemented sampled_softmax_loss, this is a very similar implementation that performs sampling for sparse_softmax_cross_entropy_with_logits."
Add support for CUBLAS_TENSOR_OP_MATH in fp16 GEMMCan one of the admins verify this patch?
Updating the install sources file with a supported configs tableThis is an attempt to fix b/28192343. It will also help with issues like #13377. I'm completely open to all criticism with moving it somewhere else and formatting.
"Fix up compatibility issues with bazel >= 0.6.0In this pull request, set() is simply replaced with depset() since set() is obsolete in bazel >= 0.6.0."
Update seq2seq.py: To avoid error thread.lockIssue: Can't pickle thread.lock object#11157
Rename set to depsetset is deprecated in Bazel starting from 0.6.0.
"Fix typosThis PR fixes some typos: Explicitely, ouput, Dimensiton, occurences, partiton, unknwon, and Summmary."
Branch 170594836No description provided.
Branch 170584354 - 2No description provided.
"Fix typosThis PR fixes some typos: correclty, lenght, identifer, and obejct."
Initialize fetchTensors to fix NullPointerExceptionfetchTensors should not be null. This was broken by the refactoring in 244b8d6
Support weight_column for time series regressorNo description provided.
Branch 170584354No description provided.
Java API Generics Phase 3.Can one of the admins verify this patch?
Fix bug: variables outside won't update in DNNLinearCombinedRegressorThis fix is an proposal for #13419
fix typoNo description provided.
updated instructions for libcupti for CUDA Toolkit >= 8.0No description provided.
Branch 170208694 2No description provided.
Branch 170208694No description provided.
Branch 170207994No description provided.
R0.12No description provided.
Branch 170213262No description provided.
Branch 170207579No description provided.
"Changed hyperlinks from http to httpsChange links in ""Windows CPU-only:"", ""Windows GPU:"" and ""Android:"" https."
Branch 170216177No description provided.
"Allow `tfexample_decoder.BoundingBox` to be created from dense tensorModife the .tensor_to_items() method on the BoundingBox so that it
can be created from dense tensors, as well as sparse tensors (which are
currently required)."
Branch 170200011No description provided.
"Add `tfexample_decoder.Image` support for `shape_keys`Allow for the shape of an image decoded with thetfexample_decoder.Image decoder to be determined by fields in the
serialized example being decoded. The functionality mirrors the use of
the shape_keys kwarg of the Tensor decoder."
"Fix the Docker GPU build (adds a symlink + library path)I was running a slightly modified build script the last time this passed, so you may want to test it again."
"Allow LMDB to be opened by multiple readers simultaneouslyThis PR is basically a one-line change by adding MDB_NOLOCK flag. Since LMDBReader is read-only, we don't need locks. LMDB by default creates a lock file in the same folder which prohibits the database to be opened by others."
"Fix LMDBReader crash due to not fully cleanupThis PR fixed a bug in LMDBReader cleanup. Some pointers were not reset and caused corruption when the LMDBReader opens the next file.
A test case is constructed to verify the case."
Branch 170226583No description provided.
Change tmp filename behavior in contrib.ffmpeg to support simultaneous decodesEncountered ill-defined behavior when trying to decode two audio files in a single call to sess.run. Changed GetTempFilename to use mkstemps instead of getpid. Old behavior demonstrated below:
Branch 170136839No description provided.
Branch 170099782No description provided.
Branch 170050380No description provided.
Branch 170073555No description provided.
Branch 170086044No description provided.
Add fp16 support to fused batchnorm opAttention @zheng-xq
Branch 170517511No description provided.
Branch 170096704No description provided.
Branch 170349499No description provided.
Fix of issue #13164Fixes #13164.
Add explanation to assist in parameterized_docker_build.sh useExplains that using parameterized_docker_build.sh is dependent upon running from an appropriate developer image.
Cifar10No description provided.
Revert \Updating the gemmlowp hash and location for cmake build in master.\Reverts #13369
Updating the dockerfile with the new LD_LIBRARY_PATH.No description provided.
Updating the gemmlowp hash and location for cmake build in master.No description provided.
tensorflow/go: add in LDFLAGS to support androidThis is required since the libtensorflow_inference.so generated by contrib/android links against these libraries. Go requires these to be specified when compiling against it.
Remove the extra define from xsmm_backwards config rule.No description provided.
Branch 170368495No description provided.
Fixed typo in function documentationsry.. recognized this tiny typo..
Adding links to the Windows GPU nightly binaries and build histories.No description provided.
R1.3sadas
Update protobuf to 3.4.1This change is required for compatibility with the upcoming Bazel 0.7. There seem to be no issues in tensorflow itself but there are in the old version of the protobuf repository.
"Make tf.pow work for integer inputs.Currently tf.pow freezes if both inputs are integer tensors and y contains negative values. For example
the calltf.pow(5, -2).eval()
never finishes."
R1.3No description provided.
Extracting out tf.bin_values_fixed_width from tf.histogram_fixed_width.No description provided.
"added scope filtering to summaries.merge_allI found a use for filtering the ops returned by merge_all by scope, so this request implements that change. You could also pass the collection to merge, but I thought this was a bit nicer."
Give accumulate_n op a gradient (version 2)This pull request is a restructuring of the changes in #13022 to address high-level comments. Two major changes to call out vis a vis the previous PR:
"[Windows] Export nsync symbols from the Python extension DLLSome extension modules (e.g. _gru_ops.dll) expect to be able to link against nsync symbols in the Python extension DLL. Any use of tensorflow::mutex in an extension module will rely on these symbols being exported. However, these are not currently exported as part of the Windows build."
Branch 170099939No description provided.
<DO NOT MERGE> experimental PRNo description provided.
Disable broken MaxPool<qint8> and MaxPoolV2<qint8> kernels on Windows.This is intended to unbreak the Windows GPU build (#13065).
eager: Correctly convert a list of Dimensions to a TFE_TensorHandleNo description provided.
Branch 170043510No description provided.
typo fixfound while trying to compile on ARM based Raspberry Pi 2 in branch r.1.3
"Support TensorArray in BeamSearchDecoder state.#13208 attempted to fix #13154 by representing the alignment_history field with a Tensor instead of a TensorArray. However, @ebrevdo pointed out that this approach led to a quadratic time and space overhead."
Rdma params configurationNo description provided.
"[XLA] Register the input arguments with the XlaAllocatorIf an op returns one if its inputs as an output, then the XlaAllocator needs to be able to notice the buffer and find the original tensor."
Branch 169998131No description provided.
Add int64 support for `tf.reduce_max` on GPUThis fix tries to address the issue raised in #13293 where tf.reduce_max on GPU does not have int64 support.
GitHub only 1.3.1 release.No description provided.
Add optional CheckpointSaverListener to MonitoredSessionNo description provided.
"TF Docs fix for 1.3*fix broken links, add links check to sanity (#11394)"
Re-instate the plugin BUILDThis change re-instates the plugin BUILD link which was removed in commit 7de939b
"MonitoredTrainingSession supports partial restore from checkpointAs mentioned in #6604 , MonitoredTrainingSession is preferred to Supervisor, I think it is useful to support partial restoration from checkpoint files in MonitoredTrainingSession."
Relex restrictions on `tf.foldr` and `tf.foldl`This fix tries to address the issue raised in #12019 where tf.foldr and tf.foldl only accpet first shape dimensions be identical for all list elements.
Run as the host user in docker when running docker in CI scripts.No description provided.
Fix inconsistent tensor ranks in _linear_predictionsWhen mixing sparse feature columns and dense tensors of features _linear_predictions behave abnormaly without this fix (and is unusable).
"Refactoring of canned estimatorsClass specific model_fn() used by each canned estimator are replaced by common_model_fn() and common_combined_model_fn() functions and moved to utils.py, together with common classifier_head() and regression_head() functions. Canned estimators are then refactored to use these common functions which simplified their code and increased readability."
"Extracted time_series_regression_headExtracted the head for time series estimators. This is the baby step to make sure the implementation is modeled after the ones in tf.estimator.canned.
cc: @allenlavoie @martinwicke"
Add multitask optimizer wrapper and global norm gradient clipper#12453
Fix several issues with `go fmt` and `go lint`This fix fixes several issues related to gofmt and golint based on https://goreportcard.com/report/github.com/tensorflow/tensorflow
"Fix polynomial decay with cycle for global step=0For polynomial decay with cycle=True the learning rate at
step 0 becomes NaN, because in the process of calculating it we
devide by 0. This change should fix it, by setting the multiplier
for the decay steps to one for global_step=0."
"Fix docs for tf.tanh, tf.sigmoid and tf.tan.The API docs incorrectly state that tf.tanh accepts int32
or int64 inputs. This was referenced in issue #10376, however,
the fix to #10376 only removed the reference to qint32. A look
at the implementation in cwise_op_tanh.cc shows that int32 and
int64 are indeed not supported. This fix removes them from
the API docs."
ENH: add Relu6GradGradFix #13144.
ENH: row_shape supports unknown dim in Dataset.dense_to_sparse_batchsee issue: #13216
Branch 169770126No description provided.
Updating install_golang.sh - bumping to 1.9No description provided.
"Implement SpatialPyramidPoolingPR Inspired from the work of @luizgh and @RikHeijdens.
References:"
Changed output directory for Pi CI build to fix permissions problem with nightliesNo description provided.
Fix cudnn v6 function being used in cudnn v5 buildFixes #13249
Add cmake generated files/dirs in Linux to .gitignoreThis fix adds cmake generated files in Linux to .gitignore
GetConvolve*Algorithms return tensor-op algosAttention: @jlebar and @zheng-xq
"Fix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change that's no longer neededNo description provided."
Update RELEASENo description provided.
Fix broken link for object detection modelIn tensorflow/models repo the models have been moved under the directory research.
"Refactoring of canned estimatorsClass specific model_fn() used by each canned estimator are replaced by common_model_fn() function and moved to utils.py, together with common classifier_head() and regression_head() functions. Canned estimators are then refactored to use these common functions which significantly simplified their code and increased readability."
Add op `tf.contrib.ffmpeg.decode_video`This fix tries to address the request raised in #6265 where it was not possible to decode video like the existing op of decode_audio.
Branch 169712715No description provided.
"Fix Windows build after 5c7f9e316d8c7735308a217310350d416d7498ccFix http://ci.tensorflow.org/job/tf-master-win-bzl/1629/console
Dynamic linking on Windows is not well supported yet, we can only still use the monolithic for now.@gunan"
Add ReceptiveField class and coordinate conversion methods.This PR adds a ReceptiveField class which supports coordinate conversion from the input to the feature space and vice versa while maintaining backwards compatibility.
Set macro instead of surpressing the warning for third_party/zlib.BUILD.As described in issue #13188.
Fix documentation for `tf.case`No description provided.
Branch 169689743No description provided.
Getting rid from unnecessary call 'inspect.stack'Getting rid from unnecessary call 'inspect.stack' in making of decorator in 'tf.contrib.framework.add_arg_scope'
"protobuf download Checksum was changedThe following error caused by protobuf.
Checksum has changed."
Branch 169629054No description provided.
"Fixes for Raspberry Pi cross-compilation issuesThe nightly builds have been failing recently, and it's due to a BoringSSL change that brings in system headers on our cross-compilation Docker image. I've worked around this my moving the system headers for OpenSSL, and made a couple of other changes to improve reliability by ensuring the workspace is clean before starting."
Remove github mirror links for all TF workspace dependencies.Only use bazel mirror for github mirrors.Fixes #12979
update protobuf archive checksumFix#12979
Fixes #12401: Use traceback instead of inspect for frame information#12401 - import tensorflow.contrib.layers takes a very long time
Changed TanhGrad() operation definition with respect to documentationThis should resolve #12902
old build_all_android.sh -X be deletedNo description provided.
Use Tensors instead of TensorArrays for storing AttentionWrapper's alignment_historyI would like to propose this fix for #13154.
"Revert \Revert \EHN: csv supports missing value (#13008)\ (#13051)\issue: #13007
CF PR: #13008"
R1.3No description provided.
Updating the README with the correct nightly links to tf_nightly.No description provided.
Branch 169436243No description provided.
Branch 169431251No description provided.
"Allow partial shape inference for `tf.nn.conv2d_transpose`This fix tries to address the issue raised in #8972 where it was not possible to infer a partial shape fortf.nn.conv2d_transpose. In case any dimensions are not defined, the shape will be totally undefined."
fixed doc typoNo description provided.
Non-scalar Multinomial drawsThis PR tries to fix the issue in #12804 where supports total_count to be a non-scalar tensor and broadcasts by map_fn.
Fix random crashes in SessionRun()This patch fixes #13129
A fix for https://github.com/tensorflow/tensorflow/issues/13129The problem was with usage of runtime.SetFinalizer() in golang bindings. When a variable become unreferenced GC can harvest it any moment after. According to this https://tip.golang.org/pkg/runtime/#SetFinalizer:
Non-scalar Multinomial drawsThis PR tries to fix the issue in #12804 where  supports total_count to be a non-scalar tensor.
Updating protobuf and llvm hashes.No description provided.
"Branch 169299199I needed a file from master asap, so I thought I'd push."
Fixing protobuf bazel workspace issue.Removing the github mirror which has the wrong sha hash.
"Refactoring: Pull out repeated shape-related code into shared functionWhile looking for some example code to initialize an op's output shape from a shape provided in an attribute, I found a six-line snippet that is repeated in seven different places. It looks like some copying and pasting has happened in the past. This pull request pulls that shared code into a single function in common_shape_fns.cc."
Eigen BiasAdd and BiasAddGrad Fix for NCHW Format.No description provided.
Fix GRUBlockCell parameter naming inconsistencyThis fix tries to fix the issue in #13137 where parameter cell_size is used instead of num_units. This is inconsistent with other RNN cells.
"Improve input tensor structure validation algorithmExisting code that does input tensor validation is unable to check slices sizes properly.
Consider this input:[][][]float32{{{1, 2}, {3, 4}}, {{1}, {3}}, {{1, 2, 3}, {2, 3, 4}}}
NewTensor() currently treat this input as valid one.
This patch fixes this behaviour and also simplifies the check by removing unnecessary for cycles."
upgrade_tensorflow_to_latest_packageCan one of the admins verify this patch?
Fix cmake build issue on LinuxThis fix tries to address the issue raised in #12018 and #13061 where the cmake build on Linux caused error.
"[GDR] Eliminate several unnecessary sync barriersFollowing the plan I mentioned in #12361 (comment), I have refactored out the sync wrapper around copy between CPU and GPU."
fixed a typo in the documentationfixed a typo in the documentation
Branch 169166848No description provided.
MKL-DNN open source integration.This is a modified version of tensorflow to integrate with MKL-DNN open source. This pull request has one op (convolution) and the build setup to build MKL-DNN as a third party library.
Increasing the minor version of the nightly version by 1.Expedited patch via github.
Reverting the version back to 1.3. Sync rotation reverted the revert.No description provided.
Added missing error checkNo description provided.
Replace `WIN32` -> `PLATFORM_WINDOWS`I was trying to make cmake build on Linux (#12018/#13061) but noticed that WIN32 was used in tensorflow/core/lib/jpeg/jpeg_mem.cc.
Fix argument name mismatch in FinalBeamSearchDecoderOutput docstringNo description provided.
R1.3good
More robust sed regex syntax in compile_nsync.shThe syntax \t for a tab character in sed is not standard. That escape is a GNU sed extension.
Add py3 support for speech commands exampleCan one of the admins verify this patch?
"Fix typosThis PR fixes some typos: Tenor, tenor, and varibles."
Remove multiple includes of gpu_tracer.cc in Makefile buildCurrently the tensorflow/core/platform/default/gpu_tracer.cc is included by both
Fix test breakage on Mac Python3 due to assert_called()Replace assert_called() with self.assertTrue and called.
"Add new op BytesInUse, similar to MaxBytesInUseAdding BytesInUse
This is more useful than MaxBytesInUse for getting peak memory for a given session.run call because the latter gives maximum memory usage over lifetime of allocator, which can span multiple session.run calls/multiple session objects"
Add implementation of `conv1d_transpose`This fix tries to address the issue raised in #8729 by providing the implementation of conv1d_transpose.
Fix incorrect error message in `conv2d_transpose`This fix fixes the incorrect error message in conv2d_transpose where value.get_shape()[3] should be changed to value.get_shape()[axis] for input_depth in NCHW format.
Merge pull request #1 from tensorflow/masterupdating from original
Update `tf.nn.in_top_k` to use v2 kernel.This fix is a follow up to PR #11197 so that tf.nn.in_top_k uses V2 kernel now.
Branch 168957558No description provided.
Branch 168917534No description provided.
Revert accidentally changed android_test_proto_lib dep to protos_ccandroid_test_proto_lib is a Google-internal target
"Java/Android: Fix bug introduce in #12643The contents of the graphDef file weren't actually being read into the
byte array."
Revert \Updating default version for building from master source.\Reverts #12970
Unreachable input gradientsThis PR checks if all the inputs are reachable from the outputs during AddSymbolicGradients.@skye would be the best person to review this task as she asked me to add a TODO during a previous PR.
Use AllClose instead of AllEqual in layers testsCan one of the admins verify this patch?
"[Docs] tf.constant docstring: Whitespace fixThis should allow the ```python section to properly render on the API pagehttps://www.tensorflow.org/api_docs/python/tf/constant
which (at the time of writing) displays the fences in plain-text."
Fix typo in math_ops.pySubscripts in documentation of tensdordot function were not enclosed in curly braces which led to only one of the three subscripts being lowered.
check invalid string type for dest_nodes in extract_sub_graphFix #13047.
Update mnist beginners softmax variablesThe usage of variable 'x' when describing the softmax function can be confusing to newcomers since 'x' is used immediately prior to represent the unweighted input. Continuing the usage of 'evidence' helps with continuity.
Add support of `drop_negatives` for `tf.unsorted_segment_sum`This fix tries to address the issue raised in #478 by adding the support of drop_negatives for tf.unsorted_segment_sum so that it is possible to skip entries (when index = -1)
R1.3No description provided.
Branch 168776302No description provided.
Updating readme to show Windows binary support.No description provided.
Revert \EHN: csv supports missing value (#13008)\This reverts commit 36c5f21.
Optimize batch matrix transposition for narrow matrices.This is an improved version of matrix transposition that specializes in the case when the matrices to be transposed are narrow. This is a preliminary implementation and I hope to get some feedback before further optimizing this implementation as it would likely entail great deal of efforts and patience.
"Update readme of CRFPR 12056 implemented CRF decoding in tensor way, but the README hasn't been updated. This PR got this done."
"docs: Fix Anaconda environment creation stepThere is a bug in the install instructions for Anaconda users.  Before you can use pip to install tensorflow, you must first install python (which includes pip) to the new environment.  Otherwise, the user will accidentally use the system's pip, and tensorflow will be installed to the system python instead of the intended environment."
delete dummy 'r' in front of annotationI just delete this dummy r character in the front of multi-line annotation with the newest version.
"Update workspace.bzl to use latest farmhash commit to support s390xWe had raised an issue in google/farmhash master earlier for big endian. However due to restructuring in the code via latest commits, the support for s390x needs to be explicitly added.
This support is added through this commit."
delete dummy 'r'I just delete this dummy r character in the front of multi-line annotation.
Update README.mdNo description provided.
"persist nsync.a across different platform buildsPersist nsync.a across different platform builds via copying them into gen folder, then later make can manage them (clean or something else). nsync.a is required when the built tensorflow static lib is linked by other libs, while currently the nsync.a is cleaned from each build."
"Get sysroot path in a robust way for nsync ios buildThe sysroot path in nsync ios build is hardcoded. this PR changed it to use xcrun, just like how other build scripts did."
Branch 168619288No description provided.
"Give accumulate_n op a gradientThis pull request addresses issue #10607 by adding a gradient to the existing accumulate_n operator. I followed the approach suggested by @alextp: rewrite accumulate_n as an atomic op which has a gradient defined for it and which gets rewritten by the runtime into the current implementation. Previously, this op had been implemented in Python as a constellation of lower-level ops, some of which are not differentiable."
Fixes in MKL add_n  to address several regressionsFixed failures due to scalar and empty tensors
"Elastic Average optimizerI have implemented a new distributed optimizer ""ElasticAverageOptimizer"". It is mentioned in the following issue:#12472"
Merge pull request #1 from tensorflow/masterpull_master_6.19
"EHN: csv supports missing valuetf.decode_csv support NA values, see #13007"
Branch 168439341No description provided.
Branch 168392949No description provided.
"error while validating the installation of tensorflowWhen I try to validate installation, following error occur. How can I solve this error ?"
boringssl sha256 checksum mismatchedissue #12986 .
"Correct minor typo in substr docs exampleThis fixes a very minor typo.
Python strings should be started and ended with same character."
"[ImgBot] optimizes imagesHey there. I've just optimized all of your images. They are the same dimensions and quality as before, only they take up less space now."
"fix ExponentialMovingAverage documentation regarding control_dependenciesThis PR fixes the documentation for ExponentialMovingAverage so that ema.apply([var0, var1]) is evaluated within tf.control_dependencies([opt_op])."
"support passing in a source url to the mnist.read_data_sets functionIt would be great to be able to pass in an alternate source url to the mnist.read_data_sets function, to make it easier to use 'fashion mnist' etc.
Does this seem like a reasonable way to do it?"
Update docs symposiumNo description provided.
Windows script docsNo description provided.
Add half-precision support for `DepthwiseConv2dNative`This fix tries to address the request raised in #12327 so that float16 is supported for DepthwiseConv2dNative
Also accept non-k8 CPU types in build pip package.Fixes #12735
Add utf8 support for string_splitThis fix is an effort to try to address the request raised in #11399 where it was not possible to split utf8 strings with tf.string_split.
Updating default version for building from master source.Making the default build from source version 1.4.0dev. The whl files that are built will be 1.3.0devDDMMYYYY.
Fix minor typo in Programmers guideFix
"Cover the numpy-ndarray bug on s390xNumPy's low-level method for instantiating an array (ndarray constructor) is behaving differently for s390x architecture. Providing the data type of the array's elements explicitly is solving the issue. Please refer to issue#11431 for the detailed discussion. Though this a bug with NumPy implementation, adding data type for array elements should be safe."
R1.3No description provided.
Branch 168186374No description provided.
"PIC flag for Makefile-built Android Static LibraryCurrently if we build a shared lib with ndk = r12b and android-api = 21, and the shared lib is linking Makefile-built tensorflow android static library, the android ndk hints that the tensorflow and nsync lib is not complied with -fPIC option, this PR fix the problem. It only impacts the android build."
Add support of `axis` for `tf.unique`This fix tries to address the request from #11575 where axis was not supported for tf.unique.
random_crop option to return the crop offsetI have a segmentation application where I need to know the selected random crop offset to correctly crop the label image in the same manner. This PR adds the random_crop(get_offset=True) option to return that additional information to the user.
Add float64 support for conv1d and conv2dThis fix tries to address the issue raised in  #12941 where float64 for conv1d and conv2d is incomplete.
Minor wording change in timeseries module's READMENo description provided.
"change cnn_mnist example to use Adam optimizer; added a 'loss' summaryI remember that other (non-estimator) versions of this example used the Adam optimizer, which has nicer convergence -- could we use it in this example?
Also, I added a summary for loss, so that it would show up on TensorBoard."
"Added support for JVM callback opsThis PR is a proposed workaround for a limitation related to my Scala API and discussed in #12895 and #12915. Given that we currently cannot load external op libraries through languages other than Python, this PR adds a JVM callback op to the main TensorFlow library. I understand this is not ideal and may not be acceptable but it's just offered as a possible workaround."
"Reverse change eb75ded6 so that internal tests will pass.As support for int64 global steps is not ready in TPUs, I am reversing this change so that our internal performance and regression tests will pass."
"Improvements to Java API handling of datatypes and arraysThis is a set of connected changes broken out from #11535 (Generic Java API) and improved
a bit further; still synergistic with that PR  and should allow whittling that PR down toward a digestible size."
"Elastic Average optimizerI have implemented a new distributed optimizer ""ElasticAverageOptimizer"". It is mentioned in the following issue:#12472"
Corrected hyperlink for audio training tutorialNo description provided.
"mmap fileI added a memory mapped file option for the model file. Since the model files have to be copied out of the apk due to assets directory readonly status and inability to create the FileChannel directly, it is assumed that you have done so to internal storage with the same context that is passed into the overloaded constructor. Internal storage eliminates problems of SD card not being present or M runtime permissions requests but is also in danger of being full etc. Expansion files are the only other option, but this requires a download from the play store, which is an extra step. I therefore did the most simple thing."
Workaround for NVCC 9.0 internal errorFixes 'Internal Compiler Error (codegen)' encountered when building with nvcc 9.0.
"Changed number to float in documentation example \Get Started\ in order to be consistentStumbled upon this while going through the ""Get Started"".
added a dot to the 7 to make clear it's a float (like every other number)"
Corrected description of what padding SAME doesThe description read that the padding=SAME adds zeros to the output tensor. It should say that it pads the input tensor.
"Load op library fixThis fixes the issue with external bindings to TensorFlow loading custom op libraries. It does so by exporting all the relevant symbols in libtensorflow.so. Note that these symbols were there but they were hidden and we could not link to them previously. Currently, with this fix, developers of custom op libraries can link at compile time using libtensorflow.so, thus avoiding the need for -undefined -dynamic_lookup on Macs (which also currently doesn't work as a solution on its own) and the need for loading with RTLD_GLOBAL (which also does not work on its own, given that pywrap_tensorflow.so needs to be loaded with that flag, given it's the own exporting the necessary symbols). I've tested this on my mac and it resolves the issue."
Fixed typo in tf.metrics docs.No description provided.
Branch 167998450No description provided.
docs: Fix link to tf.estimator.DNNLinearCombinedRegressorNo description provided.
Don't check patch command on WindowsFix Windows build:http://ci.tensorflow.org/job/tf-master-win-bzl/@gunan @yifeif
Add batch layer normalization support in DNNClassifiersNo description provided.
Branch 167933991No description provided.
MKL build broken / Proposed fix hereThe CPU version of TensorFlow wasn't building because the MKL was broken; it was broken because a merge conflict somehow made it all the way through to here.  See diff (!).
"Fix broken link in Estimators.Move Estimators to beginning of Prog. Guide.
Change title of Datasets unit."
Rearranging statements#12857
Fixed #12797: uint8 now has a lengthThis small change allows tensors of uint8 to be constructed from the Java API. I am leaving the new test case of it over in the phase2 PR (#11535) because that test case relies on other changes to Tensor.create.
"mmap fileI added a memory mapped file option for the model file.  Since the model files have to be copied out of the apk due to assets directory readonly status and inability to create the FileChannel directly, it is assumed that you have done so to internal storage with the same context that is passed into the overloaded constructor.  Internal storage eliminates problems of SD card not being present or M runtime permissions requests but is also in danger of being full etc.  Expansion files are the only other option, but this requires a download from the play store, which is an extra step.  I therefore did the most simple thing."
Fix typos in contrib.estimator.extenders.pyNo description provided.
"[OpenCL SYCL] Add support for triSYCL in TensorFlowAdd the ability to use triSYCL as the SYCL implementation in TensorFlow when OpenCL SYCL support is enabled, relates to #22"
adding missing dep on jdk for gen_ops.bzl (again)Can one of the admins verify this patch?
PREP: migrate ErfGrad to c++ sidesee #12686.
Update documentationMade explicit HTTPS calls
Fix minor typo in Programmer's Guide docsChange my_row_vetor to my_row_vector in the Tensors guide.
Branch 167812735No description provided.
R1.3update
"Fix issue in batch_normFix issue in batch_norm where center=False, data_format='NCHW' and zero_debias_moving_mean=True, and add a test case for it."
Branch 167800256No description provided.
R1.3No description provided.
Fix a path in README.mdNo description provided.
"Spatial pyramid pooling layer implementation.PR Inspired from the work of @luizgh and @RikHeijdens.
References:"
Removed unused imports in layers modulesNo description provided.
Make saver_test pass on Windows Bazel BuildThis is a workaround for #12844
R1.3No description provided.
BLD: precheck patch command before invokedThe PR is opened to fix #12821.
"Add SONAME for Makefile-built libtensorflow_inference.soCurrently if we build our own shared library that depends on Makefile-built Tensorflow shared library, our built library is linking the Tensorflow library with absolute path. So added a SONAME to Makefile-built Tensorflow shared library to resolve this problem."
"memory mapped fileThis uses a FileChannel to map the model file for slightly faster IO. Because of the difficulty with assets in android, the files must be copied outside of the apk first and then read in.  I did not include that part, deciding it would be the onus of the parent application.   ctx.getFileStreamPath(model) is called in a static factory alongside what is already there for backward compatibility.  This means files must have been copied to the internal storage per ctx.getFilesDir().   Also it passed in the Application for context, taking care to recreate it as needed for reclaimed memory.
This is a preliminary example of what could be changed.  I am disappointed that the mmap implementation in Java is very limited.  The byte[] of array() is not written to work with
MappedByteBuffer oddly, and asking for loaded state with load()  can kick off additional IO calls.
It is working in my library but I will also continue to improve on it. I  also plan to add a native jni version as well which makes use of the mmap util to see which runs faster.
I backed out my static changes and will see if that works in another PR."
mnistNo description provided.
Update NCCL and Eigen sources for CUDA9Also fix presumably outdated manifest_proto_py_pb2 and pandas dependencies.
"Clarified difference between FIFOQueue and StagingAreaClarified that StagingArea doesn't guarantee ordered delivery, contrasting tf.FIFOQueue"
"Float16 (half or Eigen::half) for conv3d opsRegistrations of conv3d operations with fp16,  fp16 for batch_norms in tf.layers and tf.contrib.layers.  Related issue: #11341"
Branch 167632896No description provided.
Fix issue in tf.image.extract_glimpseThis fix tries to fix the issue raised in #2134 where tf.image.extract_glimpse does not work as expected when centered=False and normalized=False
"Skeleton code for annotation processor.Add build changes and skeleton code (with test harness) for
the Operator annotation processor. This change focuses on build
and test-related changes, and generates an empty Ops class."
adding missing dep on jdk for gen_ops.bzlsandboxed builds for this target are broken with the following error:
Branch 167604306No description provided.
Update relaxed_onehot_categorical.pyFixed: default dtype in class documentation
"Install name fix for libtensorflow.soThere exists a problem with the built shared library for Mac. If ones creates a shared library that depends on libtensorflow.so and distributes it in a folder, along with libtensorflow.so, then the Mac linker will failed to load the library, unless libtensorflow.so is in DYLD_LIBRARY_PATH. This is problematic when libraries are distributed together as a package (e.g., in the context of JNI). From what I read online, this can be fixed using @rpath. This is what this patch is about and it seems to work in my experiments."
Fix typo & Clarify commentThis edit is to avoid misusage of tf.Profile by a developer using it for the first time. See the scenario below:
Fix a typoFix a typo in comments
"Fix compile_nsync.shcompile_nsync.sh is not workable with android x86 arch, here is the fix by replacing arm specific arch option."
Support more Android arch in Makefile buildAdds support for various Android arch in Makefile build.
"Cleanup workUpdated summary_op_util.py, head.py,  estimator.py, lookup_ops.py"
Change `dim` to `axis` for cosine_distanceThis fix changes  dim to axis for cosine_distance so that the args are consistent with other methods in TensorFlow.
"Fix incorrect error message in TensorArray.scatterThis fix tries to fix the issue raised in #12403 where the error message in TensorArray.scatter is incorrect. Specifically, in"
Revert \Add vmodule support to TF OSS logging.\This reverts commit 072b0c9.
Add a missing template explicit instantiation of SetZeroFunctorTo fix a build error on Windows:
"Tensor roll op implementationCloses #10761
Added a tf.roll op that works similarly to numpy's np.roll. This was a feature requested in #10761 and was marked as contributions welcome."
Exported eager API TFE_* symbols in the dynamic libraryDicussed in #12784.
"Removing /contrib/tensorboard and its referencesNew pull request to master branch, as requested at #12768."
Branch 167401527No description provided.
Fix undefined reference to libtensorflow-core.aAdjust gcc parameter order to fix linker error. Tested on gcc version 5.4.0 20160609 (Ubuntu/Linaro 5.4.0-6ubuntu1~16.04.4).
Fix undefined reference to libtensorflow-core.aAdjust gcc parameter order to fix linker error. Tested on gcc version 5.4.0 20160609 (Ubuntu/Linaro 5.4.0-6ubuntu1~16.04.4)
Fix undefined reference to libtensorflow-core.aAdjust parameter order to fix undefined reference error.
Formatting typo.No description provided.
"[android demo] add check to SpeechActivity.java for call requestPermissions only with API>=23requestPermissions call possible only with API>=23minSdkVersion set to 21 for the Project.
Hence check required, otherwise, on devices with API 21 and 22 we'll get the error:"
"Allow tfcompile_flags to be a listThis fix tries to fix the issue raised in #12767 where
it was not possible to specify tfcompile_flags as a list:"
Removing /contrib/tensorboard and its referencesThe only reference to /contrib/tensorboard was in /contrib/init.py and /contrib/keras/python/keras/callbacks.py.
Update monitors.pyRefactor contrib
fix typofix the meaning of num_units in BasicRnncell
Removing extra spaceNo description provided.
Fix issue of `name` used in `build_default_serving_input_fn`This fix tries to address the issue raised in #12755 where the name used in build_default_serving_input_fn is not a valid variable scope:
"Use `keepdims` and maintain backward compatible for `keep_dims`This fix tries to address the issue raised in #6815 where
both keepdims and keep_dims were used with inconsistency."
"Avoid gcc7 memcpy build error by updating BoringSSLTensorflow produces this build error with gcc7 due to ambiguous memcpy inlining in all versions of BoringSSL prior to google/boringssl@17cf2cb  on Dec 12, 2016:"
"In TensorArrayPackOrGatherOp, handle num_indices == 0 better.Namely, also consider the shape stored in the TensorArray object, since TensorArrayGatherV3 ops created as part of gradient computation won't have the element_shape attr set."
Export C API symbols of _pywrap_tensorflow_internal.so on OS XThis follows up #10469 by exporting C API symbols on OS X.
Fix step numbering in Linux install docsOn this page the numbering for the steps seems to be off:https://www.tensorflow.org/install/install_linux#InstallingVirtualenv
Merge pull request #1 from tensorflow/mastermerge
"cmake external projects: pass --libdir to configureIf --libdir is not set, configure will install into a subdirectory lib64 on some platforms, while the build-system has lib hard-coded to find the static libraries later."
PREP: migrate lgamma gradient to c++ sideIt's my first attempt to contribute to C++ side. Hence the PR is opened early to get feedback.
"Add uint16 support for tf.decode_rawThis fix tries to address the request raised in #10124 where uint16 support for tf.decode_raw is needed. tf.decode_raw already support half, float32, float64, int8, int16, int32, int64, uint8."
Change `dim` to `axis` for tf.nn.softmax and tf.nn.log_softmaxThis fix tries to address the issue raised in #7391 where dim was not changed to axis for tf.nn.softmax and tf.nn.log_softmax.
"Fix dtype for streaming confusion matrixCurrently, dependents of _streaming_confusion_matrix don't actually work correctly with floating-point weights."
Branch 167045325No description provided.
Update CUB version in the cmake build.No description provided.
MklReshapeOp fix for TensorShape int64 supportMklReshapeOp fix for TensorShape int64 data type.
Fix for the IOU metricPreviously the IOU metric under estimated the true value as described here
Remove initialize_all_tablesFinishing TODO(yleon): Remove this function.
Verbs fix: Removed Dependency on Duplicate Recv FlagThis PR is a response for #11825
Merge pull request #2 from tensorflow/masterUpdate from origin
Merge pull request r1.3 from tensorflow/masterUpdate from origin to r1.3
Fix duplicate symbol CreateGPUTracerEvCloses #12699
"Addn mklml kernelThis branch contains the implementations for Intel MKL AddN kernel.
While the number of inputs are two, tf.add_n will call the MKL AddN kernel if compiled with MKL."
Updating docs to show support for Python 3.6 in Windows. (#12687)Cherrypicking into r1.3 for docs gen.
Updating docs to show support for Python 3.6 in Windows.No description provided.
Update rules_closure to 0.4.2This change is required for compatibility with Bazel 0.6+
"Add TensorFlow User Group Utsunomiya into TensorFlow Communities Around the World.We operate TensorFlow User Group Utsunomiya sponsored by GCP Community Support.
Please add to TensorFlow Communities list!"
"modify lambda capture list, and prohibit copying objects.Can one of the admins verify this patch?"
Add eager_pip to simple_console_for_windows.zipTo fix unitest errors in tf-master-win-bzl build
Fixed code formattingNo description provided.
Use corret SDK paths from xcrunCloses #12650
"Update __init__.py-Add Python formatting for TF website
-Refactor comment
-Import statements are shorter than 80 chars, so pylint should not need to be suppressed here
-Add python formatting to correct website formatting away newlines"
Fixing typo in default_name argument for name_scopeLooks like a typo to me and I think this could lead to unexpected behavior.
add name param to ctc_opsNo description provided.
"TensorFlowInferenceInterface Constructor with GraphAdded a new Constructor with Graph object only, it would be very useful for custom graph loading. Combining with #12668, user can even perform custom graph loading in C/C++ via Android NDK as well."
Make Graph(long) Constructor PublicIt would be very useful when user wants to do custom model loading in C/C++ via JNI then return the handle to Java and use this constructor to wrap/maintain the graph object.
"c++ gradients for mean and sumGradients for the math ops, Mean and Sum. Ported from python:"
"Conv2DGrad & MaxPoolGradHelperGradients for the nn ops, Conv2D and MaxPool. Ported from python:"
"Fix markdown syntax mistakesAdd a space after ##, ### and ####."
"Adding a decode to support Python 3.5 on Windows.Fix this error: python 3.5: TypeError: a bytes-like object is required, not 'str'"
Element wise optimizationsAdded MKL element-wise ops that utilize eigen ops as their back-end. Also added an input-conversion op that ensures that shapes of both input tensors are compatible (same or broadcastable).
"[Reopened][XLA] Bring XLA Transpose021Tiled up-to-date with reference CUDA implementation.Reopening this PR.
The commits have been cherry-picked to master branch."
"Support CopyFile with streamingThis fix tries to address the issue raised in #12641 where it was not possible to have CopyFile with streaming. The original implementation copies the whole content of the file to a string
buffer and write to the file. This could be an issue if the file size is too large (than the memory of the host)."
Add a timeout for tests in cmake.No description provided.
Mkl filter optimizationThis pull request optimizes the MKL convolution backpropagation by avoiding extra filter data conversion.
delete `get_started/monitors.md`This is a copy of  #12651 cherrypicked onto master.
R1.3 - Delete monitors.mdThe monitors in this doc are not compatible with the core Estimators in the other get started docs.
y can be a dict for numpy_input_fnThe PR is opened for #12610.
"Safely read content from InputStreamChanged to use ByteArrayOutputStream on converting InputStream into byte[], instead of relying on InputStream.available()."
R1.3No description provided.
Fix: indices is out of bounds in _IndicatorColumnThe same bug of #12583 exists in tf.feature_column as well.  CF pr #12584.
"Adding image captioning examples for iOS (Im2txt)This is my first ever contribution, so please bear with me."
Removing slightly confusing \>\ from outputI found the > a bit confusing in the output of import_pb_to_tensorboard.py:
Removing slightly confusing \>\ from outputI found the > a bit confusing in the output of import_pb_to_tensorboard.py:
Update README.mdEdit the tutorial URL
"Make Dataset.map not unpack namedtupleThe map method of tf.contrib.data.Dataset unpacks iterables before passing them to the mapped function. This is quite convenient. However, currently this also happens for namedtuples, which IMHO is not what one would expect. Consider, for example, the following code:"
Update feature_column_ops.pyUsing get_variables over model_variable
"Eager API String Tensors (and others that need to be copied) FixThis PR partially fixes the issue related to string tensors, described in #12612. Note that there are still some issues remaining related to string tensors:"
"Eager API String Tensors (and others that need to be copied) FixThis PR partially fixes the issue related to string tensors, described in #12612. Note that there are still some issues remaining related to string tensors:"
Fix anchor tag in adding_an_op.mdDefault anchor tag id is generated by the target text of the title. And it uses an underscore instead of hyphen.
"expose build_default_serving_input_fnFor #12508, I find that build_default_serving_input_fn is hidden like #12568 . I don't know whether it is intentional."
"Rename all BackProp to Backprop for consistency.Resolving issue #12515.
First attempt to start contributing to tensorflow."
"[android demo] fix issue #12431 Java implementation of YUV420SP to ARGB8888 convertingThis PR fix issue #12431
Java implementation of ImageUtils.convertYUV420SPToARGB8888 made and refactoring for Java implementation of ImageUtils.convertYUV420ToARGB8888 made as well."
"[XLA] Add a check to the HLO verifier for badly formatted Broadcasts.This adds a check to the HloVerifier which ensures that the Hlo Broadcast instructions are formatted correctly.  Since they are different from the UserComputation broadcast instructions (and therefore the XLA docs), examples of invalid instructions were appearing in the repo."
expose sparse_column_with_vocabulary_file methodThe bug is explained in #12568 .
Update model_fn.pyRemove and replace contrib framework and function
#NAME?
#NAME?
Branch 166528119No description provided.
First base version of snapcraft.yaml. Work in progress. [DO NOT MERGE]I'm following the instructions from https://www.tensorflow.org/install/install_sources
Add `-Wno-write-strings` to remove the warning in external protobuf compilationThis fix is an effort based on the discussion #10838 (comment)
Fix TensorFlow Windows build@yifeif @gunan
Updating install_linux.md for cuDNN 6.@gunan does line 59 need to be updated as well?
Add estimators.mdCopied from master:
fix: profiler bazel build usageNo description provided.
Update metrics_op.pyUsing core method over private
Fix: indices is out of bounds in _OneHotColumnThe PR is opened to fix #12583. CF pr #12638.
"Double check after regex search for cudnn_path in configure.pyIf chose wrong cuDNN version on linux, configure.py will throw an exception as shown below:"
Add kernels for FusedBatchNormGrad when is_training=False#10857
"In the line 240, the string 'conv_3' miss the %dI think the author missed the '%d' to name the related net scope, so the correct code is :
net = slim.conv2d(net, 256, [3, 3], scope='conv3_%d' % (i+1)) NOT net = slim.conv2d(net, 256, [3, 3], scope='conv3_' % (i+1))"
"remove unused member vairable, and clear compiler warningI remove highest_eax_ and clear this compiler warning, because it is unused."
"remove unused cpu allocator factoryBecause MakeCpuAllocator was replaced with cpu_allocator,  so I remove unused MakeCpuAllocator factory method."
Add support of int8/uint8/int16/uint16 for tf.subtractThis fix adds support of int8/uint8/int16/uint16 for tf.subtract (on CPU only)
"Updated iOS build to handle threading correctly, requires iOS 9 or laterThere was a long-standing issue with Apple's version of clang not supporting thread local attributes, which are used inside Eigen in some places. As a 'temporary' hack, I defined these attributes out of existence, but this lingered for a lot longer than it should have, and I believe is the cause of issues like #12298. From comments there testing this fix, it looks like it does help."
Updating the README to include tf_nightly information.No description provided.
enable use of transform_graph tool with contrib/rnnThis is a simple fix for using contrib/rnn with the transform_graph (and possibly other tools).
Fix the XLA buildI merged in a pull request prematurely. Tested locally.
Partially fixes #10838The following warnings seem to print for compiling many ops using gcc-4.9.
Windows docsNo description provided.
Fix bug in DataFeeder constructorThis fix fixes #12525
Updating the Windows install documents in masterNo description provided.
#12537 issue solutionCan one of the admins verify this patch?
convert Dimension to Int for sparse_merge in _IndicatorColumnThe PR is aimed to fix #12557 .
"Fix deprecation warnings of *_global_step functions.In tensorflow/contrib/layers/python/layers/optimizers.py, use *_global_step functions from tf.train instead of tf.contrib.framework."
#12537 issue solution*print prefix message by flag value
add function gradients()  return  none exceptionSigned-off-by: ヵ懦ｯｼ um4825@gmail.com
Implements safe casting of to_<dtypes>() (#12235)saturate_cast() supports SparseTensor
layers.py spatial_softmax activation can be selected by userAllow user specified activation functions to be selected when calling spatial_softmax.
Update head.pyUpdate contrib lookup to core lookup
"Update RELEASE.mdRemoved extra ""for""."
remove temp variableCan one of the admins verify this patch?
Branch 166267240Repushing to fix the Go build
Adding tf_nightly info to the readme.No description provided.
Added shape information to the while loop input placeholders for the C API.As discussed with @skye :)
Branch 166229572No description provided.
Enable int16 and uint16 for reverse opThis fix tries to address the issue in #12528 where it was not possible to run uint16 on rot90 (reverse) op
"Docs typo fix(key, value pair) -> (key, value) pair"
"Optimize non_max_suppression by iterating backwardsIn typical scenarios, high-overlapping boxes are likely to have similar scores.
Therefore if there are any high-overlapping boxes, it's faster to find them starting from boxes that have similar scores."
[XLA] Replace TEST_F with XLA_TEST_F to allow for disablingThis will allow any of the tests in the CopyTest suite to be disabled by using a disable manifest.
#NAME?
make Dimension be compatible with integerThe PR is another solution to fix #11974 .  I believe that it is better than #12127 .
remove redundant line in fused batch normNo description provided.
"remove unused code, it does not happenI remove some implements for GetDeviceLocalityAsync, because it does not happen."
typo missing ')'it is missing the ) at end of android_ndk_repository(
"Update doc and imports for crf_decodeA new method crf_decode was added recently (does the equivalent of viterbi_decode but with tf.Tensors as input).
However it is still not in the docs and it is not importable in tf.contrib.crf; hence the proposed changes."
NaN propagation for GPU pooling opsAttention @zheng-xq
Add cudnn7 supportAttention @zheng-xq
Support for CUDA 9.0For review by @zheng-xq.
CherrypicksDocs updates Mark requested.
"Update get_started.md-Add python 2 compatibility for tutorial code
-Corrected console outputs
-Included or rearrange some import statements"
Fix ProfileContext location in READMENo description provided.
Fix images not showing in profiler READMENo description provided.
Fix code highlight language in profiler READMENo description provided.
Expose new CRF classes and function.#12056 introduced a new tensor-based CRF decoding. This PR exposes the new names at the module level.
extract common function for start abort rendezvousNo description provided.
"Make scatter_* kernels to be multiple thread and gain 8x speedup.Relate to 12358.
Use the lock to deal with the duplicate. After some test, the results show the atomic_flag and spin lock are the best choice and the performance is close  to the lock-free mode.
Benchmark with tfprof, the result shows about 8x speedup."
"Update multinomial.pyThe previous calculation of log_prob is unstable if the probs of Multinomial are close to zeros, the math_ops.log will result in nan values."
"Modification and Uniformisation of setup.py filesHello everyone,"
Fix serveral typos in docs.Signed-off-by: Ti Zhou tizhou1986@gmail.com
"add lvalue ref for auto deduction, and avoid to copy object.No description provided."
"find worker session by handle for workerextract common template method to find worker session by handle, and remove duplicated implements."
replace loop with ranged-for from worker's get_statusNo description provided.
replace explicit type decl with auto deduction for device managerNo description provided.
replace prune subgraph algorithm with auto deduction for ranged-forNo description provided.
replace auto deduction for master session close member functionNo description provided.
replace auto deduction for master reset member functionNo description provided.
Testing out the buildNo description provided.
Change required cuDNN from v5.1 to v6.0 for Linux in the docsThis fix changes the required cuDNN from v5.1 to v6.0 for Linux in tensorflow/docs_src/install/install_linux.md as the build is linked against libcudnn.so.6 now (not libcudnn.so.5)
fix gdr compiling errorNo description provided.
Respect `optimize` parameter in `zeros_like`This fix address the issue in #12436 where optimize flag was not respected when shape is fully defined for zeros_like.
"[android demo] Complete path to nsync library destination......
CMake Error at CMakeLists.txt:30 (set_target_properties):
set_target_properties called with incorrect number of arguments.
....."
Branch 165958212No description provided.
Branch 165951046No description provided.
Fix issue in `variable` docsA couple of doc error in programmers_guide/variables.md
Implement BiasAddGradHelper.Registers the BiasAddGrad op as the gradient for BiasAdd by implementing BiasAddGradHelper.
"reuse RefCountIsOne function memberreuse RefCountIsOne function member, and replace the same implement."
R1.3No description provided.
Update Readme.mdFixed run-on sentence(s?)
typo in docs: one ==> oncein tensorflow/docs_src/programmers_guide/datasets.md
Use XLA_TEST_F to allow disabling of individual testsconverting test to allow individual test cases to be disabled using the CC test disable manifest.
"[android demo] Fix applicationId to 'org.tensorflow.demo'For nativeBuildSystem == 'cmake' change applicationId = 'com.tensorflow.demo' to applicationId = 'org.tensorflow.demo'
Otherwise Android system treat bult app (com.tensorflow.demo) as separate one and install it alonside to org.tensorflow.demo"
"ADB is the tool, USB debugging is the connectionADB is Android Debug Bridge and allows the USB debugging connection (or over WiFi, which is a more complex topic later on."
#NAME?
Refactor word2vec_basicThis MR changes two functions on word2vec_basic.py
"Refactor create worker sessionsRefactoring to OO style for worker group for create worker sessions, and it is more clear for implements."
"Disable denormal_test on s390x platformAs per the discussion happened on 11902, the mentioned modes are not applicable for s390x architecture as well. So disabling denormal_test for s390x platform."
#NAME?
"[XLA][WIP] Add support for Polyhedral compilation through PollyAdded Bazel build files for compiling Polly with LLVM to enable Polyhedral compilation, as discussed in #8100"
"Added a library to convert TensorFlow GraphDef to XLA SessionModule.I have only added the minimal code without lot of comments. I wanted to make sure this approach is acceptable. I have made the xlagen library public, so a python library can be built externally by using TensorFlow as a submodule. Please let me know if this is acceptable and I will spruce up the PR with more documentation, comments, and tests."
"Update boringsslto include ""Work around language and compiler bug in memcpy, etc. ""
Details in google/boringssl@17cf2cb"
Update estimator.pyReplace contrib with training and core framework APIs
Eager API inclusion to the dynamic library build targetNo description provided.
Better documentation for tf.contrib.layers.optimize_lossCan one of the admins verify this patch?
"Fix bug on the gradients graph computation caused by an Assign node - C++ APIThe gradient computation in the C++ API works as follow.
Let's say that we have the following graph:"
Update link to doc for global_variables_initializer.Update link to doc for global_variables_initializer.
"Implement L2Loss gradient.This branch implements L2LossGrad, the gradient for L2Loss.
It is a port of the python implementation:"
"Update install_windows.md to mention cuDNN 6This PR updates the r1.3 docs, which are currently the default on the website."
Branch 165646100Pushing internal commits
Remove tensorboard if we are building tf_nightly.Once there are consistent nightly tensorboard builds I'll have the update_version script just update the tensorboard dependency tag.
Patching the missing nightly GPU build links.No description provided.
Add compression support to RecordInputThis fix tries to fix the request raised in #12344 so that it is possible to process RecordInput with compressions.
Merging 1.3 back into master.Accidentally made the branch on tf/tf. I'll delete after.
Check cuda compute capability >= 3.0 in configureFix #12181
"Verbs hang fixReplaces the sync wrappers for device to device operations in verbs_util, with a call to the async function with a callback function. Resolves Issue #11725"
[XLA] Break the Slice test into different tests for each data typeThis allows our backend (and others) to disable types which they do not support.  Previously all types were tested by the same test function.
"update from originmerge from origin
access"
"Clean up 'shell=True' in using subprocess moduleCurrently, configure.py always use the running python interpreter to find the site-packages path. When user has specified a different python in the previous step, the specified one should be used."
Add TensorBoard to 1.3 release notesNo description provided.
"Constructor with InputStream only for TensorFlowInferenceInterfaceAdded a InputStream Constructor for TensorFlowInferenceInterface, which support loading model from network or many other situations that we can only have a InputStream of the model."
[XLA] Bring XLA Transpose021Tiled up-to-date with reference CUDA implementation.The Transpose021Tiled is no longer up-to-date with the reference Cuda implementation and this PR updates the XLA to generate codes that resemble the latest reference Cuda implementation. The main improvement is that a two dimensional logical thread block is launched instead of a one dimensional one. Having more threads in a block increases throughput of transpose.
Update learning.pyUsing core variables and training framework instead of deprecated variables
Correct minimum Python 3 version in install instruction#12309
Add \noclang\ tag to platform_setround_test.No description provided.
Updating the Release notes with cudnn 7.No description provided.
something wrong with the pathNo description provided.
remove duplicated code for find master session by handleremove all duplicated code for finding master session by session handle.
training argument for tf.nn.rnn_cell.DropoutWrapperThis PR resolves issue #9775
[CMake] Add missing dependencies on boosted_trees protos and other fixesThis PR fixes some of the CMake targets that are not built as part of CI:
rm duplicated implements for GrpcRemoteMasterRefactoring GrpcRemoteMaster and rm duplicated implements for it.
Update control_flow_ops.pyUpdated documentation of while_loop() function
modify doc about deploy of hadoop: deprecate KERB_TICKET_CACHE_PATHI have create #12290 to declare this problem.
Add a tf.contrib.image.translate functionOpening as a replacement for #10748. Made a small simplification. @sampepose
Branch 165340781No description provided.
Simplify task.name condition checks at android/example/build.gradlePS: Looks like (task.name == 'assembleDebug') || (task.name == 'assembleRelease') is always true and can be omitted. Leave it just in case I don't fully understand logic behind that check.
Updating the version to 1.3.0Updating version for final release.
"Introduce MPI allreduce and allgather in a new contrib projectThis commit adds the tensorflow.contrib.mpi_collectives namespace and
contrib project, which has a variety of ops that work with MPI."
fix bugs in `stack_bidirectional_rnn`The condition of the original codes is not related to the constraint.
Windows: enable some contrib modules for bazel buildStill cannot build the custom OPs.  Hope someone can integrate #8217 into bazel rules.
Support boolean type to variables' ops and assign-like ops.(#12046)Fix #12046.
"Cherrypicks@wolffg had to patch yours in in the last commit, please verify everything is right."
Merge pull request #1 from tensorflow/masterpull all without selection
Branch 165220185Need a push for 1.3 cherrypicks.
R1.2No description provided.
Add annotations support for tf.estimator.EstimatorThis fix adds annotations support for tf.estimator.Estimator so that the following works in python 3:
Add missing 'type' keyword to ArgumentParser add_argumentFixes #12210
Updating CUB urls for r1.3 branch.No description provided.
"Fix strides format for data format in contrib.layers.separable convolution2dAddresses feature request from issue #10432. Continuation of feature implementation--initial changes did not address the case where num_outputs = None, in which case strides and the input channels must be reformulated according to data format. The previous commit is  rmlarsen/tensorflow@d52e15a."
"Update requirement for numpy.Autograd requires numpy >= 1.12.1. If numpy 1.11.0 is already installed on the system, pip will not upgrade numpy when installing tensorflow.  Fix #12185."
Updating the hashes for NVlabs/cub package.PR to fix master cmake builds.
"Clean up in sparse_fill_empty_rows_op.ccBoth int64 prev_row = -1; and const int64 row = indices(i, 0);
was not used. It generates quite a few warnings in the output."
"[XLA] Add F16 as type for the literal conversion functionsThe F16 (synonym for eigen half) type was not included in the literal conversion functions.  float/double is supported as a type conversion by the eigen half, so adding identical lines as the native types."
"Add focal_lossAdd a new loss function, focal_loss, which was described in this paper."
"r1.3 fix Bazel 0.5.3 build errorThis is the patch necessary for TensorFlow r1.3 to compile with Bazel 0.5.3, which is set to be merged before the 1.3 release."
#NAME?
"make `gather` cpu kernel to be multiple threads.related to 11709.
On a single machine, profiling the embedding_lookup_sparse with tfprof, the result shows that gather Op takes a lot of time. I checked the code and found that the CPU version gather op is single-thread."
R0.12 cmake 2017No description provided.
"Feature add provide Java Graph class getter for all operationsc_api code and tests, Java code and tests, and JNI code to support exposing and using the cardinality of operations contained in a graph and an aggregate of them. This is to support #12133"
Revert \Update metrics_op.py (#12218)\This reverts commit b3e0738.
Update tensor_util.py and fix metric_ops.pyAdded deprecated note
"Fix tf.image.central_crop return zero dimensionThis fix tries to address the issue raised in #10315 where tf.image.central_crop will return (0, 0, 3) when input is (240, 320, 3)."
Use python_bin_path to check for site packagesThis fix tries to fix the issue raised in #12232 where the python invoked the configure.py was used to check the site packages.
"(Reopened PR) Add handle_ties arg to in_top_k Op to deal with ties.(#10767)Reopened PR for 10767
Add handle_ties argument to in_top_k Op to make the Op more clear."
Fix error caused in MonitoredSession.close()This fix tries to address the error raised in #12224:
Allow mixed ints and Dimensions for reshape shape paramCF issue #11974
"Fix issues due to old numpy versions in dist_test and gcs_testPreviously numpy was installed with apt-get, leading to a version too
old to be compatible with the recently-added autograd dependency of
tensorflow. This change set fixes that."
Branch 165019969Needed a CP for 1.3
Reverting a commit that is causing compilation errors.MKL optimized Tensorflow does not support EIGEN_USE_MKL_ALL currently.
Update metrics_op.pyReplaced contrib with direct equivalents outside of contrib
Branch 164943597No description provided.
"Added the EMNIST datasetThis PR adds EMNIST to the datasets. EMNIST is an extension of the MNIST dataset but it also adds Characters, and more numbers. It can be found in the paper here: https://arxiv.org/abs/1702.05373v1"
Remove useless RecvTensorResponse allocation in GDRSee here for your reference.
Make LayerNormBasicLSTMCell compatible with datatypes other than float32LayerNormBasicLSTMCell only supported float32 so far. With this patch other datatypes such as float64 are available too. The datatype doesn't have to be specified explicitly but it is deducted from the input data as it already happens for example for BasicLSTMCell.
Fix typosThis PR fixes some typos.
BUG: Estimator.eval() runs feature_engineering_fn more than once.The PR is aimed to fix #12205.
Adding support for s390x for changing GetCycleCounterFrequencyClosing #12180 and re-creating the PR based on review comments.
fix build issue for --config=syclNo description provided.
Branch 164929133No description provided.
Branch 164929133No description provided.
Branch 164929133No description provided.
"Add regression tests  and fix some minor bugsThis pull request adds some additional unit tests for the add_n  and accumulate_n operators. I'm adding these tests as preparation for working on #10607 . Specifically, I added tests of the argument validation code in accumulate_n and a test of gradient computation for add_n."
"Fix typosThis PR fixes some typos: explictly, initialised, paritally, unecessary, substitue, and Paramterized."
Remove casting of int64 for reverse_sequenceThis fix remove unneeded cast of int64 for reverse_sequence:
Fix bugs of rounding in converting image from float to intNo description provided.
"Create CI build script for Raspberry PiThis integrates the work by @ebrevdo to create a build script for the Raspberry Pi with the CI system. This script creates a Python wheel for TensorFlow on the Pi, and is a step towards creating automatic redistributable binaries for the platform."
CI script for building Raspberry Pi wheelsThis CL expands on @ebrevdo's original PR adding Pi support by integrating it into the CI build scripts. This is a step towards nightly builds of Pi wheels and distribution of prebuilt binaries.
"Enable int32 on GPU for tf.tileThis fix enabled int32 on GPU for tf.tile, to fix the following error:"
[XLA] Register XLA_GPU iff cuda enableFix #12070.
Adding support for s390x in calculation of cpu_frequencyPR for changing the GetCycleCounterFrequency for s390x to fix test //tensorflow/core:platform_profile_utils_cpu_utils_test.
Adding support for Big Endian in graph_constructor_test and wav_ioPR to add support for Big Endian for resolving below failures:
remove unused parameterremove unused parameter pool for DirectSession::GetOrCreateExecutors.
[OpenCL] Registers AvgPool and AvgPoolGrad (#105)No description provided.
R1.3Missing IndicesRowIterator::operator<() is added.
"[OpenCL] Fixes double memcpy bug (#151)As the debg CopyOp is called on a Tensor without type, we need to use
the DataType enum to get type information, and use this to pass the type
on to Eigen. This is a workaround Eigen's need to have a type when
calling memcpy. If the Eigen memcpy can be provided without a type
requirement, then the memcpy in sycl_util is unnecessary."
[OpenCL] Registers BytesLimit OpNo description provided.
Allow disabling of selected tests in vector opsSwap over the test instantiate macro to allow selective disabling of these tests
Fix unnecessary sync_memops cuda pointer attr in GDRSee the comments here. I've tested on my local boxes and it seems removing CU_POINTER_ATTRIBUTE_SYNC_MEMOPS slightly improves the training throughput while introducing no data race.
Branch 164787644No description provided.
Branch 164782742No description provided.
Fix broken link in `tensorflow/go/README.md`Fix broken link in tensorflow/go/README.md. This is related to #12145 (tensorflow/java/README.md) but is in go's README.md instead.
Branch 164739939No description provided.
Fixing an issue with merge back with rc2.No description provided.
Fix Windows Linking errorFix #12117
Update estimator.pyReplace summary_io.SummaryWriterCache for tf.summary.FileWriterCache
[OpenCL] Extends BiasAdd to cover integral typesNo description provided.
"Fix broken URL in `tensorflow/java/README.md`Fixes broken URL in tensorflow/java/README.md, this fix fixes #12141."
[OpenCL] Fixes linking issuec13cb2e5777852c6a498410669b24ac346114eba introduced linking issue that caused
Update README.mdFixed Stale URL in Tutorial Link.
"Fix sparse_matmul_op_test on Power LEFix for issue #12137. Add the pbroadcast_* functions for ppc, this passes the sparse_matmul_op_test on ppc64le"
"Add handle_ties arg to in_top_k Op to deal with ties.(#10767)#10767
Add handle_ties argument to in_top_k Op to make the Op more clear."
"Add int64 support for out_idx of tf.uniqueThis fix tries to address the issue raised in #12113 where tf.unique does not support int64 for out_idx. The support of int64 was specified by the docs, though."
tf.reshape accepts Dimension objects for the shape parameterThe PR aims to fix #11974.
Add `skip_empty` option to `tf.string_split`This fix add skip_empty to tf.string_split so that it is possible to have tf.string_split behaving similiarly with python.
Branch 164665656No description provided.
Add name field for tf.contrib.data.Iterator.make_initializer operationThis fix adds name fields for tf.contrib.data.Iterator.make_initializer operation
"Fixed channel mismatch if num_outputs=NoneAddresses feature request from issue #10432. Continuation of feature implementation--initial changes did not address the case where num_outputs = None, in which case strides and the input channels must be reformulated according to data format. The previous commit is b7e2f03."
Branch 164623298No description provided.
"Added a bias term in Bahdanau attention alignmentsThe original paper by Bahdanau (https://arxiv.org/abs/1409.0473) lists a bias term (Eq. 18) and Tensorflow's normalized Bahdanau implementation uses one, so I don't see why we shouldn't use one in the original implementation."
"Corrected dimension notes in attention_wrapper.pyI was following along your Bahdanau implementation while doing my own and noticed a bug in the documentation. While it's true you can project memory and query to attention.num_inputs, the context is of shape [B, memory_size]."
show proper error message when run `saved_model_cli` without arguments instead of an error said `AttributeError: 'Namespace' object has no attribute 'func'`before:
Ensure that bazel versions of the form X.Y.Z-mmmmm work correctlyThe code in configure.py doesn't allow for bazel versions which identify themselves as X.Y.Z-mmmmm.  This is true for bazel on OS/X installed through homebrew.
"Add framework for disabling C++ testsThis adds a small amount of scaffolding needed to get the disabled tests manifest into the runfiles for each test, and set a string to the name of the file in the test_macros rule."
Speed up safe_strtod and safe_strtof functions by using double-conversion library#11713
Update head.pyReplace scalar_summary for tf.summary.scalar
"Add `.idea/**` into .gitignore for JetBrains IDEWe usually use PyCharm for reading the source code of Tensorflow, so it is necessary for most developers to add .idea/** into .gitignore for JetBrains IDE to ignore those non-project files."
Updating release notes known failures regarding Bazel 0.5.3No description provided.
"Revert \Fix segfault when recording raw allocation returns nullptr\Reverts #12074, in favour of a complete fix in 9bb2c8e."
Update variables.pyAdded deprecated message
Branch 164481383No description provided.
[OpenCL] Fixes core_rnn_cell_testsSYCL uses the same implementation as the CPU one for BiasAdd
"add args of TimeReversedFusedRNNI want to use TimeReversedFusedRNN together with LSTMBlockFusedCell , but the batch_axis of LSTMBlockFusedCell's input is 1 , but not 0 . But the reverse function of TimeReversedFusedRNN can't decide which is batch_axis , just do array_ops.reverse_sequence(t, lengths, 0, 1) . So , I think it's useful that users can tell it which is batch_axis and seq_axis ."
Fix segfault when recording raw allocation returns nullptrSee here for discussion.
Fix typovalues is not defined.
"fix a typo in tf.nn.separable_conv2d's docIt's obvious that the right bracket in ""sum_{di, dj, q, r]"" should
be a right brace."
Fix typo in RELEASE.mdNo description provided.
Update monitors_test.pyMove from contrib to training
"Implement CRF decode (Viterbi decode) for tensorCurrently, Tensorflow doesn't support CRF decoding (Viterbi decoding) for tensor. Although tf.contrib.crf.viterbi_decode function can do CRF decoding, it can only be used at test time, since it accepts Numpy arrays as inputs."
Update monitors.pyReplace deprecated SummaryWriter and SummaryWriterCache with FileWriter and FileWriterCache
"Fix debugger logic in r1.3In #11952, I had set made some logic within debug_grpc_testlib return too early, breaking some debugger-related behavior. This PR fixes that."
Branch 164309367No description provided.
"Fix cmake builds8bf3f88
removed tpu_sendrecv_ops.cc ... reflect this in cmake."
Merge Rc2 back to master.No description provided.
"MKL: Removing visited_node hash table - fixing multinode shape mismatch issueThis PR fixes an issue that arises in multinode setup. MklLayoutRewritePass
maintains a hash table for visited nodes, and the hash table is part of the
pass and used for every graph being rewritten. But it looks like in multinode
setup, multiple graphs may be processed simulteneously leading to incorrect
modifications to the hash table. So removing the hash table as we do not
really need it."
[OpenCL] Fix for //tensorflow/python/kernel_tests:image_ops_test (#111)No description provided.
R1.2miss
"Update eigen and gemmlowp dependenciesThis PR updates some dependencies which are required to make Tensorflow work on the ARM platform.
The first dependency, Eigen has been updated to version 3.4 containing this fix.
The second one updates Gemmlowp with this fix with the issue reported on this thread ."
"Fix typosThis PR fixes some typos: attempst, lenght, and acessed."
"Add int64_t typemap for swigSession.list_devices()  gives  wrong memory bytes, and after the call, swig complains a memory leak:"
Fix build issue in c++14 for condition_variableThis fix fixes the issue raised in #12017 where condition_variable_any has to be used in c++14.
Add loss to summary during estimator.train()This would be useful for visualizing the losses during training phase.
Add SavedModel support to tfcompileThis might be a little bit of a hacky way to add support but it appears to work. Long term it would be better to make SavedModel a first class citizen.
Disable codeowners due to noisiness.No description provided.
Branch 164170971No description provided.
Testing sanity.No description provided.
Make layout optimizer_test manual due to Grappler being off in the r1.3 branch.No description provided.
Make plugin_data optional instead of repeatedThis patches #11952 into master. Here is that PR's description:
"[OpenCL] Uses Eigen implementation of asinh, acosh and atanhCan one of the admins verify this patch?"
Data type support for seq2seq attention mechanismsGot an exception like the following when I was trying to use tf.float16 in my seq2seq model with Bahdanau Attention to allocate less memory on GPU:
Data type support for seq2seq attention mechanismsGot an exception like the following when I was trying to use tf.float16 in my seq2seq model with Bahdanau Attention to allocate less memory on GPU:
Update tensor_util.pynp.array makes a copy of the object which is not required so usage of np.asarray would be more efficient
Merge pull request #1 from tensorflow/masterupdate from tensorflow_master
Update parameterized_docker_build.shtypo : Dockerilfe > Dockerfile
"Add SerializeTensor operatorThe opposite of ParseTensor, this operator takes a tensor as input and outputs a serialized TensorProto."
"Upgrade protobuf version to fix \A protocol message was rejected because it was too big (more than 67108864 bytes).\ errorcustom package 3.1.0 still get this ""A protocol message was rejected because it was too big (more than 67108864 bytes)."" error, but 3.2.0 get it fixed"
Simplify tensorflow/core/BUILDFix #11985
"Remove tfserve page which is soon to be outdated.We are in the process of serving tfserve documentation in a different way, so this file needs to be removed.  1.2 is the current ""root"" branch on tensorflow.org, so we need to cut it from r1.2, and we were not able to cherrypick the change back from master (where it is already gone)."
Updating version to rc2.No description provided.
Fix formatting problems in \Adding an Op\ docI noticed some minor code formatting issues while reading through [https://www.tensorflow.org/extend/adding_an_op]:
Turn off grappler for 1.3Tested with tf_cnn_benchmark suite and regression caused by the changes is resolved according to the tests.
"[Java] Build rules and skeleton for operation wrappers generatorIn this PR, Bazel rules to generate operation wrappers in Java at build-time and a very minimal implementation of the generator (in C++) are added."
Branch 163983198No description provided.
"[OpenCL] Fix allocator destruction race condition (#136)Uses C++11 static initialisation to provide singleton instance, rather
than a mutex and pointer."
"[XLA] Add a scheme for disabling tests based on type support by backendsThis change allows CPP tests to be marked as requiring certain type support.  As it stands, I have updated only the scalar math test with the annotations.  I will do the rest once this change is debated."
"Added an \UpdateInput\ method to the Python C APIThis is the only current limitation I see for allowing the implementation of gradients through the C API for while loops. @skye this relates to our discussion in #10089 and could provide a temporary solution until we have a more elegant solution. Since it is in the python_api.h interface, similar to AddControlInput, I hope accepting this doesn't cause any issues."
Fix tensordot with list of ints as axesThis fix tries to fix the tensordot issue raised in 11950 where
"Make plugin_data optional instead of repeatedEvery summary op writes data for a single plugin to process. Hence, each
SummaryMetadata proto should have a single PluginData optional field
(instead of a repeated one). This removes much complexity from
TensorBoard logic that loops over the plugin data. It also simplifies
the SQL schema - it can now enforce a one-to-one relationship between
summary op and plugin."
"Make plugin_data optional and (not repeated)Make plugin_data optional and (not repeated)ﾂ Every summary op writes data for a single plugin to process. Hence, each SummaryMetadata proto should have a single PluginData optional field (instead of a repeated one). This removes much complexity from TensorBoard logic that loops over the plugin data. It also simplifies the SQL schema - it can now enforce a one-to-one relationship between summary op and plugin."
"Fix \depsets cannot contain mutable items\ error when using Bazel 0.5.3Allows CUDA builds with more recent versions of Bazel. Fixes #11871. Perhaps we should also file a Bazel bug, although it would be nice to have the workaround in the meantime."
Branch 163848365No description provided.
"Fix #11803: Force CUPTI to flush GPU activity buffers when stopping tracing.As described #11803, stopping GPU tracing, GPU events are not flushed. Then we cannot get GPU activities in performance statistics."
"dynamic_stitch op gpu versionIssue(#7251)
Have implemented the GPU version dynamic_stitch. all tested passed locally.
use the script do a quick benchmark."
Disable denormal_test on ppc64le platformPlease find the relevant discussion - #11902
Fix MPI and Verbs compilation errorsThis fixes the following compilation error when building TensorFlow with MPI and/or Verbs support :
Fix white spacesThis PR cleans up extra white spaces.
Increase docstring consistencyThis PR considers the following six main items:
"Add bool type supports for GPU kernelsThis PR adds bool type supports for GPU kernels (reshape, concat, and stack). The problem is originally described in #11676. Following is a minimum code snippet, which runs on CPU but not on GPU:"
"Update tf.nn.max_pool docs for ksize/strides == 4Update tf.nn.max_pool docs for ksize/strides == 4, instead of '>= 4' in the existing docs."
R1.2No description provided.
Modify implementation of tf.nn.batch_normalizationGive a slightly different implementation of tf.nn.batch_normalization so that per-example gradients needed by differentially private stochastic gradient descent can be calculated for gamma and beta in batch norm layers.
[DO NOT MERGE YET] Update gRPC to a version that doesn't require build patchesTesting for now.
#NAME?
Make 'import tensorflow' go faster@av8ramit I recommend this cherry pick of cl/163600869 which makes import tensorflow go much faster (2x faster on my machine.) I would also request that it be mentioned in the 1.3 release notes.
Pin 1.3.x package to tensorflow-tensorboard 0.1.x@av8ramit This is an important one line cherry-pick to end all cherry-picks from the TensorBoard team.
NHWC  optimizations (MKL)Update MKL link to point to latest version (mklml_lnx_2018.0.20170720) . Also undoes workarounds previously added for NHWC conversions.
"Disabling gmm_test.py on Windows builds as it's flaky on GPU nightly …builds.
CC: @xavigonzalvo Cannot add as a reviewer for some reason."
Branch 163695881No description provided.
[XLA] Any unrecognised fusion type should be described as kCustom@majnemer @vrv
Make Windows Bazel GPU build work againThis change mainly fixed the Windows GPU build.
Update the graph used in quantization tutorialAnother fix to quantization tutorial after #11285
"Fix typosThis PR fixes some typos: squeee, argumnet, succeeeded, and pyton."
Branch 163636676No description provided.
"correct description of bounding box pointsbbox points are upperleft and bottomright not bottomleft and upperright. Also coordinates were described in idiosyncratic (y,x) instead of (x,y) form. And no, those two corrections don't cancel."
"Inconsistent normalization formulaHi there,"
fix minor typoNo description provided.
Determinant-operation on the GPUThis pull request implements the computation of the matrix determinant on the GPU using LU-factorization with cuSolver.
SVD-operation on the GPUThis merge request implements the SVD on the GPU using cuSolver.
Dynamic ksize and strides with MaxPoolThis fix is the renewed effort to fix #4746 with Jenkins failures fixed. (the previous PR was #9514).
Minor typo correctionNo description provided.
Fix a minor typoJust a fix for minor typo
"[XLA] Remove overly chatty output in fusion operationwhen fusing a lot of operations in a large graph, this trace produces a lot of output.  It isn't really output that is helpful when trying to trace the high level operations occuring.  Perhaps it is better at a lower log level?"
fix link for installing pageNo description provided.
Branch 163534909No description provided.
grpc changed to only build Release flavorcmake builds are broken for Debug/RelWithDebInfo builds because grpc now only builds Release binaries. Always point to the Release bits to fix it.
Fixed issue: Conv_ops python unit test failsFixed an issue where the Conv_ops python unit test fails for MKL.
"Bug in builds/pip.sh causes failure if NO_TEST_ON_INSTALL=1do_virtualenv_pip_test() uses ${CLEAN_VENV_DIR} which is defined in
do_clean_virtualenv_smoke_test(). But if NO_TEST_ON_INSTALL is set to 1
${CLEAN_VENV_DIR} would never be defined, and pip.sh will fail."
Testing PRs.No description provided.
Branch 163490703No description provided.
Android demo: Explicitly import R.javaAdd explicit import of the R class to fix Google-internal Android demo builds.
Add option for build more python tests in CmakeCan one of the admins verify this patch?
fixed tf.pow edge caseThe tf.pow() function has an edge case which causes it to hang with no error message.
Fixed two typosFixed two typos.
"[XLA] RNG root instruction can be fused as it effectively has one userThe existing test checks for a single user when trying to fuse a random number generator instruction.   This is because if it is fused but has multiple users, the value may be generated an incorrect number of times.  (multiple users should receive the same random number, not different ones)."
Add resampler to release notes.No description provided.
Fix windows bazel buildNo description provided.
Merge rc1 into masterNo description provided.
Branch 163409348No description provided.
Ensure that TensorBoard is still available when pip installed.Context:
Ensure that TensorBoard is still available when pip installed. (r1.3)Context:
External leveldb link changedtable_format.txt was renamed to table_format.md
"remove duplicated coderemove duplicated code, and merge two implements."
"Fixes #11829: Faster to import tensorflow.contrib on Python 3As described in #11829, a lot of time is spent doing inspect.stack() when importing import tensorflow.contrib with Python 3. (There does not seem to be any issue with Python 2.)"
Add missing grpc dependency to include the proto_util.h headerNo description provided.
Add more coverage of file_io methods in gcs_smoke tests.Add more coverage of file_io methods in gcs_smoke tests.
Adding disabling mechanism for pluginsThis adds a scheme to allow 3rd party XLA drivers to disable python tests using the disabled-manifest mechanism already in existence.
"Add maxout op to tf.contrib.layersHey,"
"Added SNAPPY support in CMake scriptsWindows CMake builds do not include SNAPPY compression library support, thus the resulting applications are not able to parse TensorFlow models that were compressed with SNAPPY.
This pull request adds SNAPPY as ExternalProject, just as it's done with all other 3rd party libraries."
"Cmake support snappyWindows CMake builds do not include SNAPPY compression library support, thus the resulting applications are not able to parse TensorFlow models that were compressed with SNAPPY.
This pull request adds SNAPPY as ExternalProject, just as it's done with all other 3rd party libraries."
"Fix error with default python path selectionWhen the env var USE_DEFAULT_PYTHON_LIB_PATH is set to 1, and there isn't PYTHON_LIB_PATH set, then the configure used to select the first entry that python itself returned."
"DOC: Fix typo.you could could be I/O bottlenecked.
TO:
you could be I/O bottlenecked."
"fix memory leak, and remove duplicated implementsfix memory leak, and remove duplicated implements."
"rename target protobuf, closes #11599No description provided."
Refine docstringsNo description provided.
Support with statement for summary.FileWriterThis fix adds support of with for summary.FileWriter
Refactoring device name utilsremove duplicated code for full_name and legacy_name for DeviceNameUtils.
Branch 163282839No description provided.
"GPU Tracer: Add peer-to-peer memcpy annotationsIn order to trace memory copies between devices with more recent versions of
CUDA, the GPU tracer must capture peer-to-peer (i.e. device-to-device) memory
transfers (e.g. cuMemcpyDtoD, cudaMemcpy(., ., ., cudaMemcpyDeviceToDevice)).
Add handling to capture these."
Update version to rc1.No description provided.
Update README.mdRemove bad practices of sudo pip and install use safer pip install commands
Removing Mac GPU links out of r1.3.No description provided.
"Branch 163213141(repushing, will not squash commits)"
Fix GradientDescentOptimizer argumentBoth the text (line 370) and python code example example code https://github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/examples/tutorials/mnist/mnist_softmax.py#L59 uses 0.5.
"Fix ./configure on WindowsMake configure and configure.py work on Windows.
Fix http://ci.tensorflow.org/job/tf-master-win-bzl/1300/console@yifeif @gunan"
Enable Android lib bazel build for mips and mips64Currently the Android .so lib bazel build is failing for --cpu=mips and --cpu=mips64. This PR is fixing this.
Upgrade gRPCJust Jenkins testing for now.
Branch 163121296No description provided.
Minor corrections to tensordot documentationChanged some math indices formating and the format of the axes argument for Example 3.
Minor corrections to tensordot documentation.edit: was trying to merge against wrong branch. Will open another PR.
CherrypicksNo description provided.
Update bigquery_reader_ops.pyFix example code in comments by replacing tf.training.string_input_producer with tf.train.string_input_producer
Format 1.3.0 release notes; added a new feature to tfdbg sectionNo description provided.
Fix tf.reduce_logsumexp to accept `-inf`Fix #11692
#NAME?
R0.10I need it for test
add aarch64No description provided.
"SGDR Learning Rate Decay AlgorithmImplementation of
""SGDR: Stochastic Gradient Descent with Warm Restarts"" by Ilya Loshchilov & Frank Hutter.https://arxiv.org/pdf/1608.03983.pdf
Developed together with the author @loshchil
Adds cosine annealing for learning rate decay #11113."
"Ensure that the multi-instruction fuse can take shared inputsNote that the fuse action only works when the shared input / constant
appears after all of its consumers in the list of instructions."
"typo in the beginning commentThere is typo ""r"" before the beginning comment."
"Fix web link to tool_developers guideFix web link in README.md by changing it from:https://www.tensorflow.org/versions/master/how_tos/tool_developers/index.html
to:https://www.tensorflow.org/versions/master/extend/tool_developers/index.html"
"Add less_equal and logical_or to android_core_opsAdded below two ops to android_core_ops, as similar to #11631
tensorflow/core/kernels/cwise_op_logical_or.cc
tensorflow/core/kernels/cwise_op_less_equal.cc"
"modrelu activation functionmodrelu is widely used in complex domain.
It has been proved to be useful in several models:https://arxiv.org/abs/1511.06464, https://arxiv.org/abs/1612.05231"
update WORKSPACE uncommented line range to L19-L36No description provided.
"Cherry-pick GradientsDebugger from master to r1.3, with fixes to GPU build issuesNo description provided."
Fix wrong template type name in QuantizedAddUsingEigeninput type is T1 and smaller input type is T2
Branch 163011166No description provided.
Bump the required protobuf version for the pip packageForgot to do this as part of #10660
"Update wide_n_deep_tutorial.py-mkdtemp is low-level, and creates a temporary file somewhere out of sight that requires users to delete the file themselves. For the use case of a tutorial, it is best to use a method that cleanups the file when finished
-TemporaryFile does such as described above, but not available in Python 2"
"Add a custom tag for use by fusion opsCurrently when replacing an op with a fusion of many, the information which is carried by that fusion op is limited to a small fixed enumeration."
Model file example in Tensorboard repositorygraph_run_run2.pbtxt example was moved to tensorboard repository.
"Fix for invalid Darkflow commandThe command ""./flow --model cfg/tiny-yolo-voc.cfg --load bin/tiny-yolo-voc.weights --savepb --verbalise=True"" is not a valid Darkflow command and will result in the following error:"
Disable failing tests in Windows Bazel buildFix http://ci.tensorflow.org/job/tf-master-win-bzl/1278/console@gunan @caisq
"fix issues serving#421 Symbol not found __ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKcifix issues serving#421
the problem reason is single_image_random_dot_stereograms.cc<<kernels>> be dependent on TensorShapeProto
it define on protobuf, use class LogMessage. but no deps protobuf on BUILD rule python/ops/_single_image_random_dot_stereograms.so .
so Symbol not found: __ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(google::protobuf::internal::LogMessage::LogMessage)"
Fix missing spaces for several errorsNo description provided.
Branch 162842890No description provided.
"Exposed more graph io methodsI think these should probably be exposed since some of these are being used in examples, such as parsing utilities here."
[OpenCL] Extends matmul_benchmark.py to cover SYCLNo description provided.
"Add `as_default()` to `MonitoredSession`, `MonitoredTrainingSession` and `SingularMonitoredSession`.Equivalent to tf.Session.as_default(), allows refetching the session from elsewhere in code using tf.get_default_session()."
"[Issue 11241] Add checkpoint_convert.py script to package and make _RNN_NAME_REPLACEMENTS public.As requested in #11241 , this PR adds the script https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/rnn/python/tools/checkpoint_convert.py to the TensorFlow pip package and removes the leading underscore from the name of _RNN_NAME_REPLACEMENTS to indicate that this constant can be used by user code."
Update layers.pyI have added a check on beta with reference to the following issue raised.#11673
Fix stackoverflow link to avoid redirect warningRedirect warning is always shown to go to stackoverflow.
Add a note about tf.contrib.signal to the 1.3 release notes.Feel free to close if this is too late (don't know if there'll be an RC1).
Add new feature description for tfdbg to r1.3 release notesNo description provided.
Add Raspberry PI buildDoes what it says on the box; follow instructions in third_party/toolchains/cpus/arm/build_raspberry_pi.sh
Update monitors.pyRenaming PrintTensor to Logging Tensor
Update fft2d.cmakeThe cmake fft2d library was installing to '(fft2d_INSTALL)' instead of the appropriate variable set by CMake. I suspect this was unintentional.
Branch 162749134No description provided.
"Update sample_distorted_bounding_box to use v2 kernelThis fix is a follow up of #10840 so that sample_distorted_bounding_box uses _v2 kernel to follow the
API compatibility workflow (3 weeks)."
#NAME?
"make tf.read_file support non ASCII characters in filenamefixes the bug in issue #8581 ""tf.read_file doesn't support non ASCII characters in filename""."
"Add name of C++ source file to generated Python files for ops.While tracing back through the Python logging APIs to find their implementation, I ran into a dead end at the generated file gen_logging_ops.py. This generated file contains no information about where it came from. It took a fair amount of time poking through Bazel build files to track down the rule that generates this file from the output of a program that is linked against an object file that is produced by compiling logging_ops.cc."
Definitions about @protobuf between the workspace.bzl and grpcgrpc expects //external:protobuf_clib and //external:protobuf_compiler to point to the protobuf's compiler library.
Update normalisation.pyThe self for mean and vaiance has to be added as we need to retain the mean value as it is
Branch 162681705No description provided.
Repo UpdateNo description provided.
Merge1.3.0rc0 back to masterNo description provided.
Branch 162658391No description provided.
Updating RELEASE notes.No description provided.
added link to benchmarks in community pageNo description provided.
fix windows gpu build083f543 introduced some issues for windows gpu builds because tools like proto_text don't link with all gpu libraries  needed for gpu_tracer.cc.
Update CODE_OF_CONDUCT.md with additional protected characteristicGovernment/Military/Veteran affiliation (government catch-all) protected characteristic added to opening paragraph.
Fix build doc READMEREADME for generating documentation includes outdated information.
"[OpenCL] DenseUpdate syncFixes undefined symbol for tensorflow::functor::DenseUpdate<Eigen::SyclDevice, linking error."
"Add a function for generating random values with predefined seedI added a seeded random function, as it was requested in this PR:"
Add interface for long(int64) datatypeAdded below methods for TensorFlowInferenceInterface
"Add logical_or and less_equal to tf_op_files.txtAdd below ops implementations to the list
tensorflow/core/kernels/cwise_op_logical_or.cc
tensorflow/core/kernels/cwise_op_less_equal.cc"
"Add GPU implementation for tf.segment_sum.As per #11228, a GPU version of segment sum has been created."
Fix typosThis PR fixes some typos: partiton and executon.
"[XLA] Fix plugin example buffer address for tuplesCurrently the returnedﾂ se::DeviceMemoryBase(buf, size)ﾂ uses the incrementedﾂ buf, which may cause deallocation error."
"Enable passing scope to variable lookupsNB: Changes the public API, albeit in a backwards-compatible way."
Updating the RELNOTES for 1.3.0rc0.No description provided.
Revert \Add GradientsDebugger to tfdbg\This reverts commit 31f1375.
_CoordinatedSessionCreator should inherit from SessionCreator._CoordinatedSessionCreator should inherit from SessionCreator.
Add comment to clarify semantics of opt_level parameter.Note: This is my first PR against this project. Let me know if I've done anything wrong. I should be on IBM's corporate CLA.
replace supervised session to monitored sessionThe author should forget to modify doc for MonitoredSession._is_closed when refactoring supervisor to monitored session.
#NAME?
Remove unittest import and duplicate logic from sparse_ops_testNo description provided.
"[XLA] Fix plugin example buffer address for tuplesCurrently the returned se::DeviceMemoryBase(buf, size) uses the incremented buf, which may cause deallocation error."
Reverted NHWC workarounds.This commit removes the NHWC workarounds we had created earlier.
"Fix issue #10399Because of the bytes compatibility this function is returning bytes
when it should be returning strings."
Branch 162404670No description provided.
Branch 162383623No description provided.
read_up() for slim parallel reader #11164No description provided.
Revert commits 1.3.0rc0Reverting non_max_suppression_v2 op and @caisq tfdbg change for cloudml-gpu build.
"Model average replicas optimizerWe have implemented a new replicas_optimizer ""ModelAverageOptimizer"" to reduce cross-node communication cost. It is mentioned in the following issue:"
"python: remove the TRAINABLE_RESOURCE_VARIABLES graph keyThe graph key TRAINABLE_RESOURCE_VARIABLES seems to have been removed, drop the lines in this PR."
"Update workspace.bzl to use latest farmhash commit to support s390xUpdate workspace.bzl to use latest farmhash commit to support s390x.
Please review"
Merge pull request #1 from tensorflow/masterUpdated on 2017/07/18
Fix typo in exception.Title says it all.
"Weight normalization for RNN Cells.The current RNN implementation executes a user defined
function (the call() method of subclasses of RNNCells) inside a
tf.while() loop. Weight normalisation requires a one-time
normalization of the transition matrices prior to
entering the while loop. The following 2 edits have been made in
tensorflow/python/ops to enable this functionality:"
Add mark_flag_as_required functions to make the APIs compatible with …Add mark_flag_as_required functions to make the APIs compatible with python-gflags.(#11195)
Add mark_flag_as_required functions to be compatible with python-gfla…Add mark_flag_as_required functions to make the APIs compatible with python-gflags.(#11195)
"Fix typosThis PR fixes some typos: tranposed, observaiton, the the, implementaton, and concurently."
"update:tf_inspect.pyDeprecationWarning: inspect.getargspec() is deprecated, use
inspect.signature() or inspect.getfullargspec()
if d.decorator_argspec is not None), _inspect.getargspec(target))"
[DO NOT MERGE] Remove RTLD_GLOBAL when importing pywrap_tensorflowJust making a pull request to run tests.
"https://github.com/tensorflow/tensorflow/issues/9481Descrition:
Fix the bug that Tensorflow on Windows running into issues when there's UTF8 encoded characters in the file path.
Solution:
Switch to use WideChar API calls for Windows, like the CreateFileW,FindFirstFileW,FindNextFileW, LoadLibraryExW.
Test:
Install Tensorflow on Windows with path have Chinese characers in it. No issue.
Run command ""from tensorflow.contrib.rnn.python.ops.gru_ops import *"" No issue."
Fix contrib learn testcasesFix contrib learn regex in testcases for Windows build
Fixes 'window_size' may be used uninitializedNo description provided.
"Add the Constant operator classCreate a custom operator class to create constants in the Graph,
and introduce the Operator marker annotation to identify
operator classes."
"Add 'axis' option for 'tf.boolean_mask()'This fix tries to address #9721 where it was not possible to pass an
'axis' option for 'tf.boolean_mask()'."
"Correct learning rate in code snippet.Correct the learning rate in code snippet, such that it reflects the expected outcome, ~92%, instead of ~90%."
"[OpenCL] Fixes SYCL profiler tests (#141)The profiler relies heavily on the canonical device being listed in the
TFProf nodes, which is only set for those devices which return True from
CountAsCPUTime, so we need this to return True for SYCL device nodes
too. The check for whether the node will run on an Accelerator comes
from IsPlacedOnAccelerator."
"Fixes ArgMax test deprecation warningsThe recent commit cbe1ef0 marks the dimension argument of argmax and argmin as deprecated, which are used in the corresponding tests and so this brings up warnings when the tests are run. The tests should be using the axis argument instead."
"add nodouble option for all cwise opsthis is the following patch of ac98d11 to support nodouble
option for all cwise ops. The macros REGISTER* defined withinANDROID_TYPES_SLIM should be changed to empty, and it impacts
all the cwise ops, so, all the changes for the cwise ops have to be
in a single patch."
Add `required` argument for `DEFINE_*` APIs and warning information f…Add required argument for DEFINE_* APIs and warning information for unparsed args. #11195
Update get_started.mdFix various errors in print out statements and unnecessary lines of code
Added missing `marital_status` assignmentNo description provided.
"Java API Generics Phase 2This is the big change for generics. The main classes like Tensor and Output acquire type parameters. The test programs have been updated accordingly. Existing code written against the non-generic API should still mostly work but will generate ""raw types"" warnings. The setup of the tables in the Types class from phase 1 has been centralized into Types itself to ensure it happens early enough."
"add recovery_wait_secs option for MonitoredTrainingSessionIn order to reduce the sleep time by worker to wait for a model to be initialized or restored ,
ｼ詣e add  recovery_wait_secs option for MonitoredTrainingSessionｼ径nd we are able to start distributed training faster."
"support \required\ for tf.app.flagssupport ""required"" for tf.app.flags"
tf.app.flags support \required\add required support for tf.app.flags
Add SquaredDifference gradientI added gradient function for the SquaredDifference and test case.
Update head.pyUse tf.losses instead of deprecated contrib
[OpenCL] Stats trackingAdds buffer size tracking to SYCL allocator (#114)
Fixes 'batch_size' may be used uninitializedclang++-3.6: warning: 'batch_size' may be used uninitialized in this function
"Show usage when no arguments passed to import_pb_to_tensorboard.pyIt seems like --model_dir and --log_dir should be required arguments.  After adding at least one required argument, then parseargs handles no arguments cleanly."
Fixing a typo in a READMENo description provided.
Add white spacesThis PR adds white spaces on docstrings.
Update variables.pyChanged ValueError messages to format the passed parameter in the error message.
"Remove RTLD_GLOBAL when loading pywrap_tensorflowNote: I'm making this a pull request to test it. I don't propose merging as-is, and this will likely need to be split up to be reviewed sensibly."
"Add \name\ variable support for tf.einsumThis fix adds ""name"" variable support for tf.einsum"
Updating the version to 1.3.0-rc0.No description provided.
Branch 162017464No description provided.
Fix syntax error in sample codeThis would have otherwise caused a non-keyword arg after keyword arg
Change `as_cluster_spec` to `cluster_spec`No description provided.
R1.2No description provided.
"The previous commit attempted to fix a problem for PowerPCarchitectures, which require a different gcc optimization argument.
However, this addition had two implementation errors, which caused all
architectures to receive this deprecated compiler flag and therefore
produce a non-optimized tensorflow compilation."
Branch 161949540No description provided.
R0.10No description provided.
R1.2No description provided.
Adding a link and fixing up two titlesThis should make it easier to find the newest documentation.
Branch 161868747No description provided.
datset.md - Fix minor typo in codeChange tf.contrib.data.Dataset.TextLineDataset(filename) to tf.contrib.data.TextLineDataset(filename)
"Update CODEOWNERS, add owners to Windows, TPU componentsNo description provided."
update word2vec_basic.pyFix TSNE invocation in tutorials word2vec assignment
Fix TSNE invocation in Udacity word2vec assignmentDefault TSNE method recently changed to the approximate method='barnes_hut' which fails to converge per #11455
"Fix on 'Use mcpu instead of march for ppc64le'Use of [] around 'if is_ppc64le; then' makes it always return true,
causing ""deprecated: -mcpu"" gcc warnings on every other arch.
This fixes commit 9f57dc8"
Adding a comma to a Python snippetNo description provided.
"dequeue or dequeue_many will fail immediately after close the queueAfter close the queue, subsequent dequeue and dequeue_many operations that won't block waiting for more elements to be enqueued and will fail immediately."
PR again: Enable building label_image with jpeg/gif/png decoder for Android.Modify #11451 according to @petewarden's comments.
Update github link in roadmap.mdUpdate github link with latest labels.
Change if_x86 to if_linux_x86_64VC doesn't have -msse3 and -msse4.2 options.
"Use Windows Threadpool for SchedClosureBefore this change, the distributed runtime will create a new thread for each mini-batch. Quite wasteful."
"Fix broken AttentionMechanism docstringsCurrently, for all AttentionMechanisms, the memory_sequence_length arg does not get formatted correctly in the docs, making it easy to miss."
Branch 161686867No description provided.
Print default when CUDA and CuDNN versions are not specifiedFix #10456.
Deleted unnecessary repetition of the same text.The same text was repeated two times. I deleted the repetition.
Add a code of conduct.No description provided.
update word2vec_basic.py:\tFix TSNE invocation in Udacity word2vec assignmentUpdate 5_word2vec.ipnb-
"Windows: Build TensorFlow with wrapper-less CROSSTOOLAfter #11317 is merged, we can now build TF with the wrapper-less CROSSTOOL!"
"Enable building label_image with jpeg/gif/png decoder for Android.This PR adds the Android platform building of the  jpeg, gif and png decoder to the C++ image classification demo ""label_image"".
It enables the evaluation of practical dataset such as ImageNet on Android platform devices, for both model precision, and hardware performance."
Fix linking options issued by bazel in order to make gradients registerLink to the discussion
Updating install_golang.sh - bumping to 1.8.3No description provided.
"Disable nn_test on WindowsDisable //tensorflow/python:nn_test util it's fixed.
Related issue: #11345@gunan"
"Fix typosThis PR fixes some typos: Compatble, objets, overriden, reseting, an an, libraryh, and a a."
For deep learningNo description provided.
Branch 161598138No description provided.
"Fix unpickling/copying tf.app.flags.FLAGSpickle.load() and copy.copy() check for the presence of  setstate().
The problem is that this check is made in the freshly allocated instance which
has not been init()-ed. Thus it's dict is completely empty andgetattr() fail with KeyError."
"Add CODEOWNERSAdded what we know about contrib mainly, and some well-separated components."
Enable building grpc+verbs runtime on any Linux boxI don't have a Windows machine so it is probably broken on Windows. Currently I don't have an idea on how to achieve cross-platform portability. Any suggestions?
"modify SaverDef default version with v2SaverDef V1 has been deprecated, so modify default version with V2."
Imply default argument in docstring properlySince the default is as_text=True the current docstring is a real gotcha IMO. Clearer to flip the explanation around.
Branch 161478803No description provided.
Fix secure urls and typosReplaced https://tensorflow.org with https://www.tensorflow.org to prevent expired website security certificate NET::ERR_CERT_DATE_INVALID warning
Daily Pull Request (July 10th 2017)No description provided.
Temporarily disable barrier_ops_test on MacNo description provided.
Changed to correct versionNo description provided.
R1.2No description provided.
"WAV encoding/decoding fixes.Hi,"
Fix minor docstring formatting issueNo description provided.
MPI path updatesThis commit contains two updates:
[XLA] Add filtering of tests for 3rd party devices on the python suiteCurrently the tests are marked with specific exclusions for devices.
"modify SaverDef default version with v2SaverDef V1 has been deprecated, so modify default version with V2."
"Fix typosThis PR fixes some typos: Acccumulate, represnting, and implictly."
update folder link in docsNo description provided.
"Third-party Scala API Links in the DocumentationI added a couple links to my Scala API repository in the documentation pages. I'm not sure if it's in the expected format, but feel free to rephrase if needed."
"fix broken links, add links check to sanityNo description provided."
fix broken link in adding_an_op.mdNo description provided.
"GPUDirect RDMA Out-of-Band Tensor TransportThis PR implements GDR out-of-band transport for TensorFlow distributed runtime, complementary to current gRPC transport. It uses gRPC as control plane to setup rendezvous for each tensor transmission, and utilizes GPU Direct RDMA whenever possible to transmit tensors in remote GPU memory through network interface card (NIC), bypassing host memory and CPU entirely. It gracefully falls back to ordinary RDMA or even gRPC when GDR is not available."
"[XLA] Add DT_HALF to the list of floating point typesThis should not affect the existing CPU and GPU devices, as they do not claim support for D_HALF, and the final registration for each device is the intersection of their advertised list and the global lists."
Skip environment check if config is from coreSince core RunConfig doesn't have environment.
test for partial_run_setup with no feeds passedNo description provided.
test for partial_run_setup with no feeds passedNo description provided.
Disable more timeseries py tests failing under GPU PIPNo description provided.
"Optimizers in the C++ API - Issue 9837This pull request adds the Optimizer base class and the GradientDescentOptimizer class to the C++ API.
More details here: #9837"
Allowing the PIP_TEST_ROOT variable to be set.PiperOrigin-RevId: 161087696
add h5py to dockerfileAdd h5py to dockerfile. Fixes #11356
"Update README.mdUpdate readability in example, replaced HTTP link to HTTPS links, and added a link"
Alpha DropoutFixes #10612
Remove unnecessary empty BUILD file (DO NOT MERGE)No description provided.
"small update to partial_run_setupleaving out the ""feeds"" argument for partial_run_setup produced an error due to the default being None. Passing an empty list as ""feeds"" fixed the problem so make this the default."
Fix misspells :)Fix misspells on comments.
Improve examples for Python 3 compatibilityThis PR improves examples in docstrings for Python 3 compatibility.
Fixed typo in docstringNo description provided.
"Adapt TensorFlowTestCase.setUp() to new reset_default_graph() semanticsAvoid calling reset_default_graph() directly to prevent exceptions in
cases where test methods error out from within nested graph contexts,
which can leave _default_graph_stack non-empty in certain Python
versions."
Branch 161140653No description provided.
Branch 161124799No description provided.
Backport get_started.md to 1.2.0No description provided.
Use mcpu instead of march for ppc64lemarch is not support by gcc on ppc64le
Minor fix typoMinor fix comments typo.
"[OpenCL] Fixes SYCL registration for MapStageOp (#117)As the MapStageOp is actually run on the host, we need to ensure that
both the 'key' and 'indices' tensors are in host memory. This now
mirrors what CUDA is doing."
"c: fix a possible segmentfaultWe also need allocation for output_values_ when updating output_, or we will get a segment fault on:"
"Point protobuf to 0b059a3d8a8f8aa40dde7bea55edca4ec5dfea66This change won't be needed after updating protobuf to a version
containing protocolbuffers/protobuf@0b059a3"
"adds missing \pass\ to empty method in tf.contrib.learn.DNNClassifier docadds missing ""pass"" to empty method in tf.contrib.learn.DNNClassifier doc"
Branch 160981881 (DO NOT MERGE YET)No description provided.
Fixed 32-bit build error in tensor_forest.This patch fixes the build error described in #11229.
fix beam search for windows and enable seq2seq unit testsfix for #11277
Return output_graph_def in tools/freeze_graph.pyIt makes sense that def freeze_graph works with files for both the input graph and frozen output graph.
R0.12No description provided.
"Fix typosThis PR fixes some typos: parition, partiton, grpah, excuted, definitons, and operaiton."
Fix quantization tutorialFix this tutorial on quantization.
grappler swap_to_host bug fixI have already solved the problem mentioned in the following issue:#11163
grappler swap bug fixI have already solved the problem mentioned in the following issue and tested in my local environment:#11163
Fix memory leak when using `tf.layers`Uses weakref so that PER_GRAPH_LAYER_NAME_UIDS doesn't prevent Graphs from being garbage collected.
R1.2No description provided.
SpellingNo description provided.
Updating DNNRegressor module directoryThe model is now located at tf.contrib.learn.DNNRegressor and the code will not run without this change.
[XLA] Add scaffolding to allow XLA unit tests to run for other devicesThis is an indentical change to the one in the compiler/tests directory.  It allows devices other than the CPU and GPU to be available targets when running the tests in compiler/xla/tests.
Fix TODO avoiding serialization in gRPC/GPU pathSee #10530 and #10531 for the rationale.
Add Edward and GPflow to community pageEdward is a library for probabilistic programming with a few thousand active users. GPflow is a library for Gaussian processes which also has an active user base.
Update Dockerfile.gpu with python3There is already Dockerfile.gpu ( with gpu version ). but it is for python2 users. so I make a Dockerfile.gpu-py3 with python3 users. ( There is no different this from Dockerfile of Image that is on Docker-hub )
Update Dockerfile.gpu with python3There is already Dockerfile.gpu ( with gpu version ). but it is for python2 users. so I make a Dockerfile.gpu-py3 with python3 users. ( There is no different this from Dockerfile of Image that is on Docker-hub )
Adding generics to the Java API - Phase 1Here is an initial cut at enhancing the Java API with generics.
Revert \Added assertion error in reset_default_graph() (#11158)\This reverts commit 3db38f1.
"install cub under external/cub_archive to fix windows gpu buildFix cmake/windows gpu build.
install cub under external/cub_archive so  where_op_gpu.cu.cc will find it for cmake and bazel in the same place.8280e0a"
[OpenCL] Adds -Wno-c++11-narrowing to ComputeCpp device compilerAdds -Wno-c++11-narrowing to ComputeCpp device compiler flags to avoid build errors on 32-bit targets. (#109)
"Use custom BUILD file for protobufThis change won't be needed after updating protobuf to a version
containing protocolbuffers/protobuf@0b059a3"
remove some warningremove some c++ compiler warning.
remove some warningremove some warning for master branch.
"add a new config option sycl_nodouble for SYCL buildWhen TF is built with SYCL enabled, the SYCL device code is generated
at build time. Currently, all the data types such as float and double
are registered to generate the device code."
Update gradients_impl.pyCorrected documentation of hessians() function.
Configure script code reduction (no merge please)Please don't merge yet.
Fix #11152: Adding import for pythons threading libraryState in the programmers_guide/threading_and_queues example where the threading.Thread is coming from. This fixes #11152.
Updating Java doc formatting issuesUpdating Java doc formatting issues
Update gradients_impl.pyCorrected documentation of hessians() function.
R1.2No description provided.
Using pd.Series instead of pd.DataframeSmall change to use Series for x and y values for clarity and simplicity. Code executes equivalently afaict.
updated for Estimators and input_fnNo description provided.
Add wget to be installed in docker imagessame as #11215 but changes suggested for all docker files.
Add 'wget' to be installed in docker imageI am trying to train inception v3 net for imagenet dataset using instructions at-
Disable flaky cwise_ops_test due to broken acosh on windows.No description provided.
"Tidy up MKL configuration.Also only use ""--config=mkl"" to build with MKL support."
Fix broken link for reader_base.protoThis fix fixes broken links for reader_base.proto in version_compat.md and version_semantics.md:
fallback to find if locate is not usedRelated to #11029 and discussion in #9580
Branch 160731226No description provided.
fix_typo of map_structure docNo description provided.
fix typo: SYC -> SYCLNo description provided.
Enable bitcode compilationIn order to enable bitcode compilation it is necessary more than adding -fembed-bitcode. The MACOSX_DEPLOYMENT_TARGET variable must be defined and exported as well.
Support placeholder for parameter k in tf.nn.in_top_kThis fix tries to address the issue raised in #9717 where it was not possible to have tensor for k in nn.in_top_k.
fix incorrect usage of num_gpus & num_workers (#7312)Removed unnecessarily restrictive check as discussed in in #7312 and validated the change using 2 single GPU VMs.
Branch 160665742No description provided.
"[Java] Add base classes and utilities for operation wrappers.This pull requests includes a set of basic classes, interfaces and utilities useful for the automatic generation of operations by the upcoming C++ module. They are meant to be used more as internal tools than being part of the public API."
Merging 1.2.1 back into master.No description provided.
"Remove type constraint on shape_invariantsThis PR fixes the unnecessarily strict type checking addressed in issue #11115. Turning type checking off for the shape_invariants parameter in tf.while_loop will allow the parameter to be more easily used when, for example, trying to provide an invariant for an LSTMStateTuple variable."
[OpenCL] Fixes warning caused by half typeCan one of the admins verify this patch?
[OpenCL] Fixes transpose operationNo description provided.
TensorFlowNo description provided.
Only use weakref.finalize from backports in Python < 3.4The backports module should not be forced as a dependency for Python >= 3.4 as weakref.finalize has been introduced in Python 3.4. This solves #11082 and an Arch Linux bug.
"Fixed 404 page in the docs (install_c.md)When following the current link to c_api.h the link will results in a 404 page, see: https://github.com/tensorflow/tensorflow/tree/master/c/c_api.h"
"[XLA] Ensure that the 2 data types chosen by the test are both valid for the deviceSimple change.  The test previously assumed that all devices support float64, which isn't true for our device."
Adding support for s390x for boringsslAdding support for s390x for boringssl through patched_http_archive rule.
"Improve docstrings involving package structureThis PR improves docstrings involving tf.learn. In the case of tensorflow_dataframe.py, I think it is better to put just DataFrame in order to keep consistency within one file. Except for the case, all the tf.learns are replaced by tf.contrib.learns."
"Fix typosThis PR fixes some typos: the the, Dont, Initalized, Dimenson, and resuts."
Fix an errorFix an error or the if statement will never be true.
Update head.pySwitching to tf.summary.scalar
Added assertion error in reset_default_graph()See #11121
Updating release.md.No description provided.
"Fixes to the getting started documentationRemoved some unneeded code, streamlined the code, fixed a broken example, corrected output for example code, minor grammar fix"
Fix sparse_placeholder error when int is passed in shape argumentThis fix tries to address the issue raised in #6749 where and error
Printdhruv patch 2Update ISSUE_TEMPLATE.md
Branch 160538962No description provided.
Fix for contrib.layers test that was raising an IndexError (#11069)variable name change and documentation clarification
"Arbitrary dim for sliceAdd arbitrary dim support for slice op(#8873)
There is still a compiling problem. When build //tensorflow/core/kernel:slice_op_testｼ栗 got the following errors:"
Windows: Add missing source files declaration for Bazel buildFix http://ci.tensorflow.org/job/tf-master-win-bzl/1169/@gunan
Add Sublime Tensorflow project in welcome.mdSublime Tensorflow is a Sublime Text plugin. It offers you:
"Add bazel build configs for cpu type 'x64_windows_msvc'Without this fix, the final generated whl file will contain a '_pywrap_tensorflow_internal.so' instead of '_pywrap_tensorflow_internal.pyd'"
"Fix typosThis PR fixes some typos: succesfully, optimzations, unecessary, accross, trainning, beacuse, and dont."
Make consistent author information formatThis PR makes formatting consistent. All the other formats for author information are described as et al. not et. al..
Fix typosNo description provided.
"fix link in README.md in Using TensorFlow via Dockercorrectly link parameterized_docker_build.sh to its actual location, instead of README.md"
"Fix to TensorFlow-Slim READMESame TF Slim README fix as earlier today.
This is a resubmit with my email added to git config to pass your CLA check."
minor fix to TF slim READMERemoving duplicated parameter in TensorFlow-Slim documentation.
extract common functionsrelated to #10793 and #8873
enable mkl in eigen for qr_op#7128
"Make TensorFlow build with wrapper-free MSVC CROSSTOOLWith the latest Bazel release (0.5.2), we can now build C++ code on Windows without the python wrapper scripts! This gives faster and more reliable build, but gcc flags in BUILD file won't be translated."
"Remove implicit iteration from third_party/toolchains/cpu/CROSSTOOLBazel will stop supporting implicit iteration soon, and will require explicit
'iterate_over' message. This cl updates the only affected Tensorflow crosstool."
change an error in annotation`there is an error in annotation of ops.py in tensorflow\tensorflow\python\ops. I think it is just a spelling mistake
fixing a single typoNo description provided.
[Java] Add support for list(string) attributes in OperationBuilderFeature: implement setAttrStringList method in Operation Builder with Java api
Feature: implement setAttrStringList method in Operation Builder with java apiImplement setAttrStringList method in Operation Builder with java api.
Fix broken link in programmers_guide/embedding.mdThis fix fixes broken link in programmers_guide/embedding.md:
Bug fixes to input function tutorialI tried running this example today and hit a few issues. This PR fixes the issues I found:
"Fix typosThis PR fixes some typos: to to, of of, that that, and this this."
Branch 160346151No description provided.
1.2.1 PRPatch release PR. Updating versions to 1.2.1. Updating the release notes. Updating markdown version. Patching Github issue 11005.
Support S3 Filesystem for TensorflowThis is for S3 Filesystem support in Tensorflow.
Fixed some warnings related to signed/unsigned comparisonThis fix tries to fix some warning related to
Fix import in documentation documentationNo description provided.
"Fix #10823 moving vlog to higher levelThis PR contains fix for moving VLOG level to higher level as specified in the issue.
VLOG is moved to level 3 as suggested in the comments."
Fix some typos in doc strings of Conv3D of keras.No description provided.
"doc: update the conv1 shape.Update the conv1 shape from [5, 5, 32, 32] to [5, 5, 1, 32]. (1 means gray image.)"
"Adding Swift Language Bindings.https://github.com/PerfectlySoft/Perfect-TensorFlow
Supports Swift 3.1/4.0 on both macOS / Ubuntu Linux, with full documentation and example."
Fix for contrib.layers test that was raising an IndexErrorFollowing the discussion at #11049
bugfix: summaries variable was undefined.The definition of var summaries was missing in the first code example.
"Update documentation regarding 'shape' parametersThese functions are documented to take lists, but perfectly
accept tuples. Explicitly documented this case."
11055: test to reproduce Keras load model raises ValueError when loading optimizer weightsNo description provided.
Update get_started.mdThe eval_input_fn is not defined here.
"Fix typosThis PR fixes some typos: as as, is is, for for, not not, and are are."
variable name change and documentation clarificationAddressing #9927
fix get_started custom modelOriginal file does not run because eval_input_fn is undefined.
coerce dict keys to strings when sorting for python3 compatWhen tensor dicts have heterogeneous key types python 3 blows up due to the way sorted is being used.
Removed unnecessary row in estimators extension tutorialNo description provided.
Update momentum.pyfixed a typo in the documentation
test_session: fix doc formattingThis is a blind fix following create_local_cluster example below. See broken doc formatting here:
"Update optimize_for_inference_test.pyThese two should be interchanged ""self.assertNotEqual(""ResizeBilinear"", node.op)"" with ""self.assertNotEqual(""MirrorPad"", node.op)"""
"Adjust doc MNIST learning rateThe gradient descent learning rate specified in the MNIST beginner
tutorial should be 0.5 instead of 0.05 to stay consistent with the
actual code in the repo."
Negative axis support for gradient of reduce_prodFixes  #10835
Fix issue template tensorboard issues linkReported in #10975
"Windows: Fix CUDNN_INSTALL_PATH in ./configureConvert CUDNN_INSTALL_PATH from path style like c:\tools\cuda to c:/tools/cuda
Didn't notice this before debugging #10995, because on CI, we set CUDNN_INSTALL_PATH directly."
[XLA] Add a unary ops cosine test to the standard testsAdd an XLA cosine python test.
Sort shuffled indices before indexing NumpyFeedIt is possible to use h5py datasets with tf.estimator.inputs.numpy_input_fn as there is a high level of compatibility.
"Support specify the user name when writing data to HDFS。 You can spec…When I write data to HDFS I can not specify username
This scenario is used by multiple users using the same client as a local user."
docs: add eval_input_fn in custom model codeNo description provided.
Update DetectorActivity.javadarkflow parameter fix
Typo fix in Dataset API's READMENo description provided.
"Moved tpu_config.RunConfig check to beginningThis is necessary because wrapped_model_fn  calls _create_infeed_enqueue_ops_and_dequeue_fn  which requires a TPU Config. Though the actual call is delayed to a later time, it would be better to raise this error earlier.  Also this check is only necessary inside use_tpu block."
"pass -O options when generating dependencyIn the current implementation, when generating the dependency in L126, the optimization option is not passed to nvcc, which makes nvcc to generate a lot of warnings that looks like:"
Updated link to use HTTPSHowdy!
[Build] Reduces build time for SYCL targetNo description provided.
"Use native compute capabilities as defaultInstead of using 3.5 and 5.2, would it be better to use compute capabilities of native GPUs?"
[OpenCL] Fixes run_metadata_test for SYCLThis test is designed to test CUDA specific behavior
"[OpenCL] Fixes CUDA specific test run on SYCL (#56)The testBadParentValuesOnGPU should only be run on CUDA devices, as the
test checks for particular CUDA behaviour. We don't actually provide a
SYCL kernel for GatherTree and so it's not a problem that the tests
don't target SYCL."
[OpenCL] Registers SquaredDifferenceNo description provided.
"Update initializers.pyAccording to Understanding the difficulty of training deep feedforward neural networks and the codes, it is sqrt(2. / (in + out))"
[OpenCL] REGISTER -> REGISTER6Fixes compilation error for the SYCL target
"python_configure.bzl: Add python import library on WindowsWhen building a Python C/C++ extension on Windows, we need to link to the python import library pythonXY.lib (eg. C:\Program Files\Anaconda3\libs\python35.lib)
See https://docs.python.org/3/extending/windows.html"
"[OpenCL] Provides SYCL kernels for 3D pooling (#97)Uses simple SYCL kernels to provide implementations for all 3D pooling
ops currently in use. These kernels pass the tests, but haven't really
been optimized."
Update WorkerCacheLogger::RecordRecvTensorUpdate WorkerCacheLogger::RecordRecvTensor to let future improvements to tracing tools:
Update WorkerCacheLogger::RecordRecvTensor to let future improvements… to tracing tools:
"Fix typosThis PR fixes some typos: intialized, be be, by by, in in, tranformation, new new, constaint, and mean_square_error."
"Correct the learning rate as per the code snippetThe training step, train_step = tf.train.GradientDescentOptimizer(0.05).minimize(cross_entropy) states the learning rate as 0.05, whereas the documentation states 0.5. This needs to be corrected."
R1 1No description provided.
"expand inline for debug builds to limit number of symbols#10867
debug build does not expand inlines which will generate lots of unused symbols that result in too many entries in the def file for python wrapper dll.
Change debug build to expand inlines."
Branch 159649743No description provided.
Fixed path to seq2seq.py and minor formattingNo description provided.
"Improve docs for tf.nn.depthwise_conv2d_nativeHi,"
Fix mismatched delete in mkl_tfconv_op.ccThis fix fixes mismatched new[]-delete in mkl_tfconv_op.cc
R0.11No description provided.
[OpenCL] Registers AdjustContrastv2Can one of the admins verify this patch?
"fix error string formatI just got this helpful error message, and I'm submitting a fix for the format."
"Add the shared libraries in the quickstartWhen following the quickstart steps of the golang README.md, below issue is found:"
[XLA] Add override of Permute to fix compile errorsThis is an attempted fix for older compilers that can't deduce the template args.
"Java API to get the size of specified input list of operations.This opens up access to the TF_OperationInputListLength C API from java, for operations that return specified input lists."
Added initial support to ROCmCan one of the admins verify this patch?
Branch 159575817No description provided.
correctly vulcanize <link rel=\import\ type=\css\No description provided.
Pass rate and other settings to parent classesSee #10845
Java: equality semantics for Operation and Output@asimshankar mind taking a look? Thanks!
[OpenCL] Registers RGBToHSV and HSVToRGB (#91)[OpenCL] Added RGBToHSV and HSVToRGB
"Fix Java OperationBuilder documentation example""Constant"" is not a registered Op type, ""Const"" is."
Fix referencesThis PR fixes deprecated URLs.
"Update sample_distorted_bounding_box to use Tensor Input for min_object_coveredThis fix tries to address the issue raised in #10715 where it was not possible
to use dynamic values for min_object_covered in sample_distorted_bounding_box."
DirectSession Run() : Variable name  typoIn core/common_runtime/direct_session.cc (end of DirectSession::Run(...)) name correction : parition_graph_defs -> partition_graph_defs
Remove TensorBoard codebase from TensorFlow.TensorBoard can now be found in its own repo:https://github.com/tensorflow/tensorboard
Documentation fix: Referencing correct pip in installation examplesThe examples are supposed to be for Python2.7 so it makes sense that they refer to the correct pip (pip instead of pip3) to avoid any potential confusion.
Performance improvements for hessians.This PR improves the performance of hessians by using while_loop instead of using a for loop in python. This improves both the build time (to create the graph) and the evaluation time. Full details are here.
add log_softmax c++ gradientNo description provided.
"Variable name typoIn the ""Working example: Tracking Multiple Metrics"", the variable name ""name_to_updates"" --> ""names_to_updates"""
Fixed XLA for integration as submoduleThis PR incorporates some of the known workarounds like str(Label(...)) to enable the integration as a git submodule when using XLA.
"Implemented selu activation #10612This pull request implements the SELU activation function. The activation function works properly when training a simple MLP for digit recognition. But, the following test fails: //tensorflow/python/kernel_tests:relu_op_test. This happens due to large error when checking the gradient of gradient. The log is show below:"
"Tutorial: Pass train_file.name instead of train_fileChange read_csv argument from train_file to train_file.name in tutorial
for Linear model."
Merge pull request #1 from tensorflow/mastermerge from master
Arbitrary dim for tileAdd arbitrary dim support for Tile Op. #8873
"[Docs] Clarify Python requirementExplicitly state Python target arch on Windows.
Reference: #10786 (comment)"
Update performance_guide.mdNo description provided.
Fix #9392No description provided.
Update performance_guide.mdNo description provided.
Merging r1.2 back into master.No description provided.
"Link to TensorBoard repo in ISSUES_TEMPLATE.mdAny new TensorBoard issues should be filed against the TensorBoard repository, not on core TensorFlow."
Update docker rebuilding instructionsFixes #7885
"Changing context search for BiasAddGrad rewrite from BFS to stricter checkCurrent approach for rewriting BiasAddGrad node searches the backward data-flow of BiasAddGrad for MatMul or Conv2D node, whatever is found earlier is considered as the context for rewriting BiasAddGrad.  We discovered that this approach is not robust, so we are changing it to rely on a much stricter and robust check for context search."
"Refactor and implementation of the camera API 1, it fixes #8736As detailed in #8736, the legacy devices should work with the Camera API 1, the detector demo would need even more refactor in order to work"
"Added 7 comments on core_rnn_cell_test.I added 7 comments on core_rnn_cell_test.
Thanks!"
Fix a bug in topk_op.cc307df70 is causing failures inhttp://ci.tensorflow.org/job/tf-master-win-bzl/1110/console :
"[OpenCL] Fixes device name comparison stage_op_testChanges the fixed '/device:GPU:0' expected device name string to the name returned by 'test/gpu_device_name()', as the device name could be '/device:SYCL:0' or '/device:GPU:0'."
"[OpenCL] Fixes grpc test failure for SYCL devicesThe test constructs a graph containing an IdentityOp on strings, which doesn't exist on CUDA and SYCL devices. The test expects to fail for CUDA devices, so add the same expectation for SYCL devices."
"Fix typosThis PR revises the sample usages for lookup, and fixes some typos: contants, Opeartor, squeee, nulll, Contant, and Tranpose."
"BeamSearchDecoder: fix beam not full, and add test modulefix issue mentioned in #10641
and add a test module for it"
Merging r1.2 back into master.A bit confused with some of the resolutions on non_max_suppression_op.cc
Fix sanity status reporting.No description provided.
Add a tf.contrib.image.translate functionProgress on this issue: #781
Cifar10No description provided.
Fix shape.go's Size function.Fixes #10741.
don't lock markdown version and bring CI deps install script in sync with setup.pyThis markdown version lock could cause versioning conflict for downstream (e.g. if requirements are compiled and resolved by pip-compile). Wondering If there's a reason to lock this version
Pin Java bindings to 1.7The android_library bazel rule currently enforces Java 7https://github.com/bazelbuild/bazel/blob/6c1106b1a721516d3b3db54d2e1c31b44a76fbb1/src/main/java/com/google/devtools/build/lib/bazel/rules/android/BazelAndroidSemantics.java#L73
"Padding queue support for tf.estimator generator input pipelineSo, as I desrcibe here, there is no padding possibilities in current estimator's input pipelines."
Merge pull request #1 from tensorflow/masterupdate
DataFeeder fails on default random_stateFixes len() of unsized object error in DataFeeder due to incorrect object type.
"orthogonal_initializer bug fixFixed a bug in ""orthogonal_initializer"" function in init_ops.py file."
"To fix link errorTo fix link error when building //tensorflow/cc:tutorials_example_trainer
The local environment is centos release 6.8 (Final), gcc 4.9.2, bazel 0.5.0.
Error detail: /opt/rh/devtoolset-3/root/usr/bin/ld: bazel-out/local_linux-opt/bin/tensorflow/cc/_objs/tutorials_example_trainer/tensorflow/cc/tutorials/example_trainer.o: undefined reference to symbol 'clock_gettime@@GLIBC_2.2.5'"
"To fix link error when building //tensorflow/cc:tutorials_example_trainerThe local environment is centos release 6.8 (Final), gcc 4.9.2, bazel 0.5.0.
Error detail: /opt/rh/devtoolset-3/root/usr/bin/ld: bazel-out/local_linux-opt/bin/tensorflow/cc/_objs/tutorials_example_trainer/tensorflow/cc/tutorials/example_trainer.o: undefined reference to symbol 'clock_gettime@@GLIBC_2.2.5'"
Avoid upgrading tensorFlow dependencies when running windows tests. (…#10709)
Avoid upgrading tensorFlow dependencies when running windows tests.No description provided.
"add support for android sdk version < 18Alternatively, the trace calls could be removed completely or replaced by simple Log calls."
"Improve docs for `parallel_stack`Partly solves #10036
Moves #10593 to master"
Merge pull request #1 from tensorflow/masterUpdated on 2017/6/14
"Try both python and python3Used configure script for reference
Reopens mistakenly closed #10525"
Allow variable sized tensor for RDMA transportThis PR fixes #10699.
"[OpenCL] Fixes grpc test failure for SYCL devices (#87)The test constructs a graph containing an IdentityOp on strings,
which doesn't exist on CUDA and SYCL devices. The test expects to fail
for CUDA devices, so add the same expectation for SYCL devices."
"Add input interfaces required by the Java Ops API.Those interfaces are at the base of the upcoming Java Ops API, please consult #7149 for more details."
added blocks option for lstm2dNo description provided.
Branch 158919724No description provided.
"Fix the f16 implementation of Literal and LiteralUtilAdjust the implementation of Literal to do the right thing for F16.   The new Literal class is nice, in that it is just a std::vector of half types, which is nice and simple."
Updating the version from 1.2.0rc2 to 1.2.0.No description provided.
CherrypicksTensorboard cherrypicks while reverting tensorboard to previous hash. Please review properly. Doc and release file updates.
Expose TFRecordWriter.Flush() in PythonThis fix tries to address the issue raised in #10644 where it was not possible to call TFRecordWriter.Flush() in Python. The C++ interface already has the Flush() so this fix exposes it to python level.
Allow `1/0` to be compatible with tf.boolThis fix tries to address the issue raised in #5407 where
"Apply correct filter tags to two testssession_clusterspec_prop_test
session_list_devices_test"
"[OpenCL] Fixes device name comparison stage_op_test (#85)Changes the fixed '/device:GPU:0' expected device name string to the
name returned by 'test/gpu_device_name()', as the device name could be
'/device:SYCL:0' or '/device:GPU:0'."
Add jni methods to support creating string Tensors from string bytesHere are native methods to support creating string Tensors by string bytes. The implement of Tensor class and test will be soon available.
Fix minor typos in lookup_ops code samples.No description provided.
"Branch 158779483Complex merge in FFT ops, Estimator tests, LMDB reader."
"Fix typosThis PR fixes some typos: the the, Classs, classs, currrently, and apppropriate."
"Upgrade to protobuf 3.3.1(Haven't tested, letting Jenkins try it out)"
Fix incorrect references of `tf.learn` -> `tf.contrib.learn`This fix fixes the incorrect references in docs (linear.md) where tf.learn was used (should be tf.contrib.learn).
Lazily configure TensorFlow loggerFixes #10498
Note that the cuDNN version must match exactly on WindowsFixes #10594.
Implements tf.arg for complex numbers (Closes #483)The following code runs as expected so I believe that the gradients are working fine
Use correct sort of dtypeThis completes #10623
"Add link that helps explain feed_dict parameterThe current tutorial mentions using feed_dict parameter, but there is not further mention.  The example code does not explain where feed_dict is used.  By linking to the run documentation, the reader can see it is the second parameter to the run command."
Non-determinism Docs (#2732)Fixes #2732. Wrote a short tutorial on non-determinism in TensorFlow due to GPU reductions.
fix typossome spelling mistakes
fix javadoc issuesNo description provided.
"[WIP] Multi-bus support with NUMA-aware allocatorAs the title suggests, this is a WIP to partially address issues brought by @poxvoculi in #5986."
Merge pull request #1 from tensorflow/masterfrom origin
Fix typosNo description provided.
R1.1No description provided.
"Fix typo, \as far as *is*\ in docThe word, ""is"" looks unnecessary in these sentences."
Change np.array to tf.constantnp.array fails with no 'module' get_shape().
Add Multi-Dimentional LSTMimplementation of Multi-Dimentional LSTM described in https://www.cs.toronto.edu/~graves/nips_2008.pdf
tensorflow/go: simplify 'range' on 'shape'Found via 'gofmt'
Skip configure bazel version check on empty version string.Fix #10587
"CONTRIBUTING.md include basic Docker CI commandThis quick one liner CI test via Docker should be enough so many users don't even have to follow the ""more details"" link."
Revert the new non_max_suppression_v2 op for the 1.2 release so we can do API reviewNo description provided.
Fixing the broken 1.2 branch tests.No description provided.
Fixes python doc for tanh (Resolves #10376)No description provided.
Implements inverse hyperbolic operations (fix for #7531)fixes #7531.
"Remove deprecated functionsRemove deprecated classes and functions marked for removal until May 2017.
This PR doesn't touch deprecated parameters nor deprecations for June 15."
Improve docs for `parallel_stack`For #10036
Update quantization docs to new toolNo description provided.
Fix incorrect documentation in _SliceHelper #10494Fixes #10494.
R1.1No description provided.
Minor fix typominor fix typo in tf.contrib.learn.
Added uint8 registration for addition operation (Fixes #10447)No description provided.
fix iOS example READMEfix iOS example README
"Sort out confusion around usage of selective registration--config=android_arm is defined in tensorflow/BUILD
where it resolved to --crosstool_top=//external:android/crosstool --cpu=armeabi-v7a
seems like this cannot be referenced here"
Testing branch 1.2No description provided.
Fix typo in bazel commandNo description provided.
Testing 1.2 branch.No description provided.
Changed default `evalution_master` to also use cluster informationWhen using the standard Estimator during evaluation in distributed setting (a cluster_spec was supplied) I encountered the following error message:
Partly revert #10533No description provided.
"Various Bash ImprovementsSorry about the previous spamming.
I didn't expect it to sum up that quickly."
Remove an unused typedefNo description provided.
Branch 158391996No description provided.
[Bash] Move multiple parameters out of shebangAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2096
[Bash] read with -r to not mangle backslashesAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2162
[Bash] Use $(...) instead of legacy `...`As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2006
[Bash] Use $(...) instead of legacy `...`As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2006
[Bash] Use $(...) instead of legacy `...`As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2006
[Bash] Use cd ... || exit in case cd failsAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2164
Fix AttributeError in resnet.pyThere is no function tf.softmax() in Tensorflow 1.x.
[Bash] Moving multiple parameters out of shebangAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2096
[Bash] Fix misspellings of \architecture\No description provided.
[Bash] Use cd ... || exit in case cd fails.As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2164
"[Bash] Instead of 'echo $(cmd)', just use 'cmd'As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2005"
[Bash] A && B || C is not if-then-elseAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2015
[Bash] Put 2>&1 behind the redirectAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2069
[Bash] Prefer ${variable//search/replace} over sedAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2001
[Bash] Use $(...) instead of legacy `...`As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2006
[Bash] Use * instead of @ to concatenateAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2124
[Bash] Remove unnecessary $/${}As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2004
[Bash] A && B || C is not if-then-elseAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2015
"[Bash] Instead of echo $(cmd), just use cmdAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2005"
[Bash] Prefer read -a to split exit codesAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2206
[Bash] Prefer grep -E over deprecated egrepAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2196
[Bash] Use grep -q instead of [ -n .. ]As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2143
[Bash] read with -r to not mangle backslashesAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2162
[Bash] Removed unnecessary $/${}As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2004
[Bash] Put 2>&1 behind the redirectAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2069
[Bash] Fix misspelling: ERRORS_FLIE -> ERRORS_FILENo description provided.
"[Bash] Instead of echo $(cmd), just use cmdAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2005"
[Bash] Fix bad string / array concat behaviourAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2145
[Bash] Variable used as array not stringAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2178
fixed minor formatting issues for tfprof docsfixes some minor issues:
Fix typosNo description provided.
Improve RDMA rendezvous speedThis PR fixes #10530.
"Make stage tests less sensitive to timeoutsPreviously, staging tests used the number of failed token dequeues (with 50 ms timeouts) on
a signalling queue to indicate blocked puts. This was probably too sensitive on highly contended testing systems. Basically, there's no good way to distinguish between a put that took too long and a blocking put."
Re-enable some python tests in Windows Bazel buildThese tests are passing on Windows and not flaky.
Try both python and python3Used configure script for reference
[Bash] Group commands to redirectAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2129
"np.float64(\np.inf\).astype(np.int32) is negative on x86 but positive on ppc64lenp.float64(""np.inf"").astype(np.int32) is negative on x86 but positive on ppc64le, that is the reason we
added this special case for ppc64le"
Disable stage_op_test and map_stage_op_test due to timeoutsFor example:http://ci.tensorflow.org/job/tensorflow-master-linux-gpu/2381/console
Delete non-deterministic testEmpty() testCausing flaky Windows cmake tests because np.empty() may return a singular matrix.
Printdhruv deep cnn.mdTypo
"Remove RewriterConfig from the Python APIRewriterConfig has not made it into a release, and so is not subject to semantic versioning. The API needs a bit of work, so it's not going into 1.2."
[Bash] Declare and assign separatelyAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2155
[Bash] Prefer read -a to split pathAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2207
[Bash] Prefer [ p ] && [ q ] over [ p -a q ]As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2166
[Bash] Remove unquoting quotesAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2027
[Bash] Use $(...) instead of legacy `...`As proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2006
[Bash] read with -r to not mangle backslashesAs proposed by static analysis tool:https://github.com/koalaman/shellcheck/wiki/SC2162
[Bash] Simplify ConditionalNo description provided.
A few changes to kernel_tests.@meteorcloudy FYI
Fix numpy 1.13 incompatibilitiesFixes the CPU build
Open up visibility of tf_importsThis is a very simple change that unblocks our friend @jameswex. Hasty merge appreciated.
Merging rc2 back into master.No description provided.
Branch 158282834No description provided.
Branch 158278922No description provided.
"Recognize CPU core count in FreeBSDAt the moment FreeBSD can't recognize the CPU count, however FreeBSD uses the same method as OS X does so provided PR fixes that."
"Support channel groups in convolutional layersThis PR implements the channel groups in convolutional layers (Conv1D, Conv2D, Conv3D, Conv2DTransposed)."
Branch 158212897No description provided.
Fix defect: shuffle_batch gives ZeroDivisionError when computing capacity statFixes #1853.
Severin/configure without user interactionconfigure step without user interaction using defaults and additional build target
Revert \Map Staging Area (#9686)\This reverts commit 1705b09.
Revert \Fix patching issue on Windows\Reverts #10452
Fix test failures on windows.No description provided.
Export C API symbols in _pywrap_tensorflow_internal.soThis PR exports C API symbols so that python extension libraries can use the C API.
BasicRNNCell comment fixNo description provided.
"Windows: Make TensorFlow build without --cpu=x64_windows_msvcSince from Bazel 0.5.0, MSVC toolchain became the default toolchain on
Windows. So --cpu=x64_windows_msvc is not required as long as we adjust
the BUILD files in TensorFlow."
Fix AttributeError in resnet.pyThere is no function tf.softmax() in Tensorflow 1.x.
"[OpenCL] Improves device reportingPrints: id, type, name, vendor and profile of the device"
"Fix linking errors of lmdb on Windowshttp://ci.tensorflow.org/job/tf-master-win-bzl/1041/console
The error was introduced in e6f5818"
"Update `configure` script sampleThe configure script was changed regularly since the generation of the sample.
This PR updates the sample to reflect those changes."
Fix misspells on commentsNo description provided.
Fix patching issue on WindowsFix the issue in #10435@gunan
Updating tag to 1.2.0-rc2.No description provided.
Cherrypicks for 1.1.0-rc2No description provided.
"Fix CMD in DockerfileCurrently Notebook fails execution because default user for this container is root, and unless explicitly allowed, jupyter notebook will not start."
Branch 158053084No description provided.
Support for `dtype` keyword in tf.layers.*This pull request introduces the dtype keyword in functional interfaces for core layers to solve #9898. All the unit-tests seem to run fine on my machine after incorporating the changes. The default value has been kept as tf.float32 in order to ensure compatibility.
Branch 158034419No description provided.
Fix defect: shuffle_batch gives ZeroDivisionError when computing capacity statbug fix for #1853
"group generated functions for registered ops into separate files (configurable)wrappers.go is currently ~15k LOC. The lack of organization - code generated from TF_GetAllOpList is stored in a single file - makes it difficult to grok which functions exist and can work together. Also, there doesn窶冲 appear to be any tests for the funcs in wrappers.go."
"Implemented sinh and coshThese commits contains the implementation of the sinh and cosh functions for CPU and GPU with gradients. This solves #7531 partially. The supported datatypes are float, double, complex64 and complex128."
Fixed typo in codeNo description provided.
"Fix unaligned args in api_docs/python/tf/contrib/learn/EvaluableThis commit fixes unaligned args in api_docs/python/tf/contrib/learn/Evaluable
by removing the extra line in arg metrics:."
Expose canned estimators in coreI know this is still WIP but it would be good to expose this for adventurous external users.
configure: Fix default path when enabling MPI.A minor fixup. Correct showing what the default path is when mpi is installed.
"Solution to non context words due to wrap aroundDue to wrap around non-context words also appear in the window for skip gram which degrades the quality for word vectors.
Simple patch to avoid appearance of non-context words"
Added store intermediate graph featureNo description provided.
Branch 157903115Pushing internal commits.
Fix TensorBoard SHA256 in cmakeNo description provided.
Fix windows testsNo description provided.
Branch 155393864Pushing internal commits.
fix quotes in example code from “ to \No description provided.
"Fix unbatch for Datasets with multiple elementsThe current implementation of Dataset.unbatch gives an error for datasets with multiple data elements, e.g."
"add metric opThis pull request is aimed to create a metric_op for TF-Slim learning to be able to show the streaming metrics(accuracy,...) for the training phase.
The op reset the total and count local variables defined by streaming_metric(if it is streaming_accuracy ,...) per each epoch of training so the accumulative accuracy per epoch can be represented."
Fixed typo in code commentNo description provided.
"Fix value error generated on is_scalar checkis_scalar = shape is not None and not shape raises a value error when shape is a scalar, ""ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()"""
Update random_poisson_testNo description provided.
Update the instruction for building a minimal xla benchmarkCan one of the admins verify this patch?
Fix typosNo description provided.
"make gcc-5 on Ubuntu 16.04 happygcc-5 complains of ambiguity and refuses to go when doing something
like 'bazel build -c opt tensorflow/...'"
moved code generated by protoc-gen-go out of internal pkg so it can be referenced/usedwould like to call String() method on GraphDef. can't do so if its in the internal pkg. there are likely other use cases here.
"Clarify tf.matmul documentationMaybe I'm confused about what ""inner"" and ""outer"" tensor dimensions are, but the documentation for tf.matmul puzzles me:"
"Check EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0If EIGEN_MAX_ALIGN_BYTES is set to 0, alignment checks that mod by EIGEN_MAX_ALIGN_BYTES fail at runtime."
Fix typoNo description provided.
Enable figures in the tfprof README.mdI don't know if excluding the figures from the tfprof README.md was intentional or not and I could not find any reasoning why they are excluded.
"Fixes of AutoParallel bugThis PR fixes the bug that AutoParallel sets variables as don't_replicate_nodes, but not for variable initializers and snapshot nodes. This can break variable collections in meta graph because variable initializers and snapshot nodes could be replicated with different names."
"Fixes issue #10258On CUDA versions previous to 8.0, only shared variables could be declared as static in the device code."
Fixed typos in documentation & READMEsNo description provided.
Branch 155393864Pushing internal commits
Branch 155393864No description provided.
Python 3.6 support on windows.Fixes #6999
Fixes and improvements to cmake windows build.No description provided.
"Fixed formatting in Linux install guideFormatting issues were introduced in PR #8825, commit f30918b"
Improve docs for selective registration headersprogressing #10299 @andrewharp
updated TensorFlow official example: cifar10I found a problem in the official example: cifar10
[OpenCL] Cleans reshape.ccNo description provided.
[OpenCL] Cleans reverse_op.ccNo description provided.
[OpenCL] Cleans sendrecv_ops.ccNo description provided.
[OpenCL] Cleans sequence_ops.ccNo description provided.
[OpenCL] Cleans relu opsNo description provided.
[OpenCL] Cleans Slice opNo description provided.
[OpenCL] Cleans reduction opsNo description provided.
[OpenCL] Cleans Pad opNo description provided.
Merge rc1 back into master.No description provided.
[OpenCL] Cleans pack and unpack opsNo description provided.
[OpenCL] Cleans dense_update_opsNo description provided.
[OpenCL] Cleans debug opsNo description provided.
[OpenCL] Cleans variable opNo description provided.
[OpenCL] Removes half concat op registrationNo description provided.
[OpenCL] Cleans cast operationNo description provided.
[OpenCL] Extends tile ops to int16 and int32No description provided.
[OpenCL] Cleans DynamicStitch OpRe-order code to follow general rule:
[OpenCL] Removes ReductionFunctor for SYCLDeviceWe are using Eigen implementation
[OpenCL] Registers stack opNo description provided.
[OpenCL] Extends softmax op to cover doubleNo description provided.
[OpenCL] Fixes Split opSplit should alway go through SYCL device
[OpenCL] Transpose to go through EigenTranspose for SYCL should use Eigen implementation
[OpenCL] Cleans cwise opsThis PR cleans OpenCL related code for cwise operations.
[XLA] Add a 'custom' fusion op typeThis allows backends that may have fusions that are not included in the main enumeration.
"Remove \bazel clean\Reverting #8880 @gunan (see #10236)
unnecessary since bazelbuild/bazel#2759 was merged"
[OpenCL] Cleans control_flow_ops.cc fileMainly re-order code to follow general rule:
[OpenCL] Cleans StridedSlice OpSmall PR's that clean OpenCL related code.
[OpenCL] Cleans Shape OpFirst in series of small PR's that clean OpenCL related code.
Fix comments error in mnist_replica.py where only one ps is used with… two works by default.
Don't unnecessarily reset y domain on line chartsFixes #8994
"Fix TensorBoard demo datad977064 suggests that the demo TensorBoard was supposed to go away entirely, but tensorboard/DEVELOPMENT.md still says to use it."
Batch norm docs -> r1.2Fixed up the documentation for tf.contrib.layers.batch_norm and tf.layers.batch_normalization explaining how to include the update ops in the train_op. Also simplified the existing tf.layers.batch_normalization documentation to the least error-prone option (adding to the train_op).
Update docker to cudnn6.No description provided.
Improve windows bazel python test suite.Running windows bazel presubmit here:http://ci.tensorflow.org/job/tensorflow-pr-win-bazel/18/
Batch norm docs -> r1.1Fixed up the documentation for tf.contrib.layers.batch_norm and tf.layers.batch_normalization explaining how to include the update ops in the train_op. Also simplified the existing tf.layers.batch_normalization documentation to the least error-prone option (adding to the train_op).
Exclude Python test files from CMake PIP package.No description provided.
Upgrade TF ci build and docker files to use bazel 0.5.0No description provided.
"PhiloxRandom: Fix race in GPU fill functionThe PhiloxRandom fill kernel for the GPU had race conditions that caused the
outputs to be non-deterministic. In particular, the code previously executed
with N GPU threads (# thread contexts per GPU), but it would only advance the
fill addresses by N-1 stride in each step. This incorrect stride caused the
0th and N-1st threads to write to the same memory locations, racing for which
was last to write their common locations. Make the stride equal to the number
of threads to eliminate the race."
LRN and other fixesCan one of the admins verify this patch?
"remove some invalid entriesI noticed that some entries don't exist (anymore).
This seems to be some kind of a consistency issue."
fix the error in deploy hadoop documentationthere is a small error in shell commands
Compare base_dtype instead of dtype in piecewise_constantCompare base_dtype instead of dtype in piecewise_constant. Fix #10086
Support partial gets in MapStagingAreaCan one of the admins verify this patch?
Windows: Remove session_test from bazel_test_lib.shIt was disabled in 49b1714@gunan
"Fixed fixed_unigram_candidate_sampler docsImplementation of tf.nn.fixed_unigram_candidate_sampler (https://github.com/waleedka/tensorflow/blob/master/tensorflow/core/kernels/range_sampler.cc#L273) seems that the range of reserved ids is [0, num_reserved_ids).
Fixed the docstring about num_reserved_ids."
Remove r in docstrings that do not have backslashesNo description provided.
add missing import for `signal` packageNo description provided.
Fix typosNo description provided.
"Initial scope implementation.This is an initial implementation to support scopes for the
Java language bindings. It currently provides only hierarchical
name scopes."
Fix typosNo description provided.
Branch 155393864No description provided.
Undo modification to `x` dict by deleting `_TARGET_KEY` after features dequeueNo description provided.
"Fixed a comment typo in GraphView:InitializeNode(), executor.cc.From ""EdngeInfo"" to ""EdgeInfo""^_^"
"Fixed tf.contrib.crf.crf_log_norm to handle zero sequence length.The original version of tf.contrib.crf.crf_log_norm can not produce zero output when the sequence length is zero or a negtive number, which will leads tf.contrib.crf_log_likelihood to produce non-zero output, so that the training procedure can be disturbed.
This patch force the output to be zero when the sequence length is equal or less than zero."
Add a tip for tf.train.LoggingTensorHookINFO logs are not printed by default unless in IPython. Add a friendly tip for newcomers.
fix the return value of Tensor::flat_inner_outer_dimsThe const version of flat_inner_outer_dims should return ConstTensor instead of Tensor
Disable flaky tests that have been breaking nightly builds.FYI @caisq @mrry @ekelsen @alisidd
Suppress linker warnings in windows builds.No description provided.
"[WIP] Add boston.ipynb for better input_fn tutorialHere is ipython (jupyter) version, with these features:"
Branch 155393864No description provided.
Announce upgrade to cuDNN 6.0.No description provided.
fix misspellfix misspell
"Fixed crf_log_norm function in crf.pyThe original version of crf_log_norm function will not output zero when the sequence length is zero.
This patch fixed the problem."
Fixed crf.py to force log norm of zero length sequences to zeroThe original log_norm function in crf.py will not output zero when sequence length is zero. This new version force it to be zero.
[XLA] Add a strides parameter to the XLA slice operationThis looks quite large but really it is just threading a strides parameter for the XLA Slice op through the stack.
Support `if_darwin` conditionSometimes we want it because libs differ from platforms.
"Suppress windows build warnings to reduce win build log size.Can't add as reviewers, but also happy to hear comments from @guschmue @vit-stepanovs
The suppressed warnings are:"
Branch 155393864No description provided.
"Release branch commitsMerges the changes from #9954 and #9975 into master, since they were only merged into r1.1."
Updating the release notes and the rc number.No description provided.
update stage_ops_test to medium and add 2 shardsFix timeout of stage_op_test.  Increase timeout and add 2 shards.
"Enable more robust Java lint and errorprone checksTurn on stricter Xlint and errorprone checks in javac to converge
on a more consistent coding style."
CherrypicksCherrypick round 1 for rc1.
[XLA] Ensure constants conform to the specified index typeThe strided slice update introduces constants into the HLO graph which are not of the type specified by the core op.
"Update mnist.pyI am reading/learning the code, Read by Refactoring. For clean and clear.･"
Fix RNN tests broken in contrib move.No description provided.
"MKL_INSTALL_PATH should not be ignore when givenI'm  trying to build tensorflow from source, just found configure will clear my MKL_INSTALL_PATH"
Branch 155393864No description provided.
Make PYTHON_BIN_PATH error go awayThis also makes the logging a little less aggressive.
"Add is_closed() method to Queueto show if a Queue of any type is closed or not, mainly for debugging purposes. Fixes #7355."
"Register GPU RefExit kernelIt looks like the code was all set up to support a GPU kernel for RefExit (as was done for similar kernels, e.g. RefEnter), but RefExit was never actually registered for the GPU.  I'm not sure if it was intentionally left out for some reason, or if this was just an oversight.  All I did was add the registration calls and it appears to work."
Merge from internal.No description provided.
Branch 155393864No description provided.
R1.2No description provided.
"[XLA] Move some useful Literal conversion code into LiteralUtilThis code looks like it should be in LiteralUtil.  It is useful to have it there for our backend, and probably also for allowing literals to be created with explicit types to the constant data type."
DOC modify install_mac and install_linuxOriginally in install_mac it says
Fixing broken links in Linear Model Tutorial.The Links in the Linear Model Tutorial are broken. This commit / pull request fixes the URLs.
"Update README.mdthere was an _ instead of a .
I tried the code example out and the module doesn't have saved_model_builder but does have saved_model.builder"
"Fix Cuda configuration on WindowsWhen creating a genrule for a set of files, we should use copy instead of
symlink on Windows."
Added missing case for osxSmall patch for #10060
Update RELEASE.mdMove savedmodel cli.
RecordInput mini batches for dividing processing among multiple devices.Adds one component of the high performance models tensorflow benchmark upstream so it is more readily available. This is based on the minibatch function in preprocessing.py in the example benchmark.
Fixed deprecation warningsRemoved deprecation warnings for text classification example with CNN on words
"Fix spelling of Bahdanau in BahdanauAttention docstringLooks like ""Bahdanau"" was mispelled in the docstring, this fixes it."
Add SMAPE(symmetric mean absolute percentage error) loss function.Add SMAPE(symmetric mean absolute percentage error) loss function. The existing MAPE has the disadvantage that they put a heavier penalty on positive errors than on negative errors. SMAPE can mitigate this the uneven penalty.
"Implement IRFFT as a CPU kernelMentioned in issue #386 and #9029. TF is now supporting FFT operators. However, there still remains IRFFT as a CPU kernel unimplemented. In this PR I made up the missing part of FFTCPU class, and get the CPU kernel for IRFFT work.
I remove the limitation of if test.is_gpu_available(cuda_only=True): in fft_ops_test.py, and passed all test cases by bazel test --config=opt -k //tensorflow/python/kernel_tests:fft_ops_test."
"cudnn: Fix symlink includes handlingFollowing a change to symlink creation for cuda_configure.bzl, the cudnn
include path symlink would try to link to a path ending with
'includeinclude/cudnn.h' rather than the correct path, 'include/cudnn.h'.
It appears this is caused by the way _symlink_genrule_for_dir handles
particular source header files. Since the cudnn library only exports a single
include file, cuda_configure.bzl can just use _symlink_genrule_for_dir
without explicitly specifying the header files to symlink."
Allow disabling password and token auth on jupyter notebooksCloses: #10045
Update vulcanized output of TensorBoard to fix health pill errors.The previous version of TensorBoard in release 1.2 had outputted console errors related to debugger health pills (a currently internal feature). This new vulcanized output fixes that bug in release 1.2 by adding guards.
Merge pull request #1 from tensorflow/masterUpdate from original
Merge pull request #1 from tensorflow/masterUpdate from original
Fix TF windows bazel tests.The rmtree fails because the SummaryWriterCache keeps open file handles around which causes Windows to disallow removing the directory.
Fix code example in supervisor.mdNo description provided.
Merging rc0 back into master.Merging 1.2.0-rc0 back into the master branch.
Updated libxsmm kernelsNo description provided.
Reverting the manual tags added to problem tests.Hopefully we can fix them by rc1.
fix typo in stepper_test function nameNo description provided.
fix some annotationNo description provided.
"Windows: Make TensorFlow build with Bazel againrules_closure doesn't work on Windows, since //tensorflow/tensorboard depends on it, we exclude it from dependencies of pip package for now.
Sent bazelbuild/rules_closure#206 to fix one of the rules_closure problems on Windows."
R1.1No description provided.
Update README.mdNo description provided.
Adding NewScopeWithGraph func to Scope struct. This enables the construction of an in-memory graph from a previously serialized form + new additions.Found a use case that wasn't covered while developing with tensorflow in go.
Automatically convert inputs to tensors in Dataset.from_tensor_slicesAllows usage like:
Fix classification dataset example in readmeUsing python lists results in an IndexError for me.
Update RELEASE.mdtypo correction
clear compiler warnings in tensor_format.hNo description provided.
Conversion to int64 for output_buffer_sizeAdd conversion to int64 when output_buffer_size is initialized with num_threads (of type int32).
"InferenceContext::UnknownShapeOfRank support unknown rank, check rank>=0No description provided."
Fix docstring for method `flip_up_down`No description provided.
Fixed typoFixed typo
R1.0Tensorflow on windows 32 bit
fix: typos using misspellfix: typos
"Add support for sparse_reduce_max and sparse_reduce_max_sparseThis commit tries to address the issue raised in #10002 to have
the support for sparse_reduce_max and sparse_reduce_max_sparse."
Updating the release.md file.No description provided.
Updating the md files.No description provided.
Fixing documentation 404-URLNo description provided.
Fixing documentation 404-URLNo description provided.
Seal learn_runner.PiperOrigin-RevId: 156488276
CherrypicksNo description provided.
Update RELEASE.mdadd feature_column into the list.
WIP: Python 3.6 buildNo description provided.
Branch 155393864No description provided.
"Fix capitalization typo in release notesTensorFLowInferenceInterface had an incorrectly capitalized ""L"" in it."
"Fix capitalization typo in release notesTensorFLowInferenceInterface had an incorrectly capitalized ""L"" in it."
"Fix capitalization typo in release notesTensorFLowInferenceInterface had an incorrectly capitalized ""L"" in it."
"Replace use of tensorflow::ops::ReadFile in label_imageUse tensorflow::Env instead of tensorflow::ops::ReadFile so that
we can avoid including whole_file_read_ops for Android."
"add Cuda{2D,3D}LaunchConfig that maximizes occupancyAdd Cuda2DLaunchConfig and Cuda3DLaunchConfig that uses cudaOccupancyMaxPotentialBlockSize to calculate the best kernel launch parameters."
[XLA] HLO Executor based backend exampleAdding an example XLA device that uses the hlo evaluator to perform the execution.
Fix comments for dataset ops@mrry
s/training_op/train_op/No description provided.
Merge pull request #1 from tensorflow/masterroll on updates from main branch
Fix some doc format for CropAndResizeNo description provided.
"Update 1_notmnist.ipynbThe url in the file will not redirect to https. i faced this problem so changing it for someone who will see it in future.
i think port 80 is blocked on that server but 443 is going is going through."
Disable batch_ops_test on pipNo description provided.
Documentation: Typo confusing `tf.training.Coordinator.should_stop` w…ith tf.training.Coordinator.request_stop
Cherry-pick RNN migration CLs into r1.2No description provided.
"fix a bug in generate-pc.shI don't know how line 30 in the script managed to make its way into the last pull request.
I corrected the bug and forced the user to provide a version to generate the pkg-config file."
Branch 155393864No description provided.
Fixed some misspells.I found 3 misspells.
"Update rnn.pySupport returning all states generated in dynamic_rnn if the states are rather 'simple'
Unit test could be found here
p.s. I finished this implementation under API r1.1 and I found the latest code of tensorflow.python.ops.rnn.py is quite different from that on my Windows machine with API r1.1. Since I cannot build the source code, though I've tested them under API r1.1, I haven't actually tested the committed codes in the latest environment"
Make ResourceHandle private to tensorflow librarytensorflow::ResourceHandle is a protobuf object. The official protobuf document suggests:
Add to tensor definitionAdd a small snippet to the tensor definition for the sake of correctness. People always ask about how these are related to tensors as physicists and mathematicians use.
Disabling flaky testsNo description provided.
Revert links changeRevert the changes from #9882 and #9886 which were both merged into the r1.1 branch.
add missing import from keras wrappersNo description provided.
"Make .bazelrc import ~/.bazelrcWhen running ./configure for the first time, an import ~/.bazelrc statement will be added to the generated .bazelrc if the user has one."
Fix: config MKL build error - mkl_layout_pass.cc has missing dependencyFixing the issue #9979
Execute average pooling on GPU if availableTry to execute pooling2d on GPU.
Update layers.md: fix variable nameUpdate reference to nonexistent variable h_conv2.
Updating the release notes.No description provided.
"Open up visibility of tf_importsThis is so other people can build web apps with the new build rules for
TensorBoard, based on Closure Rules web_library."
Fixing the api compatibility test.No description provided.
Updating version to 1.2.0-rc0No description provided.
Fix a typo in export_output.pyNo description provided.
Branch 155393864No description provided.
Add batch_size and ValidationMonitorAdd batch_size and ValidationMonitor
fix a bug in using record_host_persistent_memory_allocationNo description provided.
Check the return value of fopenNo description provided.
Branch 155393864No description provided.
Fixing documentation for tf.abs to include missing details about complex types.Adding lost documentation to tf.abs from the old tf.complex_abs when it learned how to work on complex data.
"New reader for LMDB databasesImplement a reader op to access records stored in an LMDB database.
This facilitates Caffe users to switch to TensorFlow without rebuilding their (potentially very large) LMDB datasets."
Return GitHub links for models to tensorflow.org/code linkshttps://tensorflow.org/code/tensorflow_models is now redirecting properly.
Branch 155393864No description provided.
Branch 155393864No description provided.
Merged performance docs.No description provided.
"Replaced deprecated op_scope call with name_scopeThis was flooding our experiment logs, so I fixed it. Should be pretty straightforward?"
Branch 155393864No description provided.
R1.1No description provided.
Multiplicative Integration Recurrent Neural NetworksThis is the same PR as #9286(closed) after I
"Quantize conv2d transposeThis PR creates a new quantized kernel called QuantizedDeconv2D, which performs a deconvolution computation (also known as conv2d_transpose in TensorFlow) in a quantized mode."
"Change SummaryWriter --> FileWriter in TensorBoardNoticed a few spots in TensorBoard referenced SummaryWriter instead of FileWriter. This change cleans up some notifications, documentation, and one of the tests."
Update README.md of tootls/benchmarkPeople run into this may have never seen https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/android
Branch 155393864No description provided.
[DOCS] Updating PredictionType args definition[DOCS] Updating PredictionType value for DynamicRNN
"[XLA] Add F16 support to the Literal protobuf and LiteralUtils class.No support has been added to any public back-end, however the unit tests demonstrate that the literals can store and retrieve data correctly."
"Fixed _linear(.) to use *batch* matrix multiplication.In the _linear function (from the tensorflow.contrib.rnn.python.ops.core_rnn_cell_impl module), there's relatively subtle bug. The reason that this bug is subtle is that it only affects tensors used by _linear internally."
"Make possible to use static libraries generated by tfcompile in MSVC.Currently it is possible to generate MSVC-compatible static libraries from a
Linux build of tfcompile using the target triple ""x86_64-pc-windows-msvc""."
"Update input_fn.mda simple, self-contained example for integrating an external python reader for use with tf.contrib.learn.Estimator"
Multiplicative Integration Recurrent Neural NetworksThis is the same PR as #9286(closed) after I
"Fixed _linear(.) to use *batch* matrix multiplication.In the _linear function (from the tensorflow.contrib.rnn.python.ops.core_rnn_cell_impl module), there's relatively subtle bug. The reason that this bug is subtle is that it only affects tensors used by _linear internally."
NADAM OptimizerThis adds the feature requested by #7715
fixing $PATH search when running ffmpeg.Previous code bailed on first failure of realpath() which didn't proceed to the rest of $PATH
"Allow tensor as iou_threshold parameter to tf.image.non_max_suppression.I have a use case where dynamically changing the iou_threshold parameter on a frozen graph is required. I'm not 100% positive this doesn't violate the backwards compatibility rules, and it does make the iou_threshold a required parameter. Feedback from the maintainers would be appreciated."
[Docs] Fixing old model linkAn addition to #9882
Temporarily disbale //tensorflow/contrib/factorization:gmm_testNo description provided.
"No longer use openjdk8 PPA in Dockerfile.develUbuntu 16.04 has an openjdk8 package, so use that instead of a PPA with a backported version, which was a holdover from when the base image was ubuntu 14.04"
"Delete .mention-bot file, not used anymore.No description provided."
[Docs] Fixing broken repository linksFixes #9873
"Fix building r0.11 from sourceFixes a bunch of issues I had building from source on r0.11, including #9130 and #5143. With these changes I was able to successfully build tensorflow with cuda support with bazel 0.4.5."
"gif decoder returns 4-D tensor, remove the first dimWhat returned by the gif decoder returns is a 4-D tensor [frames, height, width, channels]. Since only the single frame gif will be used in this label_image, frames should be 1. So we can use Squeeze() to remove it."
Fix issue #9858.Added some byte swapping code to solve endianness problem.
"Fix contrib.seq2seq.BeamSearchDecoder #9855Fixed Issue 9855 by shielding the top_k op's input with min.
Also fixed wrong log_probs shape at _get_scores method docstring."
Branch 155393864No description provided.
Adding the benchmarks and performance models to 1.1For doc gen.
"MPI based communication path for tensor exchange operationsThis pull request adds an additional communication path to TensorFlow that allows Tensors to be exchanged using MPI based Send and Recieve routines when running distributed TensorFlow. T
The used MPI implementation will pick the most optimal path available between the two communication points allowing the user to take advantage of high performance networks such as Infiniband.
Certain MPI implementations allow direct data-transfers from GPU buffers (CUDA Aware / GPUDirect RDMA), this option can be enabled using an environment variable. See the README for more details."
Branch 155393864No description provided.
Update Graph.javaUpdating just a simple spelling error. I am new to this.
Branch 155393864No description provided.
Branch 155393864No description provided.
"TESTING, DO NOT MERGE.No description provided."
Fix typos in high performance models docsNo description provided.
Fix misspells on c++ codes.Fixed some misspells :)
Branch 155393864No description provided.
"Add a note about how weights are initialized in Dense/dense to the docstringsHi,
this PR adds a note about the default weight initializer to the tf.layers.Dense and tf.layers.dense docstrings to clarify how the default weights are initialized as discussed in #9744 ."
Apply layer normalization to LSTMCell and class CoupledInputForgetGateLSTMCell #9600I applied the layer normalization technique to LSTMCell and CoupledInputForgetGateLSTMCell.
"There is no --logtostderrorThere is not --logtostderror option. Remove them.
And there should be no backslash in --transforms=..."
"Add input function for training and testing (#9617)Estimator is decoupled from Scikit Learn interface by moving into separate class SKCompat. Arguments x, y and batch_size are only available in the SKCompat class, Estimator will only accept input_fn"
Fix a broken linkFix a broken link due to new line.
OKNo description provided.
Tests that BasicLSTMCell with layer_norm=False.I think BasicLSTMCell should be tested when layer_norm is False.
"Add control input dependency to Java bindingsAdd a builder method to OperationBuilder to allow adding
control inputs to Operations."
"Implement strided slice (stride > 2) in tf2xlaBefore, strides are not acceptable in strided_slice where the stride > 1 (or < -1)."
Fixes #9654: Allow model_fn being a member function of a classFixes #9654
Squelch warnings related to API deprecation in mnist.py example.For reference:
"Add reference for crelu and relu6.Change the reference for crelu to a clickable link.
Add reference paper for relu6."
DOC: formats momentum calculation for webNo description provided.
Fix quantizing graph with control flowsRelated to #7162
Fix verbs compile errorFixes #9752
"Added TensorBoard to the keras.callbacks APIWhen porting my code from Keras to use tensorflow.contrib.keras, I found that I couldn't use the TensorBoard callback anymore. Even though the code is still present, it was removed from the API __init__.py file during the port by @fchollet."
add pkg-config generation scriptOpening a pull request as discussed in #9703
fix numpy.prod and GatherGrad overflow for large tensors inside windows#9462
Branch 155393864No description provided.
"Add 3D operations for layers: conv3d, avg_pool3d, max_pool3d and conv3d_transpose1.Add 3D operations for layers:"
"Fix how-to reference in distributed runtime READMEThe current link 404s, and now that the website documentation has been updated, the link can now point there."
correct the article (a->an) used before ubuntu (uu-boon-tuu)To remind developers the correct pronunciation of ubuntu (/ﾊ翰buﾋ刃tﾊ/ uu-boon-tuu).
"download if not exists, extract never overwriteRemoved the comment for wget and added arguments so that download and extract happens just once"
Add skeleton/example XLA plugin deviceI wonder if this would be a useful thing to have in the repo?
Bazel CI / TensorFlow: fix more errorsIn this commit:
"Add a mechanism for adding an XLA plugin to the buildI have used the same type of scheme as was used for adding a device to the plugin
unit tests."
[XLA] Add ability to run the XLA unit tests against a different deviceThis is a squashed version of #9409
Make non-standard cudnn paths work againThis corrects #9634 for me.
"#8263-Update recurrent.mdAttempts to add some clarity to tutorial.
Adds example to aid in understanding."
"Use hash url to memorize the currently opened tab.We already do this internally. This enables it for the open-source version. See issue: #4354
Change: 153167734"
Fix tf.meshgrid documentationThe original documentation has the wrong output regarding the default indexing xy.
Fix missing dash for cxxopt build optionNo description provided.
Fix comments in EncodeTensorToByteBufferNo description provided.
"better handling of MKL check in configurenot prompted to ask MKL download if the var is set already
remove unexpected exit when input is given by user"
make usage of is_training more clearThis is the continuation of #9723.
Patch/170506 misspellFixed some misspells :)
suggest is_training not known at construction timeNo description provided.
Fix mixed use of bytes and unicode string in gc.pyNo description provided.
Branch 155249446No description provided.
Making sure GLSTMCell is visible through tf.contrib.rnn.GLSTMCellThis is a followup to #9606. Just adding it to
"Add initializer to GRUCell, MultiRNNCell #9600Add initializer to GRUCell, MultiRNNCell #9600"
Fix build scripts for MKLNo description provided.
Added 2 unit tests for BasicLSTMCell to check ValueError.Can one of the admins verify this patch?
Fix devel Docker image build under MKL configurationThis is a follow-up fix to PR:#9580
Map Staging AreaI liked the idea of StagingArea but I wanted more functionality out of it. I've implemented an Associative StagingArea backed by C++ std::map and std::unordered_map.
Misspellings on the saved_model_cli.pyinformation => information
Branch 155159972No description provided.
"Register variable's proto function with key 'LOCAL_VARIABLES'When export/input meta graph, user expect all collections
been rebuilded on target graph, but it turns out local variables
on target collection is not Variable but Tensor because local variable
do not have it's proto fn registered"
Branch 155146664No description provided.
"fix symbol count in def file for windowsThis fixes some issue introduced in the previous version where RTTI
was removed from the exclusion list. Because of this the number of
symbols in the def file was close to 64K for gpu builds and yesterday
a few added symbols pushed us over the 64K limit for the windows linker, breaking the windows gpu build
Adding RTTI back to the exclusion list."
Merge remote-tracking branch 'refs/remotes/tensorflow/master'No description provided.
"verbs: Configure IB/RoCE QPs MTU according to the port MTUFor the verbs RDMA code to work on standard Ethernet networks,
where ports are configured with MTU 1500, need to set the path
MTU to 1K, as the previous 4K value is typical for IB networks."
"Allows direct builds from a Visual Studio solution & Enables Debug buildsProblem1: When using CMake GUI, it by default generates a Visual Studio solution.  Visual Studio solutions cannot be built within Visual Studio because the ${CMAKE_BUILD_TYPE} symbol is not defined for multi-configuration environments like Visual Studio.Solution1: Replace the ${CMAKE_BUILD_TYPE} symbol with $(Configuration).  The latter symbol works on both command line building and building within Visual Studio."
"replace sleep macro with an inline functionThe file third_party/eigen3/unsupported/Eigen/CXX11/Tensor contains a macro called sleep which is only defined for windows. I assume this is added to cover the use of the posix function sleep(seconds) which is not available on windows. However, the function Sleep(microseconds) is. Unfortunately this macro has the nasty effect that you can't define or use any functions named sleep, even if it is in another namespace or class. A function with this name exists in most thread libraries such as boost::thread and qthread. Thus if you try to use tensorflow in an application which also use a threading library it will not compile."
"Fix error of version_info.cc not being generated on windowsIf tensorflow_BUILD_PYTHON_BINDINGS is disabled in CMake, the Python interpreter is never resolved in CMake, but it is needed in tf_core_framework.cmake for generating the version_info.cc file with the script tensorflow/tools/git/gen_git_source.py. This seems to only be a problem on windows, resulting in a failed build complaining about version_info.cc missing. This is not an issue on linux, probably because of the shebang #!/usr/bin/env python in the script."
Fix Bazel CI / TensorFlow project.This change:
"Add input function for training and testing (#9617)Estimator is decoupled from Scikit Learn interface by moving into separate class SKCompat. Arguments x, y and batch_size are only available in the SKCompat class, Estimator will only accept input_fn"
"Including batch_norm as the normalizer function by default, as mentioned in function descriptionChanged the description error that includes batch_norm_params, which no longer exists, to normalizer_fn. normalizer_fn = None is changed to normalizer_fn = batch_norm by default, following what the original description says the function will do."
"Add input function for training and testing (#9617)Estimator is decoupled from Scikit Learn interface by moving into separate class SKCompat. Arguments x, y and batch_size are only available in the SKCompat class, Estimator will only accept input_fn"
fix `iris_test.csv` download linkNo description provided.
Fixed typo: date -> dataNo description provided.
"Branch 155030326I squashed the last branch by accident, so resolving conflicts had to be manual.  Let's hope I got them right."
Link to gcc_s and gcc if compiler is GCC version 5. Fixes issue #9593Link to gcc_s and gcc if compiler is GCC version 5 to fix issue #9593
Added identity op and a fix for LRNThis is branched off the current PR so please review starting with the last 3 commits.
"Java API to get the size of output list operationsThis opens up access to the TF_OperationOutputListLength C API from java, for operations that return output lists."
Keep auditwheel at 1.5.0.Nightly is failing with the newest auditwheel release.
Make link clickableA quick fix on issue 7750.
"Add 8 comments for event_multiplexer tests.I added some comments on event_multiplexer_test.py.
If I had any mistake, please tell me, I'll fix it :)"
Fix typo in LINE#500cell_input_fn -> probability_fn
"Making the quantizedMatmul for FC layers multi-threadFor the 窶徇<=4窶 GEMM that would call into Gemmlowp/meta lib, change the single thread invoking to multi-threads invoking. Because for the quantized full connection layers, multi-thread would improve the memory accessing of the relatively large weights matrix."
"Add input function for training and testingEstimator is decoupled from Scikit Learn interface by moving into separate class SKCompat. Arguments x, y and batch_size are only available in the SKCompat class, Estimator will only accept input_fn"
"Added options for linking to libraries that are present on systemAdded options for linking dynamically to libraries that are present on local system, instead of downloading them (such as libpng, libjpeg, zlib, ...).
This reduces the file size of the shared library libtensorflow.so and adds some security since the libraries such as libpng, libjpeg may be updated independently, without having to rebuild them as part of a tensorflow build from source."
"Update LinkVery similar as PR 9598, fix all outdated links of https://www.tensorflow.org/code/tensorflow/contrib/deprecated/__init__.py."
R0.11Extract translate.py
Correct self_check label in label_image examplemilitary uniform is the 654th label in inceptionV3 package. As said in README: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/label_image/README.md#to-buildinstallrun
"Added -D_GLIBCXX_USE_CXX11_ABI=0 to bazel buildFixes issues with missing symbols when compiling with GCC 5.x. See
issue #1419."
"Group LSTM cellImplementing (in contrib/rnn) group LSTM cell from ""Factorization Tricks for LSTM Networks"" ICLR 2017 Workshop.https://openreview.net/forum?id=ByxWXyNFg&noteId=ByxWXyNFg"
"Add check for duplicate names in import_graph_defFound when working on #8999. Currently, import_graph_def naively goes through all the Ops in the GraphDef without asserting that all names are unique. This causes bugs when it loops through the ops a second time in order to update their input values, as the input values for one op may be assigned to another op."
Branch 154885009No description provided.
Corrected SummaryHook with SummarySaverHook.No description provided.
"Fix tf_env_collect.sh on macos by avoiding >>& redirectionAvoid using redirection "">>& foo.txt"".
Instead use ""2>&1  >> foo.txt"""
"Fix a link error in the doc of histogram_summaryAs mentioned in issue 9467, the link ""look 'here'"" can not point to the right page in the doc of histogram_summary, so I change the link to https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/deprecated/__init__.py."
[issue#9328]fix invalid pointer when free()Fix the issue#9328 of TensorFlow v1.0 images.
Added 10 comments that illustrate each tests in EventAccumulator.I added 10 comments for event_accumulator module in Tensorboard.
Remove comments about an unused argumentRemove comments about an unused argument in tf.train.suffle_batch and tf.train.batch. There are commented lines which exactly is:
Branch 154781831No description provided.
"Enable MKL in configure and various bug fixesThis pull request enables MKL in configure. Building with bazel using --config=mkl will utilize all our ops for existing frameworks, replaced via the graph pass."
Fix Community link in READMELinking to the rendered community page is more useful compared to the current link which seems to be out-of-date.
"Catch exception on tf_session.TF_NewStatus()""try"" and ""finally"" without ""except"" is not sufficient to catch the exception.  If the exception gets thrown, it can stop output from other threads from being printed, and the exception makes TF appear to be broken.  Fixes #8652"
Fix misspellings in tensorflow toolsI found three misspellings in the source codes.
[issue#9328]fix invalid pointer when free()Fix the issue#9328 of TensorFlow v1.0 images.
fix some trivial typosSome backslashes should not be there. They are not expected by --transforms.
"Add a simple BMP decoder and enable it on AndroidAdd a simple BMP decoder and enable it on Android so that we can test simple image classification in command line on Android platform. On Android, image decoding is not directly available to NDK C/C++
programs."
"Update beginners.mdAdd wikipedia link for one-hot encoding, which does a better job of explanation then the following text."
Add two unit tests for the tensorboard.It checks the number of scalars should be returned.
Fix link in installation docs for OSXNo description provided.
Added output information with path to  wrong JPEG fileNo description provided.
Delay Compensated Asynchronous Stochastic Gradient DescentThis adds the feature requested by #8744
Fix build issue when `/usr/bin/python` path is not availableThis fix tries to fix the build error where PYTHON_BIN_PATH is not used in tf_version_info_genrule() (which will cause build error if python is not available in the PATH).
Update get_started.mdreplace deprecated function
Branch 154631802No description provided.
Branch 154631802No description provided.
Several typosThis fix fixes a couple of typos:
Add support of Sparse Tensor SliceThis fix tries to address the issue raised in #1588 to support slice of sparse tensors.
SpellingNo description provided.
"Cifar10 classification with ResnetThis tutorial is a basic one regarding classification of a more advanced kind than the MNIST data, that includes some basic information preprocessing, data storage (hdf5) and a simplified Residual Network model that is easily understood for entry into the field of Deep Learning."
"Update address in Readmeside note, git > svn"
update docNo description provided.
Added gradients + tests for ImageProjectiveTransformFixes #9423 by providing gradients for the base op.
Avoid extra TensorReference allocation in gRPCThe original TODO comments pretty much speak for themselves.
Unveil type check part in _VerifyGeneratedGradients that was not actu…ally used
Add notes about republishingNo description provided.
"Indicate that tf.contrib.rnn functions will be moved back to core for TF 1.2, not 1.1See #7664"
Minor typoNo description provided.
Dynamic ksize and strides with MaxPool and AvgPoolThis fix tries to fix the issue raised in #4746 where ksize and strides is static (attr) with max_pool (and avg_pool).
Fix Bazel CI / TensorFlow projectSee bazelbuild/bazel#2892
"README.md: make the settings.gradle and build.gradle example code matchAs currently written, the example code that README.md recommends adding to settings.gradle and build.gradle doesn't match. Adding the code as-is results in a Gradle error."
"small change to allow multiple wrappings with EmbeddingWrapperHi,
I tried wrapping an LSTM in an attention wrapper followed by an embedding wrapper, however I got an error here as state[0] is still a tuple so i wrote this small change to fix the problem"
Merge1.1Merge 1.1 back into master.
make configure smarter in detecting cudaNo description provided.
make configure smarter in detecting cudaNo description provided.
Cleanup label mapping code in ios_example camera app/CC @petewarden
minor change to `tf.contrib.framework.load_variable` docfix issue #9172 by referring to tensor values in a way consistent with the doc of Variable.evalhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/variables.py#L459
"Fix PATH error with non-system GCC (#7543).I have been getting errors from gcc not finding as, due to my user-set PATH not being respected. See issue #7543.
For example, the following setting on Ubuntu 17.04 failed:"
"...Sorry, I did not mean to create this."
"Add 3D operations for layers: conv3d, avg_pool3d and max_pool3d1.Fix a TODO(jbms):"
Branch 154338128No description provided.
Fix https://github.com/tensorflow/tensorflow/issues/8207@martinwicke
Branch 154257269No description provided.
Add tensorflow/core/kernels/function_ops.cc to MakefileThis should fix the breakage in Makefile-based builds after 858e0af.
Dennisadded instruction page and made UI look nicer. still working on the networking part.
"add support for flat both inner and outer dimsHi,"
typo: \serialize\ -> \serialized\No description provided.
tf_upgrade.py now handles batch_matmul named args.Addresses #9424
Added a max_pool1d wrapper for max_poolFrom #9442
Delete an unnecessary include and defineNo description provided.
"Add ibverbs support for RoCEv2 networksCurrent support for ibverbs cannot run on RoCE networks, as RoCE requires the global identifier (gid) to connect. This patch adds gid information for RDMA connection setup."
Make orthogonal initializer use qr factorization (instead of svd)Use QR factorization in orthogonal initializer to get better efficiency when computing orthogonal matrix.
Add link for Xavier initializer paper and update example for zero_faction functionOn https://www.tensorflow.org/api_docs/python/tf/nn/zero_fraction:
Include refcount.h in grpc_call.hFix #9417
Clarify scope argument documentation tf.get_collection. Fixes #9314.cc: @drpngx
"Add scaffolding for running XLA python tests on a plugin backend.Copy the plugin_config.tpl file to plugin_config.py and configure
the two lines to name the plugin device and types that the device
supports.  The device can the be referred to as 'plugin', eg there
will be test targets called:"
"Allocation tracking of pre-tracked buffer returned in a tuple should increment the buffer by 2A buffer not pre-tracked has its ref-count set to 2 when it is part of a tuple. A buffer
pre-tracked has its value increased by 1, whether it is part of a tuple or not.  This is
an error."
"Add 3D operations for layers: conv3d, avg_pool3d, max_pool3d and conv3d_transpose.1.Fix a TODO(jbms):
change rate parameter to dilation_rate for consistency with underlying op."
"Add 3D operations for layers2.Fix a TODO(jbms):
change rate parameter to dilation_rate for consistency with underlying op."
"Delete unnecessary forward declarationsThese are made in tensorflow/stream_executor/stream_executor_internal.h
Additionally, RngSupport is within perftools::gputools::rng rather than
perftools::gputools::internal."
Use AppendShape() instead of looping over and adding the dims of output_matrix_shape individuallyNo description provided.
"Quantize Graph - check whether the key exists before using itIt is a simple fix for a hidden bug in tensorflow/tools/quantize_graph, the existence of the node key wasn't checked before using it."
"Full set of changes to ISSUE_TEMPLATE.mdA few changes got missed in #9385, so I'm adding them back here."
Removed legacy rnn constructorsThese are deprecated. But someone still needs to check whether they are being used internally.
Added StateSavingRnnEstimator in __init__ of contrib.learnNo description provided.
Fix typo in encoders.py documentationNo description provided.
"Improve ISSUE_TEMPLATE.mdLargely based on #9199, which may have get lost as a result of a bad merge."
Branch 153925676No description provided.
"decode the read bytes before passing to text_format.MergeWhen using freeze_graph.py in Python 3, there will be error output as follows:"
PeriodicResample Op: Fixes #9369This implements sub-pixel shuffling in the module contrib. #9369
Add Feature: Sparse matrix multiplications for Tensors with rank > 2This is according to Issue #9210
Fix a typo.Fix typo
Fix typos#8943
fix slim README errorvgg.vgg_16(images) will return two values.
TensorBoard CherrypickFix issue where TensorBoard run selector can become non-responsive.
"Fix issue where TensorBoard run selector can become non-responsive.Various dashboards in TensorBoard store the same runSelector state via the url bar. However, the text dashboard may have a different number of runs, because it only shows runs that have text data to display. Some logic that I added to try to keep the runSelector state short actually causes state updates to be lost when the text dashboard and scalar dashboard have very different numbers of runs. I removed the clever update logic in this commit."
Fix TF-Slim TFExampleDecoder link/references in READMEThe slim/data README references the tfexample_decoder.py file as tfexample_data_decoder.py.
Fix tflearn doc incorrect commentThe issue link: #9336
Branch 153752424No description provided.
Cherrypicks for 1.1New TB patch and switching args for bincount
Branch 153741338No description provided.
"Update resnet_v2.pyI've added ""resnet_arg_scope = resnet_utils.resnet_arg_scope"" line to make sure that user can call resnet_v2.resnet_arg_scope(is_training). It is also present in resnet_v1.py"
Updating version to 1.1.0 and patching update_versionand patching update_version to include the extension from version.h
tf.train.Saver: be verbose about ckpt load errorsI've just had an AbortedError which resulted in the following log:
Include UGRNNCell and IntersectionRNNCell to the tf.contrib.rnn module.(#9303)@ebrevdo
"Fix typo in LINE#471change cell_input_fn to probability_fn, bug reported in #9312"
Utilize InlinedVector::emplace_backNo description provided.
Update README.mdNo description provided.
"Add reqeueue operations.This PR adds requeue and requeue_many operations to QueueBase. The operations dequeue an element/elements from the queue, add the element(s) to the queue again, and return an op that evaluates to the dequeued value."
Store step stats in benchmark model and use python timeline to visual…ize it
Fix a small copy/paste typo in a commentNo description provided.
Force new instance creation in MultiRNNCellThis change was missed when other similar ones were made in 54d50ff
Docs: Fix #9074 in release branchChange: 153414133
Update adding_an_op.mdThe variable name for the output should better be consistent with the name below.
Branch 153438895No description provided.
Update adding_an_op.md to suppress loggingThis TF_INC variable will contain redundant logging messages like:
"Multiplicative Integration Recurrent Neural NetworksI implemented Multiplicative Integration variants of recurrent neural networks
(RNN, GRU and LSTM) proposed in"
Close FileWriterCache before moving training directory in estimator_testHopefully this fixes #9185 by releasing some stray file handle.
Add BestSplits op to common windows installation problems.Fix #9273
"Fixing anaconda install command3.6 is the standard python version of anaconda. In order to get tensorflow installed correctly, version 3.5 is needed. Passing the exact version of python to the anaconda environment is necessary."
Implement atan2This addresses #6095.
"Merging rc2 commits back into master.Note: went with master versions of keras, cmake differences, and 1.1 version of configure."
Remove extra space in sample codeNo description provided.
Merge pull request #1 from tensorflow/mastersync
Fix code annotationFix code annotation
Including the grpc++/create_channel.h only when gRPC support is enabledTrying to build TF without the support of gRPC should not include the create_channel header.
Update batch_norm_benchmark.pyFix typo
fix style_guide.md my_op-example2 Typos causes errors:
"a python implmentation of label_imageA quick implementation of tensorflow/examples/label_image/main.cc
in python."
fix package descriptionfix package description
fix warning about comparing signed/unsigned types in auto_parallel.ccThis fixes a harmless (but annoying) GCC warning about comparing signed/unsigned types in auto_parallel.cc.
"added constThe const statement creates a variable whose value is fixed, that is, a read-only constant"
fix descriptionfix test file package description
"add \frames\ op to \contrib/signal\Added op to frame a signal into overlapping frames.
Inspired by python_speech_features.sigproc.framesig"
"Update op_def_registry.pyThe imported file does not exist, and it is resulting in an error for my code."
(DO NOT MERGE) Branch 153227038No description provided.
An ugly hack to compile on Tegra X1 /w Jetpack 2.3.1 release.Can one of the admins verify this patch?
Adding MKL op for reshape and several fixes to other opsNo description provided.
Correct tf.matmul() keyword reference in docsIn tf.sparse_dense_matmul() docstring:
small change to format codesmall change to format code
"In non-devel Docker images, positively confirm --allow-root (#9021)to avoid an error that started to happen recently:
[C 10:09:34.858 NotebookApp] Running as root is not recommended. Use
--allow-root to bypass."
R0.11need to build tensorflow model
Docker build: fix bazel installer and LICENSE download issueNo description provided.
Docker build: fix bazel installer and LICENSE download issueNo description provided.
Fixed jemalloc build on linux ppc64le when it is enabled while configureNo description provided.
Enabled LLVM to be built on Linux ppc64le when XLA is enable…Added ppc64le's support while building LLVM when it is enabled through configure option.
Update vgg_16 ref in slim readmeFixes #9187
CherrypickFixing the gradient test flakiness.
rc2 RELEASE file updateUpdating RELEASE.md to include keras fixes and TensorBoard text dashboard.
Updated the link to tensorflow.org to use httpsThis is a very minor change.
Fix build warning about comparing signed/unsigned typesThis fixes a harmless (but annoying) build warning about comparing signed/unsigned types.
"Improvements to ISSUE_TEMPLATE.mdRemoved the asterisks from the ""must complete"" section and the shell tag because when users see this template, they will see the unformatted markdown, not the formatted version."
Cherrypicks for rc2Conflict resolved on keras merge.py if someone wants to take a quick glance over.
"HDF5 QueueOpI wrote this internally and got the okay to release it. There are some changes I would need to make before it is ready for general use (naming, passing in a file name, etc.), but generally it works."
Branch 153075650Need 152990262 for release.
Enable protobuf's --with-pic optionThis PR only applies to contrib/makefile project.
"Support int32 idxs in sparse_tensor_dense_matmulThe sparse_tensor_dense_mat_mul operator requires indices to be stored in 64bit precision, which can end up consuming a lot of memory for large arrays.  This adds support for 32bit indices."
Revert \NADAM Optimizer (#8405)\We need to put this in contrib instead.
A replacement for tf.condThis is a prototype for #9188.
"fix filter position for Im2Colcac52fd fixed the filter position for
the reference class but the same problem exists in the Im2Col class."
Nadam optimizerIt has the implementation of Nadam optimizer by using a use_nesterov flag in Adam optimizer (as done in Momentum class)
Update word2vec_basic.pyNo description provided.
Branch 152974181No description provided.
fix windows gpu build - add cusolver to cmakerequired by:72c023d
fix missing Gather.png in tf.gather documentNo description provided.
[documentation] Updated comment for tf.multnomialSelf-explanatory.
"missing dash in install from source at cxxopt addedoption --cxxopt=""-D_GLIBCXX_USE_CXX11_ABI=0"" needs two dashes."
Remove boston_input_fn_with_queuesince it is not used.
"Fix loading metadata in tensorboard embedding projector.Fixes loading metadata (eg. vocab files, sprites) for display in
tensorboard's embedding projector plugin."
Branch 152843957Conflict in tensorflow/python/summary/writer/event_file_writer.py: keep both sides (flush + suffix change).
Update issue template (thanks jart@) and add env collection script.No description provided.
Update quantization.mdA simple typo in the quantization documentation.
"[CMake] Optionally support building TF as a shared libCurrently, TF is already built as a shared library that is included in the Python package. However, that library:"
"Mofify seq2seq.pyModify the tf.contrib.legacy_seq2seq.embedding_attention_seq2seq so that it allows user to explicitly provide a second cell for the encoding step, and if it's None then to fallback on the deepcopy."
Copying the whl file for python 3.6 as well.Change: 150691934
"Fix for Issue 9103, serialization issue with tf.PlaceholderRemoved restriction on Placeholder to have fully defined dimensions. Partially defined dimensions now accepted. Allows Placeholders to now be fully serialized under Protobuf."
"Branch 152703253Push again, this time do not squash."
Copy the Keras config file handling from master into the 1.1 releaseFix for Cloud ML to use 1.1
[OpenCL] Implementation improvementsOpenCL implementation improvements (#22)
"Branch 152703253Manually reviewed and merged, from possibly previous faulty merge. Took google internal versions."
line<= 80 and RELU to ReLUline<= 80 and RELU to ReLU
add code descriptionadd code description
Add Windows link to \Common installation problems\The link we provide our users when import tensorflow fails only points to Linux and Mac OS. Add a link to the Windows instructions to match.
"Update input.pyWhen the input tensor of the tf.train.string_input_producer() is not fully defined (as a tf.placeholder(tf.string, ...)), then the element_shape is set as '[ ]'. There will raise a ValueError in line 150 ""element_shape = input_tensor.get_shape()[1:].merge_with(element_shape)"", since the input of the element is '[ ]', shapes will be not compatible. So I suggest the default 'element_shape' value should be set as 'None'."
"Correction to word2vec exercise.In its existing form, 2 * skip_window training examples for the skip gram model are incorrect because they draw context words from both the beginning and end of data."
Update README.mdNo description provided.
delete null and relu to ReLUNo description provided.
"Add output_shape parameter to transposed2d_convolution layerI just added this parameter that was missing in the conv2d_transpose layer.
If output_shape is None, then the layer acts as usual returning the smallest shape possible"
"Add output_shape parameter to transposed2d_convolution layerI just added this parameter that was missing in the conv2d_transpose layer.
If None, then the layer acts as usual returning the smallest shape possible"
"fix example typo (too many brackets)The example was like json.dumps({{}}), which fails because {{}} is not a valid data structure."
Merge pull request #1 from tensorflow/masterleatest source
Ops and kernels for reduce_slice_opsThis is a PR for #7662
Branch 152550050No description provided.
R1.1No description provided.
remove unused includeNo description provided.
Branch 152523909No description provided.
"Tensorboard change NPM script name prepare to prepNPM 4.3 now calls the 'prepare' script as part of the install process.
As a result, running 'npm install' or 'npm run prepare' causes an
infinite loop. This removes the infinite loop. Relates to issue #8326"
"Add documentation about extra update ops to tf.layers.batch_normalizationtf.layers.batch_normalization uses extra ops for updating its moving_mean and moving_variance variables, but these are added to the graph in such a way that they will not be a dependency of the main training op. Instead, they must be run separately, accessed through the tf.GraphKeys.UPDATE_OPS collection. This was explained in the documentation for tf.contrib.layers.batch_norm, but this information seems not to have survived the transition to tf.layers.batch_normalization."
Merge pull request #1 from tensorflow/masterupdate from tensorflow
flatten inputs in tf.layers.denseIn the document of tf.layers.dense is writen that:
set save_model_secs=60 in mnist_replica.pyThis would make restoring from a checkpoint more easily. The default value for save_model_secs is 600 which is relatively too long for this tutorial example model.
"Modify seq2seq.pyModify the tf.contrib.legacy_seq2seq.embedding_attention_seq2seq so that it allows user to provide a second cell for the encoding step, and if it's None then to fallback on the deepcopy."
Fixing 36899400.Updating version suffix in version.h and updater script.
Revert \Allow SavedModelBuilder to overwrite existing folders\Reverts #8902
CPU kernels for FFT (WIP)This PR adds CPU kernels for FFTs (cf #386). A few points to note:
"In non-devel Docker images, positively confirm --allow-root with jupyterto avoid an error that started to happen recently:
[C 10:09:34.858 NotebookApp] Running as root is not recommended. Use
--allow-root to bypass."
Merge pull request #1 from tensorflow/masterleatest source
R1.1Related to issue #8191
"Add hint to distinguish between assignment ops and non-assignment opsThis allows XLA backends to decide whether an op is doing an in-place
modification of a tensor. a backend can use this to ensure assignment
operations do not move data."
"fix windows gpu build by disabling nccl which currently will not compile/work on windowsWindows gpu builds got broken because nccl was include in cmake (08a3e36).
nccl currently does not compile/work on windows (unfortunate). To make nccl compile/work is more work so I disable the nccl op from windows for now to make the gpu build happy. There is a PR (NVIDIA/nccl#31) for nccl that makes it mostly work on windows ... watching that and if merged we can try to make this work."
Use html5lib version that bleach wantsFixes #8971
Allow the output of `tf.argmax` as index typeThis fix tries to fix the issue raised in #8951 where the following will raise a TypeError:
"Fix KeyError in quantize_graph round, quantize optThe round/quantize paths check for a boolean value in a dictionary before it is set, leading to a KeyError. This change allows the input graph to be quantized using the 'round' and 'quantize' options. The quantized graph can't actually be used (for the 'round' option, at least) due to a lack of a RoundToSteps Op, but I figured I'd submit this anyway."
Merge rc1 back into master.See title.
separate license and code annotationseparate license and code annotation
clean separationbetter differentiate license and annotation.
delete fist null linedelete fist null line
use /* better than //use /* better than //
wipe out null stringwipe out null string. markdown will not influence
Adding License headers to the cmake files.See title.
Branch 152232810No description provided.
"Adding a hint to the XLA op metadata, set when the op is updating a variableThe hint can be used for ensuring that the buffer allocated to a variable remains at the same place.  For a static graph compiler, this prevents an extra copy at the end of the execution."
[CMake Docs] links typo fixNo description provided.
"fix summary writer thread leak#4820
I assume there is only one daemon thread consumes event_queue."
Update adding_an_op.mdThe issue (#1569) is related to gcc 5 and also above.
contrib/slim: Fix broken links in README.mdFixes #8969
"Added \hop_bytes\ option to FixedLengthRecordReaderA ""hop_bytes"" option added to FixedLengthRecordReader."
"Intel Mkl kernels for Concat, LRN and FusedBatchNormThis commit implements following changes:"
Branch 152198296Push of internal changes.
Fix unbound <table> tag.Change: 152029426
Branch 152141388No description provided.
Fix gradient implementation documentationThe docs for implementing gradients for a custom op are inconsistent. It seems that a gradient op for an op that takes multiple inputs should return a list of tensors with the gradients with respect to the individual inputs. The next paragraph matches this interpretation.
Add TensorFlow equivalent to np.repeatThis is requested in #8246
Merge pull request #1 from tensorflow/masterUpdate
"Ibverbs-based RDMA pathThis patch introduces an ibverbs-based RDMA path between servers for tensor transfer (weights, gradients, etc). The existing gRPC path remains and is responsible for ""administrative"" tasks, such as setting up the Rdma path, exchanging computation graphs, etc. Design details can be found in the README file below:https://github.com/yahoo/tensorflow/blob/verbs_rdma/tensorflow/contrib/verbs/README.md"
Remove empty line in dummy filethat causes issue during pull.
Updating update version scriptUpdating the install source files to be rc1 compliant. Updating the update_version script as well to handle these changes.
Update the issue template to be more compact.No description provided.
Branch 152048672No description provided.
Fix broken ./configure on mac because of non-portable sed syntaxRunning ./configure on mac complains with the following error:
"Remove --no-deps flag from pip installof tensorflow whl in pip.sh.
Fixes ongoing breakages related to the new dependencies of the
tensorflow wheel (e.g., bleach and markdown)."
"Add gradient op for MaxPoolWithArgmaxThis is a reattempt of #4014, which fixes #1793."
Enabled the generation of big kernels by libxsmmNo description provided.
tutorials/monitors/iris_monitor.py fixesthe code was not working due to some deprecations as well as duplicate code. This is more effective. Please commit. Thanks.
Update get_started.mdCorrecting output.
"Make sure we don't compile with SSE for i386 iOS simulator buildsThis prevents a fatal error on launch, see #8914"
Update lstm_ops.ccfix o in doc
"Make tensorflow pip install work in dist_test DockerfileRecently added dependencies of the pip package no longer work with the
--no-install-recommended flag of apt-get install python python-pip."
Polish weighted_sparse_column docThis is necessary otherwise Returns and Raises sections will be included as part of argument dtype's description.
"corrected which graph_def to validateAfter each transformation comes a check for validity.
merged_graph_def was already tested a few lines above.
output_graph_def should be tested directly afterwards."
"Avoid use of sufficient_statistics in moments()When some of the dimensions are unknown, tf.nn.sufficient_statistics() uses reduce_prod to guess the size.
But reduce_prod is not differentiable on GPU (#8841). This commit avoids the usage of sufficient_statistics in tf.nn.moments()."
Allow SavedModelBuilder to overwrite existing foldersThis adds the feature #8852 requested
"Add gzip and zlib support for FixedLengthRecordReaderThis fix adds gzip and zlib support for FixedLengthRecordReader,
as was discussed in #8865."
"corrected \check_graph\ to \summarize_graph\""check_graph"" may have been the previous name for ""summarize_graph""
the surrounding text suggests that both refer to the same tool"
Added Convolutional LSTMAdded an implementation of convolutional lstms (https://arxiv.org/abs/1506.04214). Related to this issue #4536 .
CP gradients test fixDisable gradients_test testWarnings for python versions 3.6 or above.
Branch 151877152No description provided.
rc1 RELEASE.mdUpdating the authors in RELEASE.md and updating new bug fixes.
Change scalar_summary to summary.scalarscalar_summary is deprecated and issues a warning. This was reported in bug #8878
"Minor fix to saved_model/builder_impl.py docstringI believe that there is a minor problem with the python API documentation at https://www.tensorflow.org/api_docs/python/tf/saved_model/builder/SavedModelBuilder. The first line of the ""typical usage"" example should readbuilder = saved_model.builder.SavedModelBuilder(export_dir)
rather thanbuilder = saved_model_builder.SavedModelBuilder(export_dir)."
Add bazel clean back info the configure script for 1.1 release.No description provided.
Add back bazel clean into configure script.No description provided.
Update version.Updating the r1.1.0-rc0 references to r1.1.0-rc1.
"[CMake] Experimental Jemalloc support.My benchmarks of TF with Jemalloc on Windows had mixed results so far. However, some specific scenarios may benefit from Jemalloc support, so adding it to CMake (OFF by default)."
"[cherry-pick] tfdbg: fix a bug in graph validation related to tf.while_loopsCL/147488620 fixed a bug where the debugger would hang at Enter and NextIteration nodes under certain conditions. But it introduced another bug where the debug dumps from Enter and NextIteration may get generated later than downstream nodes in the tf.while_loop body, causing ""causility violation"" during debug_data.DebugDumpDir's validation process under certain conditions (e.g., backpropagation on a dynamic_rnn). This CL fixes that by excluding Enter and NextIteration nodes from the validation process."
Branch 151810398No description provided.
"Introduce a new tool/function to visualize a pb model as requested by #8854Issue #8854 asked for a tool to easily visualize .pb models as graphs. I pointed out it was possible to do with Tensorboard so i've created a function to allow someone to pass a .pb model and a tensorboard log directory to then view the imported .pb graph.
I guess this is a temporary measure until a decision is made on creating something a bit more friendly."
Branch 151792071No description provided.
minor edit to sequence_loss doc. fix issue-8755this PR fixes issue #8755 by
"MSVC 2015 port.My version of MSVC 2015 has some issues with some newer c++ constructs.
There are 3 type of fixes:"
Cherrypicks for r1.1-rc1Cherrypicks from the list emailed internally.
Branch 151761382No description provided.
"Changed the path to graph directoryPreviously, it was showing ""Could not create TensorFlow Graph: Not found: ~/graphs/inception/tensorflow_inception_graph.pb"". Now, this change ensures that the graph generation will work for everyone smoothly."
Upgraded libxsmm to version 1.8No description provided.
"Fix doc for svdError where ""left"" and ""right"" were reversed"
Fix resources section linkUpdated the resources section link in the README file to point to the correct page on tensorflow.org
Windows: Fix cuda_configure.bzl for Bazel build@gunan @damienmg
Add CMake v3.8 as working versionWhile CMake 3.7 was causing build errors with GPU ON. I was able to compile Tensorflow (master) with CMake 3.8 with GPU enabled perfectly fine
Java: Formatting tweaks to READMEsThey looked funny when rendered on github.
Branch 151636533No description provided.
Update examples/android/README.mdRemove line breaks between images so they show on the same row. Apparently something changed recently in github's presentation of .md files that caused the line breaks to be interpreted literally..
Thread-safe implementations of MKL kernels and rerolling changes lost in previous mergeCan one of the admins verify this patch?
Fixed python 3 compatibility issue for DeepDream example notebookCan one of the admins verify this patch?
Express cherry-pickCherrypicking a CL that's blocking doc progress.
Replay of #8637: Add the corresponding --action_env to .bazelrc from …./configure
"[Cherry-pick] Contrib build changesThis change, already applied to master, adds support for more tf.contrib libraries on Windows in r1.1."
Queue item passed directly instead of via eventThe event object created here was never being cleared till python termination when the worker was killed. This was causing memory leak as described in issue #8265  Resolving this by bypassing the object creation.
"[tensorboard] make projector plugin request data path relativethis PR solves #8342
As in version 1.1rc0, the changes are made:"
Branch 151524146No description provided.
"fixes bazel/skylark handling of grep terminal colors when checking cudnn versionFixes #8702
The issue was that on some systems, the environment or terminal are set up to use grep in a way that produces color-related formatting. They cannot be circumvented easily by command line manipulations. These ""silent"" color-formatting characters then go on to cause difficult-to-diagnose issues with the version checking logic in bazel/skylark."
Fix uninitialized local variableError is:FailedPreconditionError (see above for traceback): Attempting to use uninitialized value input/input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs
"fixed broken references to summarize_graph""summarize_graph.cc"" doesn't exist (anymore),
updated references to ""summarize_graph_main.cc"""
Branch 151394592No description provided.
Branch 151391741tensorflow/contrib/seq2seq/python/ops/attention_wrapper.py had some minor conflicts that needed manual fix.
Merge 1.1.0 rc backMerging the r1.1 branch back after releasing RC.
"Update README.md for graph transformDo not recommend to useremove_nodes(op=Identity, op=CheckNumerics) in the README. It breaks the control flow based operations."
"Add @org_tensorflow to targets in tensorflow.bzl for submodule usagetf_kernel_library and friends do not currently work if called from a
repo that contains tensorflow as submodule."
Do not run bazel fetch during configure anymore.Fixes #8713
Fix to code in Getting Started GuideFix no attribute prediction_key error. This compliments PR:8735.
R1.1No description provided.
Fix code block indent in TensorFlow Linear Model TutorialThis should fix the code blocks rendering. Right now they look like this:
Semi sync optimizerAsync SGD is faster than sync SGD but inferior in AUC.
Fix broken link in Android example READMEIssue  #8742 identified that the link to os_setup.html does not work for the master version.
"Update broken link in README.mdUpdated link (highlighted line number).
It was pointing to Line number of a old version of the file."
differentiate package description and licensedifferentiate license and package desription. use /* */ make code more clear.
"[CMake] Enabling CPU optimization with MSVCUpdating CMake docs to add clarity about how to enable advanced CPU instructions
with MSVC."
"Fallback to legacy camera API for problematic devices in android demo appFix #8550
The camera 2 API is problematic in some devices.  Similar problem is also dicussed in #7464 .  One of the problem is shown here on a LG G4c device:"
Fix no attribute prediction_key errorfix no attribute prediction_key.
[WIP] Add a cache layer to record_reader#8715
Update README.mdadd space to fix separation line rendering
"Fix broken links in `contrib/learn/python/learn/README.md`This fix fixes broken links in contrib/learn/python/learn/README.md
by replacing g3doc with appropriate URLs, e.g.,"
"PollZmqOp for network communicationThis PR adds PollZmqOp for retrieving data over the network (fixes #4836, ref #7951) . A few points for discussion:"
Added support for case callables to return namedtuplesThis commit adds support for namedtuple to be used with tf.case.
Correcting Cudnn to cuDNN in config scriptNo description provided.
Fix tf.nn.softmaxFixes #8667
"Fix typo at description of tf.nn.conv1dAs you see description of tf.nn.conv1d, batch, out_width, out_channels is linked, because markdown recognizes it as link. [batch, out_width, out_channels](...)"
"adapted documentation formattingApplied formatting of section ofhttps://www.tensorflow.org/api_docs/python/tf/nn/softmax_cross_entropy_with_logits
to responding section ofhttps://www.tensorflow.org/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits"
"Update Tensorboard readme with fixed links, fixes #8706No description provided."
Branch 151147354No description provided.
Typo in README.mdNo description provided.
Fix two compiler warningswarning C4099: 'tensorflow::port::`anonymous-namespace'::CPUIDInfo': type name first seen using 'class' now seen using 'struct'
Refactor common_env.sh for Windows Bazel buildRemoved a duplicated script
Fix doc for CTC_GreedyThe output is the minus the sum of the logits and the logprobs
"Clarify and correct Android Sections in WORKSPACEBuild Tools version updated to latest version shipping with Android Studio.
Added some comments to clarify both this and NDK Level details that have been causing confusion.
Both of these have caused problems within Android studio so these edits should avoid the build tools error."
R1.1No description provided.
Basic setup steps for contributingThere was no instructions on how to get set up and running tests.
Update linalg_ops.pyJust add a space to doc of svd...
Branch 151087060No description provided.
Added checkpoint_path for Estimator.predict()To be consistent with Estimator.evaluate().
Added Windows JNI download to READMEThe Java README is missing the download link for the Windows JNI download
Branch 151086011No description provided.
BNNS Based Implementations for MaxPool and Conv2dFixes #3001
Update roadmap.mdNo description provided.
get_attr returns dtype objects instead of raw intsFixes #447.
R1.1r1.1
"Support self_adjoint_eig to complex64 and complex128This fix adds the complex64 and complex128 support for self_adjoint_eig, as was raised in #5190."
"Add the sched_getaffinity support for Android.Now the NumSchedulableCPUs() always chooses to  return 4 cores for Android, other than try the Bionic supported sched_getaffinity to get the actual available cores. Here I remove the ""!defined(ANDROID)"" macro and just keep the "" linux"" macro to work for both pure-linux and android-linux platform.
The reason why we can drop the ""ANDROID"" marco is that the GNU toolchain would always has the system-specific predefined macros ""linux""  setting to 1."
"Add distributed aggregation for embedding lookup sparse#5928
the function embedding_lookup becomes too complex...but hard to split."
"Doc addition to tf.gather describing validate_indices option behaviorSee Issue #3638 . This helps people debugging their code, as otherwise they may assume tf.gather throws an error when invalid indices are present (it currently does so only when executed on CPU)."
AOT graph gen script failed to open files in binary modeThis script will fail on Python 3 if the binary flag is not enabled during writing.
Cherrypick fix windows gpu build (#8603)Fixing Windows release build.
Support pandas Series and DataFrame as input for tf.constantThis fix tries to address the proposal raised in #2318 to support pandas Series and DataFrame as input for tf.constant.
"Add the corresponding --action_env to .bazelrc from ./configureThis will make the fetch phase reproducible so the refetch does
not happens unless people re-run configure (the environment variable
are stored in the .bazelrc file)."
"[CMake] Fix for building tools when GPU support is enabledBefore this change, benchmark_model would not build with GPU support enabled."
Add check op for assert valid sample in Bernoulli for contrib.distributionsTitle. The style for asserts seemed to vary across the distribution implementations. I followed Binomial's. It implements _maybe_assert_valid_sample and checks via utility functions such as embed_check_nonnegative_discrete in distributions_util.py.
"Fixed Minor Bug in tensorflow/python/platform/googletest.pyThere was a bug in the function GetTempDir of the module, in line 118.
I found this bug when I built tensorflow from source on my system and tried to test the install and it gave the following error while simply importing tensorflow in python shell."
"Doc addition to tf.gather describing validate_indices option behaviorSee Issue #3638 . This helps people debugging their code, as otherwise they may assume tf.gather throws an error when invalid indices are present (it currently does so only when executed on CPU)."
Minor bugfix in DynamicAttentionWrapper; improve docsNo description provided.
"explicitly assign to dtype for tf.Variable codedtype is not the second parameter in tf.Variable, though the type is inferred correctly by the initial values."
R1.1No description provided.
Cherrypicking Asim's changes.Java: Load native library from class loader resources if possible.
Branch 150846197No description provided.
Update version 1.1.0-rc0Running the update_version script on r1.1.0-rc0.
Update 1.1.0rc0Running the update_version script on r1.1.0-rc0.
Update version to r1.1.0-rc0.Running the update_version script on r1.1.0-rc0.
Branch 150817673No description provided.
"Use str(Label(...)) in tensorflow.bzl for use as a submoduletf_kernel_library and friends do not currently work if called from a
repo that contains tensorflow as submodule.  Justine recommended this
as the right fix."
Release notes for 1.1 releaseNo description provided.
fix windows gpu buildcopy cuda_runtime_api.h into build dir to fix gpu build on windows
Import the Ops Research tools in TensorFlow as well as their dependenciesNo description provided.
update_version to 1.1.0Making the update_version script for 1.1 release.
fix documentation of tf.switch outputsNo description provided.
"docfix, reverse switch outputsNo description provided."
fix description of tf.switch outputsNo description provided.
Update get_started.mdTypo in the tutorial file  get_started.md with initialize_all_variables() replacing global_variables_initializer()
"Windows Bazel Build: Cut dependency on broken targetsTensorFlow build with Bazel 0.4.5 is currently broken:http://ci.bazel.io/job/TensorFlow/BAZEL_VERSION=latest,PLATFORM_NAME=windows-x86_64/735/console"
Comment referring to the wrong variableNo description provided.
modify annotations of data_format of average_pooling2d in file python/layers/pooling.pyModified wrong annotation of data_format in average_pooling2d in file python/layers/pooling.py
Update computecpp.tplComputecpp can't generate code for AVX function __builtin_ia32_cmpps256. Build error is attached.
"Adding mechanism for XLA device plugins to be loaded into the python unit testsBy copying and configuring 2 files, the unit test framework will include a plugin when running."
Branch 150685391No description provided.
"Type conversion for non-fused, default batch norm #8535CLA signed and submitted."
"Remove unused assets/code from iOS Camera ExampleAfter going through the iOS camera example this weekend I noticed several assets are unused, and there are several methods that only call super. Let me know if I missed something and they're there for a reason. Feel free to squash commits (or I can as well) if preferred."
Branch 150655275No description provided.
Only run test that requires int64 support when the driver supports int64Making a test that requires int64 support conditional on support from int64 in the device under test.
Add header only build rules for XLA external pluginsThis change includes the exporting of XLA symbols in the main python plugin.
"Modified mnist.py to use random seeds.Modified mnist.py to use random seeds to allow for repeatable behavior during development and testing.  This may be especially helpful in the MNIST tutorials.  Both graph level seeds via the tf.set_random_seed call like:  tf.set_random_seed(1238)
and op level via something like:
mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True, seed=12345)
are allowed, to be consistent with the overall Tensorflow random seed handling."
Fix several minor issues with C++ custom ops (`adding_an_op.md`) documentationThis fix tries to address several issues related to C++ custom ops (adding_an_op.md) documentation:
R0.12No description provided.
"Adds renormalization #7476Adds an additional parameter called renorm to add a stop gradient on gamma, beta parameters during the training phase. This has been discussed here #7476"
Fix some comments in the run() method of the BaseSession class.No description provided.
"Modified the file mnist.py to allow for users to set the random seed.Modified the file mnist.py to allow for users to set the random seed, either based on the graph-level seed via tf.set_random_seed or an op-level seed via a call like:
mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True, seed=12345)."
"Modified mnist.py to utilize random seed settings.Modified the file mnist.py to allow for users to set the random seed, either based on the graph-level seed via tf.set_random_seed or an op-level seed via a call like:
mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True, seed=12345)."
"Added random seed setting to mnist.py (submission email corrected)Modified the file mnist.py to allow for users to set the random seed, either based on the graph-level seed via tf.set_random_seed or an op-level seed via a call like:
mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True, seed=12345)."
"Added random seed setting to mnist.py.Modified the file mnist.py to allow for users to set the random seed, either based on the graph-level seed via tf.set_random_seed or an op-level seed via a call like:
mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True, seed=12345)."
fix runtime link error--gettimefix runtime link error--gettime
"Fixed `needs_broadcasting` expression in tf.layers.normalizationin Python3, range() function doesn't create lists, so [0, 1, 2] != range(4)[:-1] always returns True."
"Performance improvement for io::inputbufferDo not add chars to string one by one.
In most cases, buffer size >= max line length.
Let's do it in one function call."
Branch 150542283No description provided.
"Disable FILE_FLAG_RANDOM_ACCESS in WindowsFileSystemYou will run out of physical memory if you need to read a large file on Windows.https://support.microsoft.com/en-us/help/2549369
The behavior looks very like a memory leak, however, the process's memory usage doesn't grow."
"Fix misalign of code blocks in `tensorflow/tools/ci_build/README.md`The code blocks in tensorflow/tools/ci_build/README.md are misaligned,
due to the unaligned pair of ""bash"" and """"."
Fixed pooling layer example.And improved consistency by keeping same name over whole example.
tensorboard README: fix grammar mistakeNo description provided.
"Checkpoints default values for RunConfigWith save_checkpoints_secs having a default value (of 600), the call to RunConfig fails if only save_checkpoints_steps is passed. To address this, the value is defaulted only if both the parameters are None. In this new way, the call to RunConfig will not fail if only save_checkpoints_steps is passed"
Fix broken link in `tensorflow/examples/learn/README.md`This fix fixes broken link in tensorflow/examples/learn/README.md
Cherry pick 1.0.1 release notes into master.No description provided.
Branch 150328131No description provided.
"Change Python print to be compatible with Python3This PR is trying to fix issue #8349 . I searched the docs to find out all the print calls which is python2 style. Please review, thanks a lot."
Fix minor error-handling bugNo description provided.
Introduce conv3d_transpose in tf.layersThis PR attempts to introduce Conv3DTranspose class and an equivalent functional interface named conv3d_transpose. Additions have been done in tensorflow/python/layers/convolution.py
"Move module-level comment out of _RNNCell classThe _RNNCell class docstring contained a description of the module
itself. I moved it back to the module's docstring.
I also fixed a comment that wasn't correctly indented."
R1.0update
"Tensordot partial shape inferenceAddresses #6682.  Tensordot now correctly infers partial shapes when possible.  In some cases, such inference is still impossible, such as when axes are specified as a tensor or when either of the operand tensors has an unknown number of dimensions."
Move bazelrc to the master location so that it concatenates both configurations.No description provided.
"Some minor optimizations for speeding up nearest neighbor resize.By removing loop over channels. Impact mainly visible for more than 3
channels. Numbers for benchmark with 6 channels:"
fix issue #8325fix issue #8325
fork the tensorflow out and modify it for euroc.No description provided.
Expose DynamicRnnEstimator in contrib.learncc: @martinwicke
Fix small typo in seq2seqNo description provided.
"Windows: Fix TensorFlow Bazel buildRemove explict reference to nodejs binary
@org_nodejs//:bin/node doesn't work on Windows, since it's supposed to
be @org_nodejs//:node.exe@jart"
set _interactive in logging utilitiesthis update fixes #8401
"configure: Bugfixcommit 429d14d introduced
TF_BAZEL_TARGETS. However, it turns out that if:"
"Fix: Use TestCase.get_temp_dir in dataframe_test.Addresses nightly failure here:http://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=NO_OPT,TF_BUILD_IS_PIP=NO_PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/419/consoleFull"
"nn_ops.py docs clarify atrous output dimensionsClarifies documentation based on discussion in #4742, but does not solve that original issue."
Fix build_config.bzl broken by recent pushNo description provided.
NADAM OptimizerImplements Nadam - a published variant of Adam Optimizer with Nestov momentum
Branch 150085723No description provided.
"Update Java API test for size and missing assertsCorrected issues where unit tests tested too many things in a single
test, and where they didn't perform any effective tests. Its best
practice to keep the size of test to as close to one assert as
possible, and to not have tests that never test anything."
R0.12No description provided.
Enable type_index on WindowsNo description provided.
Switch back to Ubuntu 14.04 for our releases.Haven't tested this yet. Letting Jenkins do the work.
Fix CameraActivity typoFix crash when activity paused
Add SingleImageRandomDotStereogramsOp to ContribThis add an Op to convert 3D data into a 2D image SIRDS (Single Image Random Dot Stereogram) for scientific data review.
Fixed TF Stylize crash after reaching the endVideo of the bug in actionVideo of the fixed version
R0.7No description provided.
"Tensorboard smoothing 1st order lag filter@dandelionmane  This is an alternative to PR7891, since you mentioned you are considering alternative ways forward."
Fixing function path for 'bow_encoder' -- Closes #8353No description provided.
"Fix for compilation error in OS/X, due to size mismatchSee #8238"
Create hello.txtNo description provided.
Comment fixNo description provided.
Adding instructions on SavedModelBundle usageNo description provided.
Fixing building from source instructions in READMENo description provided.
Fix `go generate` error in case multiple directories in GOPATH existThis fix tries to address the issue raised in #7136 where go generate will produce an error when multiple directories in GOPATH exists.
set out_depth and pad_depth in PoolParameters if depth_window == 1Fixes #8313
"Add SingleImageRandomDotStereogramsOp to ContribUpdated code, closed 8074 pull request.  Could not merge to master without README file in the pull request so pulling R1.0."
"Indentation in word2vec_basic.pyRunning the raw word2vec_basic.py in a python terminal threw a number of IndentationError: unexpected indent exceptions, and it looks like the cause is the indentation of the blank lines."
"Fixed typoRunning the example didn't produce any output.
Added print on estimator.evaluate to comply with the expected behavior."
tf_upgrade should rename tf.batch_fft2d to tf.fft2dUpdating a module with tf_upgrade.py should rename tf.batch_fft2d to tf.fft2d similarly to the others fft / ifft functions.
"Readded build rule for image resize benchmarks, extended for bilinear.Build rule was deleted somewhere along the way. Connected to discussion of issue #533. Benchmark results on my configuration (GTX 960):"
zhangshuo_R1.0No description provided.
"MKL support for max/avg pooling and reluThis has been branched off the MKL pull request for convolution so please review the last 2 commits only. Once the MKL convolution pull request is complete, we will merge the tensorflow master here and that should make things clearer."
Fixed a bug where inception layers had 2 3x3 conv kernels instead of …one 3x3 and 5x5 kernel.
Avoid using parallel_gpu_execute.sh on macos.No description provided.
Update documentation for BNThe documentation code to update moving_mean and moving_variance for BN raise an error with TF 1.0:
Branch 149810103No description provided.
Branch 149796694No description provided.
fixed a bug in tensordotThis should address #8281
TF Learn: updating links for tutorialsI can also just link to the docs in gh here and here if that's preferred.
Fix XLA build breakage on Mac OS X.Fixes two compilation problems on Mac OS X:
Fix the initializer and make global variable specified in word2vector exampleThe modification will cause the example arise this warning.
Explain that to restore without a graph one can use import_meta_graphExplain that to restore without a graph one can use import_meta_graph
"Set `set +e` in generate.sh (`go generate`) to output correct informationWhile playing with go in tensorflow, the go generate will not output correct
information about missing protoc even though generate.sh contains the following:"
"native Cuda kernel for tf.dynamic_stitch op (reopened PR)I screwed up when squashing commits in #7764, so I started a clean pull request. @girving Please take a look at this, thank you. (and I sincerely apologize for my horrible git-fu)"
Revert \Fix compile warnings.\Reverts #8206
Fix docs for pool and convolution functionsOn https://www.tensorflow.org/api_docs/python/tf/nn/pool
Expose SKCompat.Partial fix for #7287.
Add missing sparse base columns definitions and change parameter nameThere are couple of issues which prevent the code from tutorial to run immediately after copy-pasting:
"use sed separator compatible with busybox sedbusybox's sed errors with '[' as separator. This becomes an issue when
trying to run tensorflow/tools/ci_build/builds/configured on Alpine
Linux."
Fix: Join checked thread in random_shuffle_queue_test.No description provided.
Fix documentation in dynamic_bidirectional_rnndocstring for dtype was defined twice.
Optimize Array initializer_list constructor.std::vector reserve + emplace could be more efficient than
Added missing SVM in init filecc: @martinwicke
R1.0 to masterMerging r1.0 back into master.
Merging r1.0 to masterMerging r1.0 back into master to include all the commits that were needed for 1.0.1.
Fixing quotes in documentation. See https://github.com/tensorflow/ten…Fixes #8207
Make binary ops delegate to rhs when tensor conversion failsFixes #8051.
"Use .bazelrc to configure optional dependenciesRather than having ./configure mutate one of our .bzl files, which dirties the git repository, this change has ./configure put --define options in .bazelrc for jemalloc, GCS, HDFS, and XLA inside a .bazelrc at the root of the TensorFlow repository. This file is listed in .gitignore."
Windows loadlibrarywindows:
Branch 149567254No description provided.
Make configure not create -e files on MacThere is no cross platform way to use sed -i without backup files that works in both GNU sed and Darwin sed. So a helper function has been added to the configure script.
"[WIP] Added support for erfcinv.As requested in #8089. My machine is having errors running the tests, so this isn't tested; I would be very grateful if one of the maintainers can run the tests in Travis and I'll fix the results."
Update gmock from 1.7.0 to 1.8.0Update gmock from 1.7.0 to 1.8.0
Update installation documentation for v1.0.1.No description provided.
Fixing built jar location in readmeJAR location in readme is incorrect.
Fix compile warnings.Fixes instances of comparisons between 'signed' and 'unsigned'.
CMake: use copy_if_different to replace copyFor speedup edit-compile-run loop
Changed inconsistent conv1d to use 'filter' param instead of 'filters'Updated the docs and all occurrences of 'filters' when used as input to conv1d. Partial fix for #6379.
Make summarize_graph recognize VariableV2#8054
Add cmake build for benchmark_modelNo description provided.
Changes for visual studio 2017This change is for visual studio 2017
Mkl kernelsAdding MKL support for conv_ops
Correct shape->dense_shape in SparseTensorJust a typo correction.
Branch 149461652No description provided.
reduce line count using getattr() on layers 'weighted_sum...' rather than two explicit callsNo description provided.
"add backup URL for downloading MNISTA lot of folks (#6742, #8126, #8134,#8116) have been having sporadic trouble downloading MNIST, because the site where it is canonically hosted sometimes goes down. This PR just adds a backup URL for convenience (though with the increased traffic the backup will get when normal MNIST is down, the backup might fail too. Someone might want to put this up on S3 or something Google-hosted.)"
Closes #8165 -- Removing traces of os_setup.mdNo description provided.
"Fix broken link due to recent docs moveThe link was broken when the docs moved from g3doc to their new place. This fixes by linking to the ""Installing TensorFlow"" page on the website."
"Go: Handle nil values for list-valued attributes gracefully.Without this change, setting a list-valued attribute to 'nil' would
result in a crash (&list[0] is malformed)."
Fix typo in map_fn docsTypo was introduced in 9ca6865 (248 days ago!).
fix tf.Saver to tr.train.Saver after api changed@caisq review this pr please
Mkl bfc allocator and static memory allocator registryPull request for
[Java] Ability to load from SavedModelThis PR is exactly the same as #7688 with updates to the BUILD file to make tests pass so that we can merge the changes in.
RELEASE.md changesUpdating the RELEASE.md for patch version 1.0.1
"Use vector constructor to initialize Array3D.Current constructor of Array3D calls resize to initialize the inner vector of
Array3D and follows up with a Fill call. This can be replaced with a simple
call to vector constructor. Vector constructor might also be more efficient."
Fix tf.contrib.framework.init_from_checkpointLoading to variables in the root scope (/) was not supported.
Remove the extra linkopt in ci_parameterized_build script./CC @av8ramit
fix a typo in tf.cond docstringpref->pred
Fix broken links to docs_src/get_started/get_started.mdFix broken links to tensorflow/tensorflow/docs_src/get_started/get_started.md
"Use vector constructor to initialize Array2D.Current constructor of Array2D calls resize to initialize the inner vector of
Array2D and follows up with a Fill call. This can be replaced with a simple
call to vector constructor. Vector constructor might also be more efficient."
Fix broken links to g3doc/get_started/os_setup.mdNo description provided.
"Fix a bug of initializingPrevent the exceptional illegal call of initializer.__init__(shape, dtype, partition_info) appears when the param ""initializer"" is an init_ops class instead of its instance."
Fix broken links in documentation adding_an_op.md `g3doc/how_tos` -> `examples`This fix fixes broken links in documentation adding_an_op.md with
Fix link in documentationFix a link in the documentation. The anchor of the URL was not spelled correctly.
r1.0 python 3.5 fixesNo description provided.
Remove extra exported symbols.Change: 149211889
"unexpected pipe read statusHello,everyone!
I am new about tensorflow,and I am just trying to build tensorflow from source according to the steps described step by step, but I get the following error, Is there anyone who can help on it? That would be very kind of you!
Thank you very much!"
Branch 149211889No description provided.
Fix some typos in the documation (tensorflow/docs_src)This fix fixes some typos in the documentation (tensorflow/docs_src/**.md)
Update retrain.pyFixed example bazel build in description (removed unnecessary 'third-party' from path)
Fixed build error.The errors were introduced in commit d97f45b.
Merge pull request #1 from tensorflow/masterUpdate
Support read data from ViewFs.Support read data from ViewFs.
change tf.Supervisor to tf.train.Supervisor after api changed@maciekcc @terrytangyuan  review this pr please
"Update the github docs link in the error msg upon import failureHi,
since the docs have moved from g3doc to docs_src (and have been refactored), I thought it would be good to update the link in the error message that comes up upon import failures."
Add Stereogram into /contrib/imageBuild PULL package for Tensorflow single_image_random_dot_stereograms
change learn.metric_spec.MetricSpec to learn.MetricSpec due to API change  in version 1.0As mentioned in #7569.
Cherry-pick: Add the graphdef version to InferenceContext and to ShapeRefiner::Add…Node.
1.0.1 patch (update version)Running the update_version.sh script to update all version #s to 1.0.1.
Update head for StereoGram Pull Request to TensorFlow repositoryUpdate Local copy to latest TensorFlow prior to StereoGram pull request.
Fix Linux pip install paths and instructionsI updated the wheel URLs (the old ones give 404s) and fixed the wording for the pip install instructions.
Branch 149155199No description provided.
1.0 cherrypicksNo description provided.
Branch 149132162@andrewharp fyi
Made sequence_length optional in bidirectional dynamic rnnCloses #5588
install_linux.md: add missing closing <tt> tagThere is a simple formatting error in install_linux.md which leads to the lower section of https://www.tensorflow.org/install/install_linux#run_a_short_tensorflow_program  being rendered entirely in monospaced font. Add a closing <tt> tag to correct formatting.
[BACKPORT-r0.12] Fix loading of libhdfs.so when installed in non-standard directoryThis PR is to backport #5911 to branch r0.12
Do not build nccl on windows.No description provided.
Windows: Fix error in release script for C libraryBug in 8777d9a
Update mnist_replica.pyAdding elif statement
Fixing two small typos that were preventing the XLA compiler from buildingResolves #8031
Allow setting name on accuracy opCloses #7986
"Add support for the matmul (@) operator.This PR closes #1062.
Assuming a and b are tensors, a @ b  is equivalent to tf.matmul(a, b)."
"Fix local_test.sh to respect --num_workers and --num_parameter_serversPreviously, 2 workers and 2 parameters servers were always used,
regardless of the value of these flags."
"Fixed broken link to CommunityThe original index.md file in the g3doc/resources is removed, and this would be the most appropriate one that found in docs_src/about."
"Cleanup iOS Camera ExampleFix some bugs, modernize the project, resolve warnings."
Fixes ios cameraNo description provided.
fix compiler issues with intrinsics under Windows for Build Tools for VS2017Based on discussion in Issue #7966
"fix the filter position cacluating for the VALID padding modeThere is a typo for the filter position calculation for the padding mode of VALID.
Here we fixing it by using the same way of ~/tensorflow/core/kernels/conv_ops_using_gemm.cc."
small grammar/typo editsNo description provided.
"Update MNIST source url, original url is deadhttp://yann.lecun.com/exdb/mnist/ is not accessible"
Fixed broken link to installation instructionsThis link was broken when the docs were moved (and apparently restructured a bit).
Branch 148925596Pushing internal changes.
"Fix typos and minor issues in Docker README.mdFix typos, company/product name capitalization, and other minor issues."
Fix TF issue that prevented compiling it as a submodule.No description provided.
Branch 148894335Push internal changes.
"Fix Inconsistency in the seq2seq documentation.With TF 1.0, the parameters softmax_loss_function has changed from Function (inputs-batch, labels-batch) to Function (labels-batch, inputs-batch)."
Ignore generated bazel_config while configure./configure with default setting generates untracked files of bazel configs.
add function get_collection for scope#7719
Fixing broken link to DebugDumpDir.find()No description provided.
Fix TensorFlow compilation errors with KNL optimization flags (-mavx512f)This fixes the compilation errors (listed below) encountered when building TensorFlow with -mavx512f flag. -mavx512f enables generation of AVX-512 Foundational instructions in TF/Eigen and are needed for optimal performance on Knights Landing (Intel Xeon Phi x200) architecture.
Add --pull to docker build to automatically pull the latest image in …(#7597)
Replace broken junit download link with maven.No description provided.
"Allow zero samples in RandomGammaFixes #7406.  Instead of an error with zero samples,
we now return a zero-shape tensor."
Second derivative computation in softmax xent opPR for issue #7403
Allows C++ API to be built on Windows within Visual Studio and Debug configurations.Problem: TensorFlow does not build directly from Visual Studio.
"Improved a virtualenv optionReplaced the ""--system-site-packages"" option of virualenv with ""--no-site-packages"" option, so that the packages required by tensorflow are installed separately with the system packages.
Otherwise, there could be multiple versions of an installed package (e.g. numpy-1.8.2 installed by apt and numpy-1.12.0 installed by pip), and an error may occur when executing ""import tensorflow""."
Adding Intel Conv2D kernel implementation alongwith required Graph pa…sses
Add bow_encoder for importsNo description provided.
Branch 148665838Pushing internal commits.
"Added passing of kwargs to external optimizer minimizeI originally created this patch to track performance, but as it isn't an OP, you can't build timelines etc. Still it might be nice to have this interface."
Deleted unused private field.No description provided.
Catch PermissionError to raise RuntimeErrorNo description provided.
"Add MNIST dataset loader in Go bindingAs well as python examples, MNIST dataset is good resource for tutorial and examples in Go API."
Improve tensorboard smoothingThe smoothing of training loss in Tensorboard was frustrating; it would seemingly select a random set of unfiltered points near the end of the loss history leaving one unable to see the most recent trend.
Added missing defines for AVX512 packetsNo description provided.
add links to nightly builds for Microsoft WindowsNo description provided.
Changed inconsistent conv1d docs to use 'input' param instead of 'value'Fixed inconsistency in documentation for conv1d.  Partial fix for issue #6379
Update DetectorActivity.javaSet default detector in DetectorActivity.java back to MultiBox
Branch 148552367No description provided.
TyposNo description provided.
updated word2vec basic example with current initialize_all_variables(…) from issue #5514
Branch 148513339No description provided.
Branch 148500449No description provided.
Fixed documentation for false_negatives calculationfalse positives -> false negatives in documentation
Branch 148492669No description provided.
Branch 148485205No description provided.
Branch 148481141No description provided.
Branch 148470369No description provided.
Fix missing backquote in tf.norm description.No description provided.
Remove unnecessary code in master_session.ccNo description provided.
Fixed typo in _DNNEstimator doc and minor reformatNo description provided.
Add a non-debug avx2 fma buildNo description provided.
Android ImprovementsThis branch adds minor improvements to TensorFlow on Android.
"Updated strided_slice doc for #7815Tried fixing the documentation. Someone should verify it though, cause I'm not sure I got it right"
Branch 148383964No description provided.
Adding missing close parenthesis in code listing.Fixing code syntax error that is already corrected in 1.0 and master branches.
Adding missing close parenthesis in code listing.Fixing code syntax error that is already corrected in 1.0 and master branches.
"Improved support for AVX512.Added missing definition for the Packet16q16i.
Fixed a couple of bugs in the implementation of max reductions for
avx512"
sparse_placeholder after SparseTensor eval method changedNo description provided.
Change pip.sh to take Bazel flags directly so AVX packages are built properlyCherry-pick for r1.0 branch
Add pre-compilation of Pascal binaries (CC 6.0/6.1) to CUDA-enabled D…ocker build (#6941)
fixes erroneous collection in contrib batch_normNo description provided.
Switch to an official release of buildifier.The current git master of buildifier has a broken build.
"Assert Bazel version from tf_workspace()This ensures that projects depending on TensorFlow, e.g. TFServing, will
benefit from the version check."
Fix nccl when referenced from a different repoThis fixes the following error:
Change pip.sh to take Bazel flags directly so AVX packages are built properly.Also fix EXTRA_ARGS typo.
"update BUILD file to include client session in libtensorflow_cc.solibtensorflow_cc target didn't have client session.
Tested on my end and workinghttps://github.com/memo/ofxMSATensorFlow/blob/master/example-graph-build/src/example-graph-build.cpp"
"fix debian jessie ci_buildWorkaround deb packaging issue in debian jessie. The packages openjdk-8-jre-headless does not automatically install ca-certificates-java because there are wrong metadata in backport repository. The workaround is to force ""-t jessie-backports""."
Branch 148228903No description provided.
Branch 148225260No description provided.
"fix some documentation style faults for dynamic_rnn, dynamic_rnn_decod…fix some documentation style faults for dynamic_rnn, dynamic_rnn_decoder and tensordot
See:https://www.tensorflow.org/api_docs/python/tf/contrib/seq2seq/dynamic_rnn_decoderhttps://www.tensorflow.org/api_docs/python/tf/tensordothttps://www.tensorflow.org/api_docs/python/tf/nn/dynamic_rnn"
Make ExamplePartialRun hiddenThis is follow up of #7667
ADD: section for troubleshooting in readme.mdI added a section with information on the problems I ran into getting the HVX sample application to run on my OpenQ 820 develoment board.
"Update deepdream.ipynbGives an error saying it can take only one argument so removed 'utf-8', which solves the problem"
Update iris_monitors.pyInterface has changed.
"native Cuda kernel for tf.dynamic_stitch opCorrespond to issue #7251
Here is the comparison between
my implementation:
and current implementation:
generated by Nvidia visual profiler with this code. Since the kernel uses CudaDeviceArrayStruct, which depends on code from //tensorflow/core:lib, I can't generate custom_op library and use the custom_op for performance comparison. I ended up manually switch the tensorflow directory python uses between runs
Currently, I still have two problems:"
Use Ubuntu 14.04 for the 1.0 branch GPU build.nvidia/cuda:8.0-cudnn5-devel currently points to Ubuntu 16.04 which causes it to fail on Jenkins. This change pins to the same Ubuntu version we used for the 1.0 release.
Add MAVX2_FMA_DBG build option and rename MAVXDBG to MAVX_DBG.Cherry-picking into the r1.0 branch for Jenkins.
"Make the comment explaining arg_scope clearerI found the use of ""..."" in a comment providing an example of the functionality of arg_scope to be very confusing, so I expanded it out to be less ambiguous."
"Add MAVX2_FMA_DBG to the CI build and rename MAVXDBG to MAVX_DBG.I'm the only one using MAVXDBG, so the rename is safe."
Udacity: Add latest Docker image based on TF 1.0.0No description provided.
Fix compile warningsFixes:
"Remove sigmoid by calling sigmoid before splitRemove one sigmoid function, by calling sigmoid before split"
MKL support for the transpose op2D transpose support for float.
Update release noteFor #7664
"Convert some tf2xla ops to use elementwise tensor XLA ops, not MapSome binary operations were implemented as maps of a scalar computation over the input tensors.  Since the computations consist of operations that can be element-wise operations, they could also be implemented in this manner."
addcsvopadd two new op decode_csv_selected_columns_op and decode_csv_first_n_op that modified from decode_csv_op.   decode_csv_selected_columns_op allows designatings which columns to parse. decode_csv_first_n_op only parses the first n columns.
Typo correction in resize_bicubic_op.ccI've signed the CLA.
"[Java] [Feature] Tensor cloneAllows a tensor to be cloned (shallow), resulting in a new tensor
sharing the same underlying buffer."
Add TF_CONTROL_SLOT to c_apiThis lets users of TF_ImportGraphDefOptionsAddInputMapping remap control inputs without having to guess the magical value of the kControlSlot constant.
R1.0No description provided.
Remove outdated link to nightly-matrix-android buildsThis has already been replaced with the nightly-android links.
Update nightly pip wheel and history URLS after upgrade to ubuntu:16.04No description provided.
"[WIP] MPI Support for Tensor data communicationThis adds a second communication path to the distributed TensorFlow implementation, next to the gRPC communication path. This new communication path uses the Message Passing Interface (MPI) API to handle communication between processes allowing TensorFlow to take advantage of modern high performance networks such as Infiniband.
This pull request is used to start a discussion about this implementation, any draw backs, alternatives and requests for feedback and participation from the open source community."
Adjust code to 38f6fd96793e031427be801612abf07d8d649d50No description provided.
"Update doc string to indicate clip_by_value accepts tensors as min and max arguments tootf.clip_by_value's current documentation mentions that it accepts only scalars as min and max arguments, but it can accept tensors too. This PR fixes that, and resolves the confusion raised in #7225"
"Update stat_summarizer_test.pyOptimizing and easy to understand the code, I have set ""sa = self.assertRegexpMatches"" and have called the variable sa later instead of ""self.assertRegexpMatches"" many times"
[Java] [Feature] Load from SavedModelAdded SavedModelBundle class to represent a loaded saved model.
Error message improvementSee issue #7675
Add .shape property to Variable objectalso adjust docstrings for consistency with Tensor.shape/Tensor.get_shape
Fix bug #7647 in image retraining example retrain.py so that the --pr…Fix bug #7647 in image retraining example retrain.py so that the --print_misclassified_test_images flag now works properly in Python 3.
"Make learn/mnist.py work againcontrib.layers.convolution doesn't exist, so it looks like convolution2d has to be used instead."
Don't try to read CUDA driver version from /proc on WindowsFix for #7599
make training compatible with python3No description provided.
Fix tfdbg in windows cmake buildFixes issue #7615
"[GO] Make utility for ops publicOps in util_test cannot be used because these are _test.go files. Since the usage
of these ops utils are writen in API docs, it is better to make it public."
Fix obsoleted tf.train.SummaryWriter() in the document page of Embedding VisualizationThe original document use an incorrect function to instantiate the summary file writer.
Remove outdated link to nightly-matrix-android buildsThis has already been replaced with the nightly-android links.
"Use tensordot for broadcasting in Dense#callI replaced reshaping the over 3-ranked input to the Dense layer with tensordot application.
This modification is based on theano.tensor#dot."
Branch 147845195No description provided.
"Added non-inverse hyperbolic functions.The functions sinh and cosh are imported from the Eigen library,
similarly to other trigonometric functions."
wrong code fixmaybe slip of a pen
Add description how to generate ops wrapperGenerating instruction of ops wrapper is useful for development of go binding.
fix windows buildNo description provided.
Update gmm_ops.pyIt should be int64 instead of int32
R1.0No description provided.
Branch 147800865No description provided.
"Update text_classification.pyAdding  x_transform_train = vocab_processor.fit_transform(x_train),   x_transform_test = vocab_processor.transform(x_test) so that it would be easy for programmers to understand"
"Update random_forest_mnist.pyCalling x and y outside once, it will be clean and helpful for the programmers to understand quickly, x = mnist.train.images and y = mnist.train.labels has been called multiple times instead calling those once with the variable x and y assigned would be helpful for programmers"
Add missing typename to fix Windows build#7592
fix typoNo description provided.
"make tf_upgrade.py more usefulWhen we upgrade tf code to version 1.0.0 in a directory tree, some times we also want to copy all the other files from --intree to the --outtreeｼ荊his makes it easier to upgrade an entire project."
"make tf_upgrade.py more usefulWhen we upgrade tf code to version 1.0.0 in a directory tree, some times we also want to copy all the other files from intree to the outtreeｼ荊his makes it easier to upgrade an entire project."
Add --pull to docker build to automatically pull the latest imageAdd --pull to docker build to automatically pull the latest image in FROM.
OpenCL ImprovementsNo description provided.
Branch 147758266No description provided.
Merge 1.0.0 back to masterNo description provided.
Branch 147741833No description provided.
test pulltest pull
Update Documentation for 1.0.0 ReleaseThis PR just updates the installation and download links from from release candidate 2 (rc2) to the full 1.0.0 files.
R1.0No description provided.
"[CMake] Disable BUILD_TESTING for Eigen.We don't actually run these tests, so building them is a waste of time. They can also cause surprising interactions with the environment (e.g. see issue #7374), in cases where some of the test dependencies are available."
Fix: typo in README.mdNo description provided.
Upgrade docker images for distributed testing to unbutu:16.04No description provided.
"Use environment invalidation for cuda_configureThis removes the needs for clean --expunge in configure :) but
request the incoming bazel 0.4.5."
Apply gofmt to Go APIApplied gofmt to Go API all code. Used gofmt is 1.7.5.
[fix] add estimators to allowed_symbols in contrib.learnFix
Fix typo in Release.mdintead 竊 instead
Update boston.pyMaking transformation of x_test separate so that it is useful for the coders
Passed in tensorflow::Env was ignored while creating GrpcServerNo description provided.
Replace Deprecated logging_opsReplace: (In the tf.contrib.learn estimators)
UpdateAdding a punctuation
TFLearn Estimator Summary Writer FixFixes #7554
added missing fclose(infile);This pull request is a fix for #7186
Branch 147656243No description provided.
Added atrous_conv1d and 3d. Refactored 2d.This commit makes following changes:
Branch 147628659No description provided.
Handle case of zero time elapsed on estimated steps/secExplicitly produce inf in that case. Fixes #3172.
Branch 147596183No description provided.
Added documentation for imperative modeNo description provided.
[#issue7328]Validate ip address in distributed computation#issue7328
Fix GetDsoHandle segfaultCurrently segfaults when LD_PRELOAD_PATH isn't set when it tries to include it in a log message:
"Fix #7328 by checking if socket address is validNot sure if it's the most standard compliant way for both platforms, but I've tried my best."
Add gradient for `placeholder_with_default`patch for #6906
"Cherrypicks round2git cherry-pick 3a87b7c #147412093
git cherry-pick e7f333b #147499520
git cherry-pick fa3d574 #147514603
git cherry-pick 52028e4 #147519957
git cherry-pick c839300
git cherry-pick ff2d9e9"
"Fix link in CONTRIBUTING.md from \contributions welcome\ to \stat:con…tributions welcome"""
examples change to sklearn dataset load methodThe same to #7310 but change the commit account.
Branch 147522473No description provided.
Branch 147499520No description provided.
Fix hooks/BUILD for custom py_test ruleNo description provided.
CherrypicksCherrypicked the following hashes:a4281af55db877bad13d74514c7169d0284d065a5de626195f953a316cfa69678c491cd85616e07deeac3aca494dd61d01b2607d7
Branch 147473081No description provided.
Added native architecture option to Linux makefile to fix test breakageNo description provided.
Update resize_bicubic_op.ccTypo correction.
Branch 147441750No description provided.
Branch 147434408No description provided.
Fix dynamic_stitch gradient implementationThis modifies the gradient calculation for the dynamic_stitch op so that it gives the correct gradient when the input indices have duplicate values (issue is described in more detail in #7397).
Branch 147412093No description provided.
Hide platform/logging.h from core/publicFixes #7480
Tell fixFixing tell() in file_io in which we were not doing the _preread_check() as a result of which _read_buf wasn't initialized causing a crash if tell() was the first method invoked.
"Fixing FileIO tell()tell() doesn't do a _preread_check() before accessing _read_buf. As a result, if thats the first thing one does it leads to a crash."
Replace deprecated tf.op_scope by tf.name_scopeSince tf.op_scope is deprecated (see https://www.tensorflow.org/api_docs/python/framework/defining_new_operations#op_scope) it should probably be removed from the style guide.
Upgrade TensorFlow Docker images from ubuntu 14.04 to 16.04This leads to Python 3 version increase from 3.4 to 3.5.
Branch 147365276No description provided.
Update README.mdadded hahahaha
"Integrate gRPC changes to fix #6116The gRPC won't build for some reasons, first make a hackish fix just for the review."
updateNo description provided.
"Add a bit more descriptions on adding an op?Hi,"
GraphDef is deprecated.No description provided.
"During makefile CI build, adjust ownership of the files docker writes… to host filesystem."
"Fixed off-by-one error in L115-116 in wordvec_basic.pyIn the original tensorflow word2vec tutorial, words in the end of a batch will be skipped.
Check issue 6860 for details."
Update release note.No description provided.
Update version string for 1.0.0.No description provided.
Fix regression in TensorBoardTensorBoard is currently broken. This fixes it. See #7375.
Upgrade Dockerized Android builds to use NDK 12bUpgrade to Android NDK 12b for nightly builds. This will fix an issue with the arm64 native libraries on Android where the Inception classifier returns incorrect results.
Fix: make sure to join all threads to avoid flakes in sync_replicas_optimizer_test.No description provided.
Add plugins/debugger to tf_python.cmakeThis fixes issue #7352 by making the debugger Tensorboard plugin available to cmake builds.
Seal contribNo description provided.
CP 1.0Fix double evaluation of macro argument that was causing duplicate CUDA batched GEMM calls.
Bump protobuf version to fix the mac GPU buildNo description provided.
Fix typo CUDNN_RETURN_IF_FAIL.No description provided.
tfdbg doc: move PNG image files to g3doc/imagesChange: 146289701
Change mismatched ref input error messageCloses #202
Branch 147149282No description provided.
Python : simplify computecpp.tplNo description provided.
Pass required input_length to batch_sequences_with_states() in exampleNo description provided.
Branch 147093777No description provided.
Better Variable.__repr__Closes #6539
Branch 147051664No description provided.
"Remove leading slash from data directoryTo allow embedding of TensorBoard, the data directories need to be relative."
Expose param_regularizers in python batch_norm layerCloses #7367
"Update shape checking logic in einsumIn #6830, I modified einsum function to check whether new shape has two or more unknown dimensions.
However, according to the comment on #6824, it is proven to be not sufficient to check only the last reshape call.
This PR fixes the issue."
Make this not UnboundLocalError if the actual TF_NewStatus failed.Closes #7356.
"Merge release branch back into master.In merge conflicts, I picked master branch's version for most. PTAL"
docs: add  a new 0.7.0 release with TF 0.12.1docs: add  a new 0.7.0 release with TF 0.12.1 in the History part.
resize_image_with_crop_or_pad can work with batch of imagesCloses #7359
set correct target directory for tar extractall()fixes a wrong path when data_root is other than '.'
Update protobuf only to track down jenkins failuresNo description provided.
"Cherrypicks for release test fixes.For bazel and cmake: maybe better to set this at runtime instead
of compile time."
Fix unsorted_segment_max for negative floatsFixes the following bug due to std::numeric_limits::min() returning the smallest positive value of a float.
"Add BUILD file and test case for \fact\ user opCurrent example op defined in tensorflow/core/user_ops/fact.cc is causing a ""AttributeError: 'module' object has no attribute 'fact'"" error using the following BUILD file and python code under tensorflow/core/user_ops:"
Cherrypicks and version update for 1.0.0-rc2No description provided.
Do not build with sse4.1 by default.Fixes #6809
Do not build with sse4.1 by default.Fixes #6809
"Fixing example strided_sliceFixing broken example of tf.strided_slice
NEGATIVE strides work differently (should they?!)"
Branch 146845645No description provided.
"Apply changes for non-fused winograd, and contrib/BUILD change for nccl, to r1.0No description provided."
Refer users to the RedBaron fork of this script. (#7334)Cherrypick in upgrade script referral
"Float indexing test fix for Numpy >= 1.12+This fixes test failure for NumPy 1.12 that does not allow float indexing of arrays. Of course, it makes sense to index arrays using ints anyway, regardless of NumPy support. I assume this wasn't causing problems to people with NumPy up to 1.11.3, but it's better not to assume a specific NumPy version."
Propagate TF_BUILD_ENABLE_XLA environment variable into the CI build …docker container from ci_parameterized_build.sh.
Branch 146817322No description provided.
Update our version of protocol buffers. Use a new numpy and pandas in Jenkins.No description provided.
"Merge in some performance changes to r1.0git cherry-pick f49cca9
git cherry-pick 66b5684
git cherry-pick f0a1af4
git cherry-pick 2b589dc
git cherry-pick f49721a
git cherry-pick 9b7c47c
git cherry-pick 4464232
git cherry-pick 5be95cb
git cherry-pick 27ffb49
git cherry-pick e9602d2
git cherry-pick bf67d0a
git cherry-pick 7725c87
git cherry-pick e212770"
Fix typos in graph_editor add_control_inputs.@purpledog
"Refer users to the RedBaron fork of this script.@machrisaa, has created a fork of tf_upgrade.py that uses RedBaron. For minimal dependency reasons, testing reasons and RedBaron's not full Python3 support, we aren't changing the officially supported version yet. In the mean time, we will refer users README.md that they can try it if our script finds a case it cannot handle."
"Adding MKL matmul opAdding build, op and registration for the MKL matmul op."
Fixed a bug where inception layers had 2 3x3 conv kernels instead of …one 3x3 and 5x5 kernel. This is a fix for the issue #7130 .
fesetround is not part of the C++ std libraryfesetround() is not part of the C++ std library. It is defined in the fenv.h header in the POSIX standard.
Add HomeBrew instructionsMaking iOS instructions a bit clearer
"Clarify import_graph_def() places Ops into current default graph defSmall documentation tweak for import_graph_def, stemming from #7240. The documentation current says that the GraphDef is imported into ""the graph"". This change adds clarity as to which graph receives the imported operations."
"Make CNN input float32Fixes #6342, fixes #6647."
Cherry-picks to bring tensorflow/compiler up-to-date with master in r1.0 branch.This contains cherry-picks to bring all files under tensorflow/compiler in the r1.0 branch up-to-date with master.
change tf.contrib.learn.datasets.load_dataset('boston') to sklearn.da…change tf.contrib.learn.datasets.load_dataset('boston') to sklearn.datasets.load_boston()
"Include build fixes, and a filesystem fix for r1.0.No description provided."
Branch 146699987No description provided.
Added Python Pandas to Docker ImagesFor more info/discussion: #7304
Bump the protobuf version to 3.2.0Removes the 64 MB default limit.
Merge r1.0 branch to masterNo description provided.
Branch 146677928No description provided.
"Fix gradle task dependenciesWithout the afterEvaluate closure, gradle can窶冲 find the assembleDebug task."
Typo in TF-slim READMELooks like a s/metrics_to_values/names_to_values/g was missed when taking this from the metrics README :).
Split up saver test as it frequently times out.@sherrym @concretevitamin Could you take a look to see if the split makes sense?
"resolve #6762 on ldconfig only available on root PATHSee Linux man page for ldconfig(8), synopsis section:"
"Improve docs for incompatible protobuf errorOn Mac OS X, importing tensorflow can result in the error: ""TypeError: __init__() got an unexpected keyword argument 'syntax'"". As explained in the doc, this is caused by an incompatible protobuf version. The suggested fix, ""pip install --upgrade protobuf"", doesn't resolve the issue if the user has installed protobuf via Homebrew. This commit adds an example command to fix the error in this case."
Fixed extraction step when using data_rootThis fixes an issues introduced in a81c968
fix docs formatting of tf.while_loopThe docs of tf.while_loop were wrongly formatted:.
"Fix build error, where nccl requires -lrt link option/usr/bin/ld: bazel-out/local_linux-opt/bin/external/nccl_archive/libnccl.a(core.cu.o): undefined reference to symbol 'shm_unlink@@GLIBC_2.2.5'
/usr/lib64/librt.so.1: error adding symbols: DSO missing from command line"
"Simplify cuDNN library handling in configure script.cuda_configure.bzl now handles the more complicated operations.
Also, we were running into bugs with failure to handle filenames ""cudnn.dylib"" and ""cudnn.5.dylib""
cuda_configure can do that without any issues."
Switch to use tf.losses.softmax_cross_entropy in examplestf.contrib.losses is deprecated. This only updates the examples. Leaving the actual removal of thetf.contrib.losses module to you guys internally.
Errata in mnist.pyPart of the images and labels were not selected from the shuffled array.
"To avoid failures in windows, do not always fetch contrib/nccl.No description provided."
Added missing return doc for export results in train_and_evaluateNo description provided.
"Android example app - Embed app icon in README fileSince we have the asset in this repo, it's nice to show it inline. :-)"
Fixing Issue 7214 about tf_update.pyCan one of the admins verify this patch?
Prevent Python unit test files from going into PIP packageSee also experimental PIP build at (Jenkins login required to view):http://ci.tensorflow.org/job/experimental-cais-linux-python35-pip/6/console
(WIP) Remove all Python unit test files from PIP packageNo description provided.
R0.12No description provided.
Branch 146479561Push internal changes.
"Don't use __has_builtin with version of apple clang that doesn't supp…This is a small fix to allow the clang compiler in OS/X El Capitan ""Apple LLVM version 7.3.0 (clang-703.0.31)""  to compile the CRC acceleration code."
"Add graph parameter to tf.import_graph_def()Allows user to indicate a specific Graph to place GraphDef Operations. This keeps users from needing to use a with g.as_default() statement in their code. The documentation for import_graph_def() has also been improved to inform users that the default graph is used.. by default. For tests, I've simply done an altered version of the basic test thus far- let me know what further testing you'd like to see."
Cherrypicks for test fixes into the releaseFix by Josh Levenberg for cmake build.
"fix cmake/windows gpu build191658d switched from dynamically loading the cuda dso's to linking them.
Add the required libraries to cmake to fix the gpu build."
Fix cudnn filename in configure script.No description provided.
Update release version string.No description provided.
Fix by Josh Levenberg for cmake buildNo description provided.
Cherrypicks for 1.0 release.No description provided.
Fix by Josh Levenberg for cmake build.No description provided.
Branch 146408773No description provided.
"Improve upgrade script to handle list comprehensions as arguments.python's ast module does not return the correct location, so we
have to do our best to scan backwards to find where the [ token
that trully started the list comprehension occurs."
Branch 146389949Push internal changes.
Add missing zero padding to microsecond field added in PR#7197No description provided.
Branch 146347092No description provided.
get GMM weightsave GMM model mixture weight and read out from checkpoint file
Docfix: Document usage of --config=opt for SIMD instruction sets.No description provided.
Branch 146325723No description provided.
Minimal changes in typo appliedAdded minimal typo changes in README.md
Add libcupti.so path to Docker.gpuMore info in #7207
Branch 146316196No description provided.
"increase size of nccl_manager_testThis test timed out when testing #7197 , increasing size small->medium"
"Allow for data stored in an arbitrary locationIf you want to store data somewhere you have more space or be able to ignore a folder in sync, change the data_root."
Add microsecond timestamps to LOG messagesFixes #2076
Branch 146269198Push internal changes.
Java: Remind readers to run \configure\ to buildFixes #7169
[WIP] Add standlone Poplar plugin scaffoldingThis pull request replaces #7163
Branch 146241206Push internal changes.
Typo.No description provided.
Fix possible flake sources in saver_test and supervisor_test.No description provided.
"Bump up size for estimator_testAvoid estimator_test timeout as seen in other PR builds, such as https://ci.tensorflow.org/job/tensorflow-pull-requests-cpu/3437/console"
Remove local_run in ExperimentNo description provided.
"Update tf_upgrade.py to handle more upgrade cases{ones,zeros}_initializer"
Move default for dnn_activation_fn to _dnn_linear_combined_model_fn for consistencyThis is for making it more consistent with assigning default values for other params
Catch dnn_hidden_units to avoid obsture error messageNot providing dnn_hidden_units in for dnn linear combined model would cause the following error message that's not useful for users.
"Revert \Added absolute path expansion of parent directory check in saver.py, …\Reverts #6601"
Branch 146128391Push internal changes.
"Make curl forward/backward compatibleI'm working on fixing bazelbuild/bazel#1262, which will change the way Bazel organizes the execution root.  The curl library needs to use ../curl as an include prefix in new versions of Bazel and external/curl in old versions."
[WIP] Add standlone Poplar plugin scaffoldingSummary:
"Fix wrong description for tf.nn.max_pool_with_argmaxThe description for indices is wrong. The real format is (y * width + x) * channels + c, batch index is ignored which can be seen here."
Branch 146066214Merging internal changes
"Update inception_v3.pythe operation array_ops.concat has been changed, which the parameters should be concat_dim followed by values. fixed this problem which could lead a bug in fine-tune and training"
Branch 146039928Merging internal changes.
"Improve cudnn.h search during build (#6850)Update _find_cuda_define() and _cudnn_version() to use
_find_cudnn_header_dir() to locate the cudnn.h header. The latter
already knows how to look in multiple locations for the header."
Fix a typoNo description provided.
Branch 145994731Push internal changes.
for reviewNo description provided.
for reviewNo description provided.
R0.10No description provided.
"[Java] Don't strip symbols from C library when compiling in debug modeWhen building the Java client with ""compilation_mode=dbg"", the symbols in the C++ library should not be stripped otherwise we won't be able to attach a GDB to the java process for core debugging."
"Java: Do no strip symbols from C library when compiling in debug modeWhen building the Java client, the linker should not strip symbols from the C library if we are compiling in debug mode, otherwise we won't be able to attach GDB to the java process for core debugging."
change log dir to /tmp/tensorflow/mnist/logs/mnist_with_summariesNo description provided.
Adding checks for broken bottleneck filesAn exception is raised when a broken cached bottleneck files is read. Such a file can be created as a result of sudden system failure.
R1.0No description provided.
Let dso_loader handle variations in the name of libcuda better on MacNo description provided.
"Corrected capitalization of TensorFlowChanged instances of ""Tensorflow"" to ""TensorFlow""."
Disable two failing tensor_forest tests in windows.No description provided.
Branch 145839627Merging internal changes.
Conversion script update (adding concat_dim to axis rename for tf.concat and tf.pack renames)Two updates to the conversion script for 1.0:
Let dso_loader handle variations in the name of libcuda better on MacNo description provided.
Update iris.pysklearn cross_validation is deprecated and should be replaced with model_selection
cross_validation is deprecatedAnd should be replaced with model_selection.
Upgraded to libxsmm 1.7No description provided.
Blacklist bigquery_reader_ops_test on windows.This test fails on windows.
Set EIGEN_VECTORIZE_SSE3 when building for windows using bazel.No description provided.
"Fixed a bugTensorflow API has changed, so we also need to change the codes.
The detailed discussion is here:https://discussions.udacity.com/t/assignment-5-ive-encountered-problem-when-execute-the-codes-provided-in-5-word2vec-ipynb"
Fixed typo input layer -> input_layerNo description provided.
Clarify doc for https://github.com/tensorflow/tensorflow/issues/7077No description provided.
"Improve cudnn.h search during build (#6850)Update _find_cuda_define() and _cudnn_version() to use
_find_cudnn_header_dir() to locate the cudnn.h header. The latter
already knows how to look in multiple locations for the header."
Fixed error due to api changesFixed TypeError in tf.nn.sampled_softmax_loss() function due to api changes.
R0.12by mistake.....
"Restore deprecation warnings on {histogram,scalar}_summary in logging_opsThey were originally added in 1cb9689, but temporarily removed at 6d400d4 due to test timeouts."
"Fix wrong description for tf.nn.max_pool_with_argmaxThe description for indices is wrong. The real format is (y * width + x) * channels + c, batch index is ignored which can be seen here."
"make weighted_cross_entropy consistent with sigmoid_cross_entropy.Some relevant discussions in #6700.
Since Python doesn't allow positional arguments to come after keyword arguments, this PR will enforce pos_weight to be passed as named arguments as well.
But maybe it's still better to throw error than to fail silently."
Add python 3.3 and 3.6 binary URLs to installation instruction.No description provided.
"Flush denormals to zero for Windows+GPU+cmakeIdeally this would apply to all platforms using nvcc+cmake, but the
relevant section seems to exist only for Windows."
Disable graph transforms library in windows pip packages.No description provided.
"Updates to install py3.5 packages. No more need for python 3.4, and newdependency, werkzeug."
Fix some BatchToSpace and SpaceToBatch examples.Can one of the admins verify this patch?
"CudaRoot() returns the configured CUDA toolkit path.Fixes the problem of XLA being unable to find libdevice files if not executed through bazel. For example,http://stackoverflow.com/questions/41729019/notfounderror-running-tensorflow-xla-example-libdevice-compute-35-10-bc/41800414#41800414"
"Replace all gate_gradients=1 with gate_gradients=GATE_OP in documenta…Replace all ""gate_gradients=1"" in documentation with ""gate_gradients=GATE_OP"" to make
it very clear that GATE_OP is the default value. This matches what exists in the source code as well."
"[CMake] Fix the Python build with -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF.The SWIG wrapper could not resolve the server-creation function, which
is unconditionally referenced in server_lib.i, but not built when gRPC
support is disabled. This change fixes the problem by building
server_lib.cc as part of tf_core_cpu, so it can always be resolved,
even when gRPC support is disabled."
Generate docs for release.No description provided.
Fix debian build.Change: 144738033
FreeBSD compatibilityTwo commits
"improved and fix bug of getting next batch in mnistThe original codes do not consider the situation that when the batch_size > num_examples (even though it is not a common event, if happens, no new data will be input at all)."
Fix breakages in Python 3.5 tests by using int type in indices (#7003)Need to fix py3.5 tests in release :)
"improved and fix bug of getting next batch in mnistThe original codes do not consider the situation that when the batch_size > num_examples (even though it is not a common event, if happens, no new data will be input at all)."
"improved and fix bug of getting next batch in mnistThe original codes do not consider the situation that when the batch_size > num_examples (even though it is not a common event, if happens, no new data will be input at all)."
Update release note.No description provided.
More cherry-picksNo description provided.
"Remove the files that are moved to be http_util*.During my push, the files were not correctly deleted. removing them now to fix windows cmake and pip tests."
"Add support for dict generator input_fn in learn_ioThis issue if related to #5546, where it is claimed that Datafeeders will become deprecated."
Branch 145436800No description provided.
Branch 145423129No description provided.
Replace tf.mul by tf.multiply in docs.No description provided.
Branch 145375395No description provided.
"Update roadmap.mdUpdate to the roadmap. I may forget things, please add them."
Branch 145339960No description provided.
"Remove concat_v2 from r1.0 branchRemoving concat_v2 and references. tf.concat now has the same signature as tf.concat_v2. So, tf.concat should be used instead of tf.concat_v2."
"Remove errorneous squeeze in `tf.contrib.losses.sparse_softmax_cross_entropy_loss`The tf.contrib.losses.sparse_softmax_cross_entropy_loss has an weights parameter which can be used to weight the individual batch elements. The weights parameter can have various shape, which are all taken care of in compute_weighted_loss."
"replace is_real with is_floating, remove is_real@martinwicke"
"Fix TensorBoard projector plugin reading tensor file in python 3.Current code throws an error in Python 3, since map() returns a map object and not a list."
Enable denormal test in open sourceThey seem to work fine; not sure what changed since ages ago.  The test works fine on my linux desktop and my OS X laptop; we'll see how it fares on the rest of the Jenkins machines.
Add gradient for `placeholder_with_default`Patch for #6906
Check None for elapsed_secs in LoggingTensorHookFixed edge case when elapsed_secs is None that results in the following:
Corrected first row in boston dataNo description provided.
"Fix breakages in Python 3.5 tests by using int type in indicesPreviously, float and np.float64 types were used in these places,
causing a certain version of Python 3.5 + NumPy to error out."
Replace deprecated api links in deep_cnn tutorial issue #7001Replace three deprecated tf.train summary operations by the most close alternatives in the latest TF release found under tf.summary instead.
Add note to new op and source build doc (#6473)As seen in #6473 issue topic I want to suggest this two little changes to the documentation.
Fixed issue in _call_location() when 2nd frame is `None`AttributeError: 'NoneType' object has no attribute 'f_code' occurs when the second frame is None.
Clean up code block in sparse_tensor_dense_matmulThe documentation section that gives an output of a benchmark for sparse_tensor_dense_matmul is formatted incorrectly- this patch should fix the HTML rendering problems.
make tensorflow/contrib/layers:feature_column_ops_test medium to fix …Jenkins test timeout.
Branch 145127746No description provided.
More cherrypicks into r1.0No description provided.
enable hdfs support for windowsNo description provided.
Add methods to fill and read Tensors from Java NIO buffers.Can one of the admins verify this patch?
"TF-549 Adds unsorted segment max OpAdds unsorted segment max. Fixes #549, Continuation of #4051.@drpngx, rebased to current master and squashed the commits.
Hope we'll manage this time!"
MasterThis reverts commit 0552f30.
Fix cudnn file nameNo description provided.
Cherrypicks into r1.0No description provided.
Fix nasm URLSee #6956
Fix nasm URL in r0.12See #6956
Improved support for libxsmmNo description provided.
"Passing config to MonitoredSession when using Estimator ClassWhile implementing my own Estimator class I noticed that although I supplied a RunConfig with gpu_memory_fraction < 1  all memory was allocated. After some investigation I think this is because the ConfigProto contained in the RunConfig is not passed to the MonitoredTrainingSession.
Changing the argument in line 981 from config=None to config=self.config.tf_config did the trick for me."
Branch 144951784No description provided.
"Update zlib URL in r0.9 branchI don't know if anyone still uses 0.9 from source, but if they do, this PR is going to preemptively make them happy <('.'<)"
Update zlib URL in r0.10 branchThis change fixes the broken zlib URL in yet another branch. Fixes #6950.
"fix typos in tensor constructor docsA fix for a minor typo in the tensor.h constructor docs. This was causing ""Copy constructor"" to appear under the move constructor declaration, and was hiding the move constructor description in the generated docs."
fix few signed/unsigned warningsNo description provided.
Fix: Fix timing flakiness by mocking time object inbasic_session_run_hooks_test.py
Add pre-compilation of Pascal binaries (CC 6.0/6.1)See issue #6914.
use context to cleanly close the file descriptorNo description provided.
"Make XLA command-line option to mnist_softmax_xla.py actually work.The --xla command-line argument to mnist_softmax_xla.py is effectively always true, so the example on https://www.tensorflow.org/versions/master/experimental/xla/jit (i.e. python mnist_softmax_xla.py --xla=false) still runs XLA.  This PR gives the script --xla and --no-xla optional arguments, with --xla as the default."
Change combiner default for crossed_columnNo description provided.
Update v5 references in os_setup.md to v5.1Fixes #6934
Added Intel MKL graph optimization code and the ability to enable MKL when running configure.Added Intel MKL graph optimization code.
Improved support for libxsmmNo description provided.
Fix warning initialize_all_variables is deprecatedReplace initialize_all_variables with global_variables_initializer.
Fixing typos in READMENo description provided.
"Feature: log-log scaleThis PR addresses #6532 and adds a toggle-able chart configuration sidebar, which should be useful for adding additional chart configuration options in the future, i.e. #1141"
Use local variable for match_input_once to avoid saving it in checkpointFixes #6786
[Windows] Enable tf.contrib.tensor_forest in CMake build and testsFixes error message appears when loading an OpKernel without the corresponding op. For example:
"Fix the error of erase session variables (Android JNI)When calling the tensorflow_inference_jni.cc of TENSORFLOW_METHOD(close) function, the session variables is not erased from the map of session variables according its id.(at tensorflow_inference_jni.cc line 217)
This bug reason is assign large data type to the small data type (at tensorflow_inference_jni.cc line 84) that causes some bytes missing."
format code as codeHard to read the very helpful update_ops snippet without the proper formatting :)
correcting index_to_string_table_from_tensor docNo description provided.
"Merge master branch into 1.0All(well, most) test failures are now addressed. Time to sync the release branch."
Branch 144675800No description provided.
Branch 144669682No description provided.
Branch 144656658No description provided.
add Erlang distributionThis is in the family of the Gamma distributions but with a=2.0.
Add support for different feature signaturesReopening #5546 on request of @martinwicke
fix comment misspellNo description provided.
Add custom operator code generator scriptThis script uses jinja2 templates to generate the following:
Support relative path head with no `./`.tf.gfile.Glob will fail if the argument is a relative path with no ./ in the beginning in current version.
"Added possible responses for uname on Windows, fixes #6871According to https://en.wikipedia.org/wiki/Uname#Examples, other responses
are possible on Windows, added mingw, cygwin, and uwin"
Remove overly restrictive check on gradient types.Fixes #6858
Fix quantize_graph invocation in docsFixes #6181
Update zlib URL in r0.11 branchFixes #6865
"Add ProfilerHook for capturing CPU/GPU profiling information with MonitoredSessionIt would be good to see if this is the preferred way to get profiling when using tf.contrib.training. If so, I can add the missing tests and doc updates."
"The type of `seq_len_max` should be int64If the sequence_length is not given, max_seq_len will be assigned to time_len.
By default, the type of time_len is tf.int32. But we need tf.int64.
So we need to cast it to int64, too. (Just like line 640)"
Remove unused flag reading data exampleNo description provided.
Remove unused variable in reading data examplesNo description provided.
Propagate seed in parallel_read to readers. Fixes #6735No description provided.
"Have `write_graph` return the output path of fileSince the function is performing os.path.join() for the user, it makes sense to return the location of the final file, or else the user will have to call os.path.join() again on their own."
temporarily add /sbin to PATH for ldconfig callFor issue #6762 (keeping the PATH changes local to where it is used instead of making it global as initially suggested).
Branch 144490912Includes:
Branch 144485165Includes:
Set NDK_ROOT in android_full.sh to fix Makefile buildtensorflow/contrib/makefile/build_all_android.sh disagrees about the environment variable to use. This seems the easiest fix with the least chance of breaking anything else.
Branch 144457649No description provided.
Fix documentation sample codeSigned-off-by: Norman Heckscher norman.heckscher@gmail.com
update Defun doc to clarify that definitions are frozen at first .run callFixes #6804
"GridRNN cell uses tuples for output and statesIn response to this (#2560) and recent changes in LSTMCell, this PR added state_is_tuple=True and output_is_tuple=True into the constructor of GridRNNCell:"
"Update einsum to check whether uncompacted_shape has multiple None valuesFixes #6824.
It checks uncompacted_shape, which contains the 'final' shape of matmul of two tensors, if it contains two or more None values.
If uncompacted_shape contains two or more None values, it means that it cannot be directly given to reshape as parameter.
This PR resolves this issue, by querying the dimension value using tf.shape function for that case."
./configure: A better way to exclude fetching //tensorflow/examples/android/...Bazel at HEAD currently breaks TF Windows build.
Enable bitcode for iOS builds by defaultCloses #5611
"Disable building the MatrixDiag and OneHot kernels for GPU on Windows.This is a temporary workaround for issue #6509, while the root cause of the runtime errors is under investigation."
Make tfdbg tests pass in Windows Bazel buildNo description provided.
Branch 144396000contrib/layers.py conflict: preserved both indentation (decay) and doc fix (center).
add virtual START&END symbol to CRF and implement viterbi decodingTwo major changes.
GPU impl. of hue adjustment opThis is related to issue #6817. Mentioning @zheng-xq since he implemented the fused CPU hue adjustment kernel.
Fix wrong order for op_name/summary_name in range_input_producerFixes #6808
Update LSTMBlockCell to use LSTMStateTuple as stateFixes #6582
"Fix a bug in windows_file_system.cc for reading fileWhen read_result is TRUE, result should be set to bytes_read."
Update DetectorActivity.javaSet default detector in DetectorActivity.java back to MultiBox
"Branch 144215355Merge conflict in contrib/learn/python/learn/ops/seq2seq_ops.py:
stack/pack (google side) and array_ops_ (github side)
Merged to use array_ops.stack."
fix documentation of center argument in BN layersfixes #6736
Enhance cuda kernel helper.Changes on functionality:
Branch 144094196No description provided.
Match new softmax_cross_entropy_with_logits apiFixed mnist_softmax_xla to match TF 1.0 Alpha API for tf.nn.softmax_cross_entropy_with_logits.
Update mnist.pyNo description provided.
"MNIST batch testThe test code uses test data as whole. It requires a lot of memory.
I modified it to test every 50 samples and average the results."
"Fix build errors on AVX2+ hosts with -march=native.third_party/eigen3/unsupported/Eigen/CXX/FixedPoint and third_party/eigen3/unsupported/Eigen/CXX/Tensor use different paths to reach into unsupported/Eigen/CXX/src/Tensor. The former's paths cause the build errors documented in #6558. This commit removes the includes from third_party/eigen3/unsupported/Eigen/CXX/FixedPoint pointing into third_party/eigen3/unsupported/Eigen/CXX/FixedPoint, because they do not appear to be necessary."
Branch 144040081No description provided.
Fix pip filenames.No description provided.
Branch 144035212No description provided.
Add comment on stripping model of unused OpDescribe how to strip DecodeJpeg Op in V3 Inception model
Fix expand_dim docs.@itsmeolivia @wolffg
Branch 144020788No description provided.
Update release notes for 1.0.0-alpha.No description provided.
Branch 143989623No description provided.
"Fix build errors on AVX2+ hosts with -march=native.third_party/eigen3/unsupported/Eigen/CXX/FixedPoint and third_party/eigen3/unsupported/Eigen/CXX/Tensor use different paths to reach into unsupported/Eigen/CXX/src/Tensor. The former's paths cause the build errors documented in #6558. This commit converges on the path in third_party/eigen3/unsupported/Eigen/CXX/Tensor, which fixes the build error."
Setting losses_test to medium since it times out on Jenkins at times.Change: 143740377
Branch 143877115No description provided.
Fixed wide_n_deep_tutorial.pyFixed issue #6648
Update jpeg.BUILDFixes #6706
Test fix cherrypicks into release branch.No description provided.
"Fix: Check bazel version before trying to setup the workspace.I could not prevent all the other errors from showing up, but this way we at least get the bazel version error message at the end:"
Fix typo ci_parameterized_build.shNo description provided.
"Fix flakiness of estimator_test on GPU.Fix for estimator_test created with help from @ispirmustafa
We should merge this instead of #6697"
Fix basic_session_run_hooks_test flakiness.CC @caisq
Branch 143784180No description provided.
Temporary fix to failing test method in estimator_testNo description provided.
Adding support for Big Endian in decode_raw_op_testAdding support for Big Endian in decode_raw_op_test
Adding support for Linux s390x in sparse_split_opChanging the data type of split_dim to resolve sparse_split_op_test failure on Big Endian System.
"Eliminate ':' in summary name of contrib.learn.estimators.When I run the contrib.learn.DNNRegressor or contrib.learn.DNNClassifier model, I've got the log messages like below."
TensorFlow API compatibility test.No description provided.
Adding support for Linux s390xAdding support for Linux s390x for TensorFlow
fix documentationNo description provided.
Enable sandboxing for Android builds to prevent asset double-inclusionSee bazelbuild/bazel#2334 for context.
Merge master into r1.0 to fetch all the fixes.No description provided.
"WIP: In MatchFilenamesOnceTest.test, call get_temp_dir() only onceAlso make sure files opened for writing are closed properly."
Branch 143639671No description provided.
Changes in Interactive Usage SectionChanged x from Variable to constant and commented the x.initializer.run()
Max pool grad gradAdds gpu and cpu kernels for max pool grad. Supports NHWC and NCHW layouts for gpu kernel and only NHWC for cpu kernel. Additionally registers gradient for python MaxPoolGradGrad which is just MaxPoolGrad. Registers gradient for python AvgPoolGrad which is AvgPool evaluated on top_diff.
New feature: Total Variation (image_ops)This is a pull-request for the new feature discussed in #6397
"Update zlib url in r0.12 branch(Similar to change done to master, to make r0.12 buildable)."
"fix zlib dependency (current one fails with 403 on ./configure)Looks like 1.2.8 got deleted, ./configure fails with
ERROR: /local_home/yaroslav/tensorflow_dbg.git/tensorflow/tensorflow/core/BUILD:970:1: no such package '@zlib_archive//': Error downloading [http://zlib.net/zlib-1.2.8.tar.gz] to /local_home/yaroslav/.cache/bazel/_bazel_yaroslav/687fadd894268346c74cc86e6f287d8c/external/zlib_archive/zlib-1.2.8.tar.gz: GET returned 404 Not Found and referenced by '//tensorflow/core:lib_internal'."
"fix zlib dependency (current one fails with 403 on ./configure)Looks like 1.2.8 got deleted, ./configure fails with
ERROR: /local_home/yaroslav/tensorflow_dbg.git/tensorflow/tensorflow/core/BUILD:970:1: no such package '@zlib_archive//': Error downloading [http://zlib.net/zlib-1.2.8.tar.gz] to /local_home/yaroslav/.cache/bazel/_bazel_yaroslav/687fadd894268346c74cc86e6f287d8c/external/zlib_archive/zlib-1.2.8.tar.gz: GET returned 404 Not Found and referenced by '//tensorflow/core:lib_internal'."
"change tensorboard html data request path to relativeTensorboard use a  absolute path  for data request like /data/runs, /data/graph, /data/logdir."
"configure: Handle existing TF_CUDNN_VERSION correctly on OSX.The configure script sets TF_CUDNN_EXT based on the desired CuDNN version. When TF_CUDNN_VERSION does not exist, the script correctly extracts the version from CuDNN's library symlink and uses it to populate TF_CUDNN_EXT. When TF_CUDNN_VERSION does exist, the script uses it to derive TF_CUDNN_EXT."
Allow for different input signatures for different modes and additionally updating zlib fixReopening #5546 on request of @martinwicke
Update deprecated function SummaryWriter.No description provided.
"Add adaptive softmax implemtation in nn_impl.pyAdd a implementation of AdaptiveSoftmax, see Efficient softmax approximation for GPUs for detail."
"Remove unused TF_NEED_SYCL from ./configure.TF_NEED_SYCL seems to be an old alias for TF_NEED_OPENCL. It does not appear anywhere else in the repository. This change replaces it with TF_NEED_OPENCL, using the same structure as TF_NEED_CUDA."
"Add adaptive softmax implemtation in nn_impl.pyAdd a implementation of AdaptiveSoftmax, see Efficient softmax approximation for GPUs for detail."
"Add AdaptiveSoftmax implemtation in nn_impl.pyAdd a implementation of AdaptiveSoftmax, see Efficient softmax approximation for GPUs for detail."
Break indirect dependency on contrib for windows.This fixes the tf-master-win-bzl build breakage.
Branch 143464290No description provided.
Make *args in sv.loop example an iterableNo description provided.
"Make placement of constants follow consumers if they are all on the same deviceA generator node (for instant a constant) will now go to the same device as its consumers, when those consumers are all on the same device. Previously a constant would only follow its consumer when there was only a single consumer."
"worspace.bzl uses zlib permalinkzlib permalinks including the current version are always in http://zlib.net/fossils/zlib-*.*.*.tar.gz
links in http://zlib.net/zlib-*.*.*.tar.gz are removed when no longer current."
"Fix capitalization of \TensorFlow\.Fix capitalization of ""TensorFlow"" in MNIST For ML Beginners tutorial."
"Detect and match against full cuda and cudnn versions.Currently, if a user specifies the full cuda or cudnn versions (with
major, minor, and patch numbers), cuda_configure will fail because we
only detect the version numbers we use (major and minor for cuda and
major only for cudnn). This change detects full versions and matches the
user-provided versions against the full versions. If the user provides
only partial version numbers (e.g. without patch version), then the
match will still succeed if the provided numbers match the detected
numbers."
"Added absolute path expansion of parent directory check in saver.py, …so as to correctly handle saving files in current directory"
Remove deprecated array_opsNo description provided.
update license to 2017Happy New Year!
Fixes #6549: Added missing keep_checkpoint_every_n_hours flagFixes #6549
1% -> 5% in commentThe download reports every 5% not every 1%.
Branch 143288671No description provided.
[Java] Bulk data transfer for Tensor classCloses #6576
Android nightly fixesThis time tested for real:http://ci.tensorflow.org/job/experimental-android/5/
Update version string to 1.0.0-alphaNo description provided.
Branch 143206951No description provided.
Make *args in example iterableNo description provided.
Branch 143204614No description provided.
Branch 143201255No description provided.
Update tf.nn.conv2d_transpose.mdThis seems wrong.
More numerically stable gradients for division.This PR improves the numerical stability of gradients for the division operator.
Fix: make sure android_nightly is a recognized container type in ci scriptsNo description provided.
Remove manual nvidia-docker instructions.No description provided.
"[minor] Silenced the 'pushd'It doesn't fix the #6555, it just silences the pushd during the ./configure step."
Branch 143142615No description provided.
Enable running android_nightly.sh through ci_parameterized_build.shNo description provided.
Android: Copy libs built by bazel in android_nightly.sh to output dirThis will make them easier to grab and expose via Jenkins.
Reenable building depthwise_conv_op and depthwise_conv_grad_op on windows.No description provided.
Merge release branch back into master.No description provided.
Pull in test fixes and API changes to 1.0 branch.No description provided.
Fix an error in depth_to_space docNo description provided.
Branch 143061298No description provided.
Provide a Maven POMCloses #6527
Support reference counting on Java Tensor classCloses #6524
"Update release to document breaking change 141725777, fixes #6202No description provided."
Disable some of the failing windows tests.No description provided.
"Fix build error on Windows.MSVC cannot resolve the type of nullptr in CHECK_EQ(nullptr, ...), so we use a static cast to make it explicit."
Change dbpedia URLFixes #6174
fix spelling/insert correct reference to udacity notebookThis pull request corrects the spelling of the notebook notmist.ipynb -> 1_notmnist.ipynb in notebook 3_regularization.ipynb.
"Update docker setup docsAccording to Using TensorFlow via Docker, docker_run_gpu.sh has been removed and only nvidia-docker is recommended for GPU support."
Fix comment on update_op of streaming_concat()I'm not good at writing in English. Could someone improve it?
"Correct the order of arguments of `softmax_loss_function`Correct the order of arguments of softmax_loss_function in seq2seq.sequence_loss_by_example(),"
patches for 0.12.1 release.No description provided.
"Matching the tutorial code with mnist_softmax.pyThe MNIST For ML Beginners tutorial is an explanation, line by line, of what is happening in the mnist_softmax.py code, but some lines didn't match."
Remove Double from supported types for Conv2D since no double impleme…ntation is registered for any device. Came up in http://stackoverflow.com/questions/41310637/no-opkernel-was-registered-to-support-op-conv2d-with-these-attrs
Branch 142863423No description provided.
Merge pull request #6463 from gunan/cpCherrypick doc updates to r0.12 branch.
Update README.mdAdd instructions on where to run the inception download commands
R0.11No description provided.
typo 'unit8' instead of 'uint8'No description provided.
Merge r0.12 back into master.Also update docs.
Cherrypick doc updates to r0.12 branch.No description provided.
"Write rules to construct headers for jpeg-turbo using existing templates.Fixes #6442
Test build:http://ci.tensorflow.org/view/Experimental/job/exp-win-bzl/8/console"
Branch 142778020No description provided.
"better visualization name for mnist_with_summaries.pyBefore the modification, the name showed in tensorboard:"
Branch 142716019No description provided.
Improved support for OpenCLNo description provided.
Fix how error message is generated when running configureVery minor fix:
Branch 142707321No description provided.
Branch 142694447No description provided.
Add an environment variable for the Python binary to enable Python 3.5 buildsTested:http://ci.tensorflow.org/view/Release/job/release-matrix-protobuf/
training.slot_creator: support for non-fully-defined shaped varsThis is a possible solution for #5972.
Update cudnn version in instruction for mac gpu. (#6407)No description provided.
Add synthetic datasets fixThis fixes #5314 and #5315  that was reverted by #6288 by re-introducing a fix by @comicchang in  #6283 . Fix #6283 was not merged as it was submitted after #6288 reverted it.
Fix TF_CONFIG example in ClusterConfig documentationNo description provided.
"Update README.md - clarificationI initially followed instructions - and got more errors.
The build all ios script should be first call to action for newbies stuck troubleshooting."
"Update README.md - clarificationI initially followed instructions - and got more errors.
The build all script should be first call to action for newbies."
Branch 142576906No description provided.
Branch 142573865No description provided.
Swift 3 wrapper around c interface.From comments here @rxwei#19
Add sequence_loss and sequence_loss_by_example working with dynamic_rnn without having to change outputs shapeNo description provided.
同步官网源码 20161220No description provided.
Create examples/how_tos/__init__.pyTo make modules under examples/how_tos executable from command line.
Fix broken links for examplesNo description provided.
Merge r0.12 back to masterNo description provided.
Revised 'Added FAQ for cannot connect to Docker daemon'Linked to popular SO answer.
Update cudnn version in instruction for mac gpu.No description provided.
Added FAQ for cannot connect to Docker daemonLinked to popular SO answer.
Improved OpenCL supportNo description provided.
Continuation line over-indented for visual indentNo description provided.
"SparsemaxThe sparsemax op is an alternative to the softmax op, that allows the
output to be sparse (zero properbility) while stil sharing many
mathematical properties with softmax."
"Fix issues seen in TensorFlow GPU cmake builds.Models is mvoed to another repo, and it is not fetched so removing them.
losses is only a python op, and does not exist under core/ops. So removing all references for it there."
"Make VLOG minimum level can be updated via environment #6366Added changes to enable specifying VLOG minimum level. With this patch, user can specify VLOG log level to enable VLOG output, like"
"Update index.mdYou may refer to this page, right? The original link is not accessible."
Fix typo on exception messageNo description provided.
Improved support for OpenCL devicesNo description provided.
docs: add a troubleshooting section to the faqdocs: add a troubleshooting section to the faq
Improve data existence check in test_tutorials.sh: ptb_word_lmNo description provided.
R0.11No description provided.
Additional change to pull request #6014Additional change to pull request #6014
Fix Java API Typo ErrorsI think it is necessary to use capital letter when it refers to Object just like Tensor.
fix cuda DNN lib path for macddedb9e introduced an error providing a non-existent lib.
"online add worker to  Running a distributed training sessionWhen you use distributed tensorflow for training tasks, if you start your quest, it has been running for a long time. At this point you find that the number of workers to start too little, so can not be a good convergence."
Fix CUDNN extension error in configure for MacOSNo description provided.
A few more changes for release.No description provided.
Fix split_ops_test for new import conventionFixes bad merge earlier.
Branch 142140440No description provided.
Cherry pick updated TensorBoard binary and python3 bugPull request of commit 43b29aa into the r0.12 branch
"Fix bazel fetch in ./configure on WindowsOn Windows, $(bazel query //...) hangs when running in a new workspace."
_linear scope bug: use the scope if providedNo description provided.
"Fix: Remove models and core losses op from cmake build.The sources do not exist for these anymore, therefore deleting them."
Added support for AVX512 to fixed point instructions.No description provided.
Fixed typo in embedding tutorial.No description provided.
Added \Machine Learning with TensorFlow\ bookNo description provided.
"adding cupti_wrapper error solutionAdding solution instructions of #6287 to ""Common Problems"""
Merge pull request #1 from tensorflow/masterget new code from original author
"Expose DataTypeSize as TF_DataTypeSize in C APIDataTypeSize is a greatly useful utility function for allocating the
right amount of memory when using the C API for (dynamic) language
wrappers using an FFI."
Update os_setup.mdNot yet exist rc1 for windows.
Add orthogonal initializationLasagne has orthogonal initialization like in this reference and it's pretty useful (and quite intuitive: make sure random weights are orthogonal so they should tend to learn different modes in the input and not converge to being redundant).
Second order derivaties for Pooling operationsFixes #6143Fixes #6294
Added TF.Learn white paper links and citationcc: @martinwicke @ilblackdragon
Branch 141962539No description provided.
Redo: Find correct path of libcudnn.dylib on macOS.I just found that commit a62c532 overwrote my change in #5944.
Disable tutorials test in docker buildsNo description provided.
"Fix tutorials testTemporarily disable the testing of models that have recently been moved to a
separate repository, e.g., cifar10_train."
Revert \Add synthetic datasets (#5315)\This reverts commit ca29fa3.
fix 'ImportError: cannot import name synthetic'fix 'ImportError: cannot import name synthetic' error introduced in #5315
made contrib flatten layer accept tensors with dynamic shapesNo description provided.
Add cwise_op_pow to iOS makefileThis fixes issue #5990.
replace AsProtoField with AsProtoTensorContent for efficiencyThis improves throughput of gRPC worker->client fetch about 25% (116 MB/s -> 151 MB/s) as measured by benchmark in #6256
Added support for OpenCL to ApplyAdamOpNo description provided.
Update installation instructions for tensorflow-gpu. (#6231)Update installation instructions for tensorflow-gpu.
"Fix 'partition_info' crashFixes this crash by not forcing partition_info if it is None:
Traceback (most recent call last):
File ""main.py"", line 33, in
global_network = UnrealModel(action_size, -1, device)
File ""/Users/babaktr/Desktop/unreal/model.py"", line 35, in init
self._create_network(for_display)
File ""/Users/babaktr/Desktop/unreal/model.py"", line 45, in _create_network
self._create_base_network()
File ""/Users/babaktr/Desktop/unreal/model.py"", line 71, in _create_base_network
base_conv_output = self._base_conv_layers(self.base_input)
File ""/Users/babaktr/Desktop/unreal/model.py"", line 90, in _base_conv_layers
W_conv1, b_conv1 = self._conv_variable([8, 8, 3, 16], ""base_conv1"")
File ""/Users/babaktr/Desktop/unreal/model.py"", line 423, in _conv_variable
initializer=conv_initializer(w, h, input_channels))
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py"", line 1024, in get_variable
custom_getter=custom_getter)
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py"", line 850, in get_variable
custom_getter=custom_getter)
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py"", line 346, in get_variable
validate_shape=validate_shape)
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py"", line 331, in _true_getter
caching_device=caching_device, validate_shape=validate_shape)
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py"", line 677, in _get_single_variable
expected_shape=shape)
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variables.py"", line 224, in init
expected_shape=expected_shape)
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variables.py"", line 327, in _init_from_args
initial_value(), name=""initial_value"", dtype=dtype)
File ""/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py"", line 665, in
shape.as_list(), dtype=dtype, partition_info=partition_info)
TypeError: _initializer() got an unexpected keyword argument 'partition_info'"
"Remove rnn_cell.md from leftnav as it has been removed, so we can build website.website."
Moving example models from github.com/tensorflow/tensorflow to github.com/tensorflow/modelsContinuation of #6234
"Merge r0.12 back into masterThere were some documentation conflicts, but I reran gen_docs.sh to fix those."
"Disable saved_model_test from cmake builds.this target depends on half_plus_two, which is due for deletion."
Moving example models from github.com/tensorflow/tensorflow to github.com/tensorflow/modelsSee tensorflow/models#731
Update installation instructions for tensorflow-gpu.No description provided.
"Add concat_v2 to array_ops.py. Also, add gradient support for concat_…v2 op."
Fix split_v docsFixes some inconsistencies and copy/paste typos in split_v's code.
"Don't fetch sample Android app deps in configure.bazel fetch runs the Bazel loading phase on the given targets. At the
moment, the loading phase of an android_binary succeeds even if an
android_sdk_repository is not set up in the WORKSPACE. However, this is
deceptive as the purpose of the loading phase is to ensure that all
files needed for the build are present. Without an android_sdk_repository
set up, this is not the case. In the future, Bazel will likely not allow
the loading phase to succeed for android_binary without an
android_sdk_repository."
Branch 141580230Pushing internal changes
"Delete zombie codeseq2seq_test.py was deleted in cl/141309717 but added back by a
GitHub sync due to a bug where files deleted in perforce are not
deleted in the GitHub repository."
Add missing documentation of Nesterov attribute.The doc did not explain the parameter.
"Push tfdbg steppergit cherry-pick 938443b && 
git cherry-pick 5073769 && 
git cherry-pick d1c8a40 && 
git cherry-pick f37c468"
Determine output shape for SplitV OpFixes #6186Fixes #5977
"Improve  documentation for tf.split_vHi,"
"accelerate crf_log_normthe base crf_log_norm function looks very cool, but it runs very slow.
I run the experiment on cpu"
"Adding fast layer normalization GPU kernels and layer functions to tf.contrib.layersfrom issue #6146
Instead of putting the code into a new directory under contrib, I took some time and merge them into contrib/layers, because I thought it fits quite nicely there."
Corrected description for ExportStrategyNo description provided.
"accelerate crf_log_normthe base crf_log_norm function looks very cool, but it runs very slow.
I run the experiment on cpu"
"Fix tutorials failures.ptb_word_lm should work, but want to see how cifar10_train will look."
Fully disable all test/build targets that execute tensorflow during build.No description provided.
Applying Changes on CMake and Setup DocsApplying changes previously suggested by @mrry on:
"Run GPU tests on Windows with BazelAfter this change, we can run:"
Add python server stop methodAdd support for graceful server stop in python.
R0.12No description provided.
Partial Revert \Migrate tf summary ops to use tf.contrib.deprecated endpoints.This partially reverts commit c532a5b.
Disable all tests depending on *half_plus_two* genrules.This is a measure to stabilize flaky GPU builds.
"Fix bug in docs of summary.mergeFrom the code, the default collection of summary.merge should be []."
Make license available for when OpenCL support is enabled.No description provided.
Docker build: add support for python3 (#6030)No description provided.
"Adding solution for pip error with AnacondaIssue #6136.
As this is not a Windows specific problem I added the instructions on ""PIp Installation Issues""."
"accelerate crf_log_normthe base crf_log_norm function looks very cool, but it runs very slow.
I run the experiment on cpu"
Improved support for OpenCLNo description provided.
Fix issues caused by the library updateFixes were made to eliminate deprecated references in the file caused by library update. Now the file compiles as expected.
Fix Windows CPU CI linkThe Windows build badge doesn't link to the CI Job page.
"typo in the code for `tf.contrib.learn` tutorialdoing tutorial with copy-paste fails with ""accessing test_data before assignment"""
"Fix static initialization based registry patterns with shared libraries.We rely on static initializers of shared libraries of which no other
code is used to be run; thus, the shared libraries need to be linked
into the final binary. Some distributions default to -as-needed for
linking shared libraries into binaries, which discards libraries that
are not actively referenced."
"Update comments for Tensor proto tensor_content fieldAfter previous change, the current comment is still confusing. Add description about the purpose."
`ReLu` to `ReLU`I think ReLU would be better.
Update inception_v3_test.pyEasy fix.
[CMake] Add missing Python packages to build scriptsFixes Windows PIP tests after #6137.
test PRNo description provided.
[CMake] Fix support for custom kernels in `tf.contrib.metrics`.Fixes #6115. Cherrypick into release.
"[Windows/CMake] Run ctest in parallelUsing 32 parallel jobs, as we're using that degree of parallelism for the build too."
Branch 141241224Pushing internal commits.
"fix relaxed-constexpr warningThis patch should remove the warning for nvcc 7.5, 8.0 and still work on nvcc 7.0:"
Branch 141209775Pushing internal commits.
Adding extra options to Kubernetes object generator for distributed example.This enables multiple training clusters to be deployed in the same namespace.
Branch 141211730Pushing internal commits.
Branch 141125443Pushing internal commits.
Clarify about 'SAME' padding in docsFix #5203. Also use // instead of / to be consistent with Python2/3.
oops...please ignore this -- I don't know what I'm doingNo description provided.
Disable contrib/integrate/python/ops/odes_test due to timeoutThe test hangs during PIP tests on GPU (but not CPU).
Avoid const char-related warning internallyNo description provided.
[CMake] Fix support for custom kernels in `tf.contrib.metrics`.Fixes #6115.
R0.12No description provided.
[Windows/CMake] Add optimization flagsNo description provided.
R0.12No description provided.
Regenerate docs for 0.12 rc1.No description provided.
[Windows/CMake] Add optimization flagsNo description provided.
Update version string for 0.12 rc1.No description provided.
Revert \Removed unnecessary classproperty decorator\No description provided.
Branch 141100982Pushing internal commits.
add support for gcc byteoder defines to windows platformneeded to unblock #5450
"Cherrypicks into r0.12 releaseThis is wave 1, with some merge conflicts. @mrry PTAL"
Automated rollback of change 137917462Change: 141085507
R0.12No description provided.
[Windows/CMake] Support compute capability 3.0 by defaultFixes #6083.
"Fix Python 3 dict object to list, described in issue #5488It is also compatible with Python 2, converting a list to a list is a list."
Add missing parenthesisNo description provided.
fix broken link in tools_developers docsFixes #5917
"Replace 0.12.0 deprecated functions in python, contrib, and models directoriesUsed this script to get initial changes, and then cleaned up using the diff."
Replace deprecated function `all_variables()`Replace deprecated function all_variables() with global_variables()
"Fix sample code of embedding_vizAccording to projector_config.proto, single_image_dim is also SpriteMetadata field."
Change base datasets dtype default to float32So this following warning can be avoided in many examples:
Add document for secure HDFS accessingImprove HDFS accessing document and add document for secure HDFS accessing
R0.12No description provided.
"Fix rnn cell scope bug in _linearThe optional scope argument of _linear is currently ignored, as explained here: #6065"
"fix the number on ImageNet classification validation errorAccording to the three paper, Inception(https://arxiv.org/pdf/1409.4842v1.pdf), Inception V2(https://arxiv.org/pdf/1502.03167v3.pdf), Inception V3(https://arxiv.org/pdf/1512.00567v3.pdf).
Their ImageNet Classification Validation Error should be 6.67%, 4.9%, 3.46%縲"
"Update build status URLThe previous build name ""tensorflow-master-gpu_pip"" was not accurate
because the build is not a pip build. The name has been corrected to
""tensorflow-master-linux-gpu"". This change fixes the broken link in
README.md."
"Fix tutorial docsDear TensorFlow maintainers,"
Branch 140903864No description provided.
"Run python tests on Windows with BazelThe major problem with running TF test on Windows is python tests depend on too many and too big things (eg. pywrap_tensorflow.dll). Since py_test is a zip file on Windows, it's too slow to unzip for running them concurrently."
"Fix matmul() 3-D tensor example codeIt is necessary to specify an int32 dtype because the code as written
would use int64 dtype by default, and int64 is not currently supported
by matmul()."
"Fix cuda version detect on WindowsOn Windows, the name of the shared libraries is like:
cudart64_80.dll and cudnn64_5.dll@davidzchen @gunan"
"Fix bugs in configure and cuda_configure.bzl re. lib pathsSee log of failed mac build from yesterday:http://ci.tensorflow.org/view/Nightly/job/nightly-matrix-mac-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-mac/156/console"
Fixed incorrect use of NamedTemporaryFileSee http://stackoverflow.com/questions/23212435/permission-denied-to-write-to-my-temporary-file
Negative axis support for argmin and argmaxFixes #6022
replaced deprecated call to all_variables by tf.global_variables()Title says it all -> all_variables() is deprecated and should be replaced by global_variables.
"avoid tf.int32-only call to gather in moments, thereby keeping kernel on GPUFixes #6027 (tested locally)@vincentvanhoucke
Sorry for being late here. I think this might be a slightly better fix. I tested this locally, and it did resolve the cpu-gather behavior that I was seeing.@poxvoculi
I thought about it for a while, and I couldn't figure out how to avoid tf.gather completely in a reasonable manner. I hope that this patch is acceptable."
"Fix issue #6036As per the issue raised here, changed the following code to the  6_lstm.ipynb file."
Use gather on floats instead of int32 to keep the kernel on GPU when possible.gather() on an int32 type forces the op to go to CPU.Fixes #6027@liuyipei can you confirm that this addresses what you observe?
"Docker build: add support for python3new tags for py3 docker images are such as:
nightly-py3
nightly-gpu-py3
nightly-devel-py3
nightly-gpu-devel-py3"
"[Windows/CMake] Add tensorflow.models.* to the PIP package.Also runs the few tests in there, and builds the word2vec kernels."
"slim.learning.train and slim.evaluation.evaluation to handle OutOfRange gracefullyWhile doing this fix, I noticed that some of the metric operations don't handle OutOfRange gracefully also."
Update nightly links to 0.12.0rc0No description provided.
[Windows/CMake] Cherry-pick TensorBoard support into r0.12[CMake] Add TensorBoard dependencies to PIP package.
"Initialise DNNClassifier with normalizer_fnFor Contrib added option to pass normalizer_fn to DNNClassifier. This should automatically attach the normaliser to every layer in the deep neural network. Something like:
m = tf.contrib.learn.DNNClassifier(model_dir         = model_dir,
feature_columns   = deep_columns,
dropout           = DROPOUT,
normalizer_fn     = tf.contrib.layers.batch_norm,
normalizer_params = normalizer_params...)"
fix deprecation dateNo description provided.
"[loss_op]Denote the returned value is already mean, it happens quite a few tim…es that we often add tf.reduce_mean after that since tf.nn.sparse... returns loss without averaging it."
"Fix incorrect version string in gcs_test/DockerfileAlso avoid hard-coding version string in the Dockerfile.
The pip wheel is now specified as an argument to gcs_smoke.sh."
"Use correct variable scope for weights in rnn_cell._linear.If a scope is passed in it should be used for the variable scope
rather than always falling back to the default scope."
"split will move leading or trailing whitespace when sep is whitespacesplit will move leading or trailing whitespace when sep is whitespace, so strip() is useless"
Fix typo in executor.hNo description provided.
Updating CMake ReadmeAdding 0.12r updates and pip installation instructions #5942.
"Branch 140671682Manually fixed conflicts in:
RELEASE.md
tensorflow/contrib/session_bundle/session_bundle.cc
tensorflow/contrib/slim/python/slim/evaluation.py
tensorflow/core/kernels/BUILD
tensorflow/python/training/summary_io.py"
Add toolchain deps for SWIG compilationNo description provided.
"Fix: Do not use perl in configure, use only standard bash tools.No description provided."
Update 1_notmnist.ipynbNo description provided.
"[Windows] Don't try to read numa node from SysFSThis makes the behavior on Windows consistent with Mac OS X, and prevents a needless error message when using GPUs."
fix broken link in docsThis fixes issue #5978
"Translate.py - Added the option to translate a fileWith this pull request you can easily translate/test a batch of sentences, which makes it easier to see how good your trained model is."
More similar typo to #5973No description provided.
Fix #5946.Fix error in documentation about global_variables_initializer.
"fixed the argscope exampleThere was a problem with the padding offset, and inconsistent use of ""slim."" prefix."
seperable -> separablefixed grammatical error
Run cc tests on Windows with Bazel@gunan @dslomov @damienmg
"[Windows] Re-enable the special function ops.These were previously disabled under #ifdef EIGEN_HAS_C99_MATH due to a compiler error, which has since disappear. Re-enable these ops and their test."
[TF-Slim README] A few typos and latest APIsNo description provided.
"[Windows] Adds note about the MSVC DLLs to the instructionsThe standard Python.org version of Python 3.5 does not include the MSVC redistributable, on which TensorFlow depends. Add a note to the docs with the error message and a remedy."
Enable sandboxed builds for tensorflow.No description provided.
Merge release branch into masterNo description provided.
"Find correct path of libcudnn.dylib on macOS in configure script.The libcudnn file is stored like libcudnn.5.dylib on macOS, but the original script looks for libcudnn5.dylib, which would produce an invalid path error. And the issue only affects the auto-detecting part."
R0.12No description provided.
replace parser with FLAGSNo description provided.
Replace parser with FLAGSNo description provided.
"fixed run_path_pairs AttributeErrorIn python3,  dict.items() is a little different."
Replace parser with FLAGSNo description provided.
Merge pull request #1 from tensorflow/masterUpdate
Update release note for tensorboardNo description provided.
Update release note for tensorboard.No description provided.
"Fix loading of libhdfs.so when installed in non-standard directorySome Hadoop distributions do not install libhdfs.so in $HADOOP_HDFS_HOME/lib/native. For example, Cloudera Hadoop installs libhdfs.so in /opt/cloudera/parcels/CDH/lib64/libhdfs.so."
Revert \Removed unnecessary classproperty decorator\Reverts #5510 because it fails legacy usage GraphKeys.VARIABLES reported #5877.
"Add undocumented pre-required tool for building iOS library'libtool' is not mentioned for building iOS library, which will cause 'build_all_ios.sh' failure if it is missing."
"No file exists called preprocess.pyIt has been quite some time without this file existing, if there is actually a plan to work on this functionality in  Slim, then feel free to close this issue."
typo `Conv` to `conv2d`No description provided.
"Fix sandboxed buildThere are a number of missing dependency declarations, which break the sandboxed bazel build. This PR adds a few, hopefully all."
"Make placement of constants follow consumers if they are all on the same deviceA generator node (for instant a constant) will now go to the same device as its consumers, when those consumers are all on the same device.   Previously a constant would only follow its consumer when there was only a single consumer."
Fix params docstring of embedding_lookupThe first parameter of embedding_lookup actually accept a single tensor.
Update installation instructions for gpu binaries.No description provided.
Typo Fix (intialized to initialized)Just a basic typo fix I stumbled upon.
"Variable initialization method changed in tensorflow 0.11.0otherwise, variables not initialized"
Fix typoNo description provided.
Upload installation instructions.No description provided.
[TF-Slim]The latest version has `write_version=saver_pb2.SaverDef.V2` as default set…ting. And V2 is more efficient than V1.
changed global_variables_initializer lineChanged global_variables_initializer to initialize_all_variables on master.
variable_summaries(...) missing parameter 'name'Versions 0.11 and 0.10 had a parameter named 'name' on variable_summaries function but this is now missing on master and 0.12
"Update tutorial exampleCorrect bracketing in ""building the input function"" example"
"Fixed wrong documentation on ctc_beam_search_decoderThe documentation for ctc_beam_search_decoder has an error. It claims that it is equivalent to ctc_greedy_decoder when top_paths=1. This gives the impression that if we only care about the best result, we should always use ctc_greedy_decoder. However, ctc_greedy_decoder just does a simple argmax at each timestep, which is not equivalent result to a beam_search with beam_width=100 and top_paths=1."
Add load method to tf.VariableAllows loading new value into variable without adding new operations to the graph.
"[Anaconda Installation Tutorial]As in issue #5832, pip installed TF s…hould be uninstalled if one want to use TF with Anaconda environment, because Anaconda will search system site-packages with higher priority, this might result in the latest upgrade of TF within Anaconda environment inaccessible."
[Tutorial->MNIST]`write_version=tf.train.SaverDef.V2` is already the default setting i…n latest TF version
Fix typo in tutorialNo description provided.
"Fix an error in 'Adding a New Op' example codeThere is an error in the 'Adding a New Op' example code. By chance, the test code failed to catch it because only 1-D tensor is tested."
"[CMake] Add TensorBoard dependencies to PIP package.Currently, TensorBoard external dependencies (JS scripts, css, images etc.) are not part of PIP package built by CMake. As a result, when you navigate to TensorBoard on Windows, it shows a blank screen. Added CMake scripts to download TensorBoard dependencies and make them part of PIP package."
fix typo in `ScatterUpdate` docNo description provided.
Add sess.close() in document (g3doc/get_started/index.md)I read from tensorflow Session management document that
better documentation of return value of boolean_maskIt cost me 2 hours of life to debug problems I had because of not understanding how exactly boolean_mask() reshapes the tensor...
"Fix: remove the leftover delta addition in cwise_ops_test.small fix for #5810.
Should fix mac tests on master."
"Fixing bug in Adadelta implementationThe updated accum vector should be computed as:
\rho * accum + (1.0 - \rho) * grad^2,
according to Algorithm1 in Zeiler 2012 (https://arxiv.org/pdf/1212.5701v1.pdf)."
Switch back to --relaxed-constexpr for cuda 7.0 compatibility.Fixes #5799
[Windows/CMake] Some more C++ test fixesA new batch of fixes to be able to build some C++ tests on Windows.
fix typo in `tf.scatter_update` docNo description provided.
Be explicit about setting up CUDANow that OPENCL support is initiated I think makes sense to be explicit about the configuration option.
"Branch 140088698Manually resolved conflicts in:
tensorflow/contrib/learn/python/learn/datasets/base.py
tensorflow/contrib/training/BUILD
tensorflow/core/kernels/cwise_op_floor_div.cc
tensorflow/python/platform/test.py"
"Make windows gpu build project name tensorflow_gpu. (#5794)@yifeif, thanks for your PR! By analyzing the history of the files in this pull request, we identified @andrewharp, @jhseu and @mrry to be potential reviewers."
"[Windows/CMake] Enable DepthwiseConv2DNative.Fixes #5818. Also enables saver_test, which was previously disabled."
[CMake] Build Python protos after core protosEnsures that the generated code for the core protos has been generated before compiling the generated code for the Python-specific protos.
"Passing exit code of the test back to bazelScript used for parallel GPU execution does not pass the exit code of the test to bazel (always return with exit 0), so failures are shown as PASS in the summary."
Update pip file name for gpu builds.No description provided.
Manual Inception folderManually downloaded inception folder.
"Fix a bug which repeated variable creation in optimizer when using bucketingHi, all,"
"Branch 139989725Manually resolved conflicts in:
tensorflow/contrib/training/BUILD
tensorflow/contrib/learn/python/learn/datasets/base.py
tensorflow/contrib/cmake/tf_tests.cmake
tensorflow/core/kernels/cwise_op_floor_div.cc"
[CMake] Make MNIST tutorial example part of the PIP packageCherry-picking this pre-emptive fix from into the next issue of the 0.12 release.
Improved support for OpenCLNo description provided.
"A theano.clone() equivalent for TensorflowThis an implementation of a clone() function for Tensorflow based on meta_graph utilities, inspired by discussion with @sherrym in #5477 ."
Fix file system regex pattern in tensorboard serverMinor fix for the uri_pattern
"make cuDNN linux instructions copy-pastablepreviously, we were trying to cp files over directories"
Release notes for 0.12.0-rc0.No description provided.
"[CMake] Add examples/tutorials/mnist to Python package.Tutorial scripts in examples/tutorials/mnist rely on some classes to be present in the Python package, so added this directory to CMake. Also, fixed code in contrib.learn that caused the MNIST tutorials to fail on Windows."
Make windows gpu build project name tensorflow_gpu.No description provided.
[CMake] Build Python protos after core protosEnsures that the generated code for the core protos has been generated before compiling the generated code for the Python-specific protos.
Only run one GPU test at a time on windows.No description provided.
Only run one GPU test at a time on windows.No description provided.
"[Windows] Add Windows instructions to the 0.12 docs.Added some instructions for installing/building TensorFlow on Windows, and made minor changes to other docs."
Fix to ci_build.sh id command (fixes #5759)Fixes #5759
Add maximize method to Optimizer.This PR adds the convenience method maximize to the Optimizer class.
Branch 139847768No description provided.
Disable the failing test case in conv_ops_3d_test.No description provided.
Disable the failing test case in conv_ops_3d_test.@mjanusz FYI
Add missing line feed after totals in stat_summarizerNo description provided.
Add deprecation warnings to tf.X_summary ops and tf.train.SummaryWriterNo description provided.
Import Plottable css file so that TensorBoard works in FF/SafariThis is the r0.12 fix for #4856
"Fix Plottable css importing, so that TB works in FF/Safari.Fixes #4856"
Disable evaluation_test from CI.No description provided.
Disable evaluation_test from CI.No description provided.
Default optimizer initialization in the LinearRegressor fixDefault optimizer of the LinearRegressor should be set only if the users have not provided custom optimizer.
Update documentation for new API #5669Small typo in documentation #5669
seq2seq tutorial example not working for python 3.4/3.5 (#5118)This is a fix for issue #5118
"[Windows/CMake] Fix some C++ testsAfter recent changes, some enabled C++ tests do not build on Windows. This PR fixes that, plus has fixes to some other C++ tests to build under VC++. I have further fixes for other C++ tests too - will send them in subsequent PRs."
"Force precision to be float for the MNIST fully connected example.Right now, when the example runs precision is always 0 because it computed by dividing two ints and the result is always less than 1."
"Fix for the code in the tf.cond example.Small problem, however without the fix it creates some confusion when copy/pasting code to the datalab Notebook (or any other place)."
add Pillow installation into Dockerfile for fixing scipy.misc.imread …@caisq this is a new PR related to PR #5693 install Pillow in Dockerfile and PR #5711 add Pillow into docker build file. 2 changes are incorprated:
"enabling VocabularyProcessor.transform to also return document length.Currently, VocabularyProcessor.transform() ( and VocabularyProcessor.fit_transform() ) do not return the sequence length of ( number of tokens in )  individual raw documents. sequence lengths are required when dealing with variable length sequences ( eg. like dynamic_rnn where we need to also pass the lengths of individual sequences)."
Swap dictionary and tensor for readabilityNo description provided.
"R0.12Update release version @asimshankar just to check if the new string complies with all our usecases.
Adding windows GPU build script to the branch."
"Return to initialize_all_variables()Return to initialize_all_variables() instead of global_variables_initializer()
Got the following error while using global_variables_initializer:
AttributeError: 'module' object has no attribute 'global_variables_initializer'"
Update mnist_softmax.pyMove some comments to the right place.
Update r0.12 branchMerge important updates into the release branch.
"Documentation for NowSeonds and NowMillis methods have been updated.Unlike the ""NowMillis"", the new method guarantees to return the time since the epoch. This is the fix for #5682 . Also, the fix should unblock the implementation of the feature request: #2076 ."
Add Pillow installation into Docker build file.@caisq this is a new PR related to PR #5693 install Pillow in Dockerfile. 2 commits are incorprated:
Branch 139652213No description provided.
Add a GPU build script for windows.@guschmue FYI
Branch 139650649No description provided.
"change validation_metrics to MetricSpectensorflow:Please specify metrics using MetricSpec. Using bare functions or (key, fn) tuples is deprecated and support for it will be removed on Oct 1, 2016.
so run the previous code will get a mistake!"
Untag scatter_nd_ops_test now it's been fixed by CL/139592087No description provided.
Use passthrough args rather than wrapper functionsGooglers can look see this doc for an explanation of why this change is being made.
"[Windows/CMake] Avoid file locking race in protoc.In particular, we avoid regenerating the C++ protobuf implementations
for tensorflow/core proto files, because this can trigger a flaky
race when run on Windows."
Branch 139585378Internal push.
"install Pillow in DockerfileHi team,"
"Update bazel.rc.templateThis'll work better, trust me"
"change validation_metrics as  MetricSpectensorflow:Please specify metrics using MetricSpec. Using bare functions or (key, fn) tuples is deprecated and support for it will be removed on Oct 1, 2016.
so run the previous code will get a mistake!"
Replace squeeze/split with unpackIn Recurrent Neural Networks tutorial file ptb_word_lm.py I've replaced the alternative version of the code with unpack in place of squeeze and split (as in documentation).
"Ensure stochastic_tensor_test runs.stochastic_tensor_test.py was missing a call to tf.test.main() so the
test wasn't actually running. This commit fixes that and the test
passes."
tf.const now supports verification of a shape of values.If shape that is passed via the argument is not consistent with the value in the shape variable ValueError will be raised. Example:
Automated rollback of change 139483354Change: 139520847
"Fix integer overflow errorThis sample crashes if used on big text files (>2B words).
Changing corpus_size_ to 64-bit int solves the problem."
Branch 139498839Internal push.
"update batch norm layer decay param documentationUpdate decay parameter documentation in contrib.layers.batch_norm, suggest users lower decay value if experiencing reasonable training performance but poor reference performance. This PR is associated with the content discussed in issue #1122"
Fix gpu-mac test build issues with test_installation script.No description provided.
[CMake] Avoid common pitfalls in CMake build.Fixes a couple of issues that have cropped up:
Fix building for iOS #4640Seems like the reason why compilation fails does not directly related to TensorFlow or even Protobuf:
"Produce binary release tarballs for the TensorFlow C APIThese scripts are intended to be run with every release to
produce libtensorflow.tar.gz for CPU and GPU on Linux and OS X
for x86_64 architecture machines.
(Eventually there will be other operating systems and architectures)."
"0.11.0rc2 -> 0.11.0, fix broken windows cmake ci.No description provided."
Make windows test script version independent.This should fix the windows cmake build issues.
[Windows/CMake] Add more error checking to the CI script.No description provided.
"[Windows] Fix GetMatchingPaths for use on Windows.The existing implementation is not compatible with paths containing
backslashes. Use a workaround on Windows only (converting backslashes
to forward slashes)."
Fixed several bugs in the OpenCL codeNo description provided.
Disable scatter_nd_ops_test in OSS python tests until the bug is fixedNo description provided.
Branch 139339828Internal push.
Improved support for OpenCL devicesNo description provided.
"Maunally setting TF_NEED_CUDA=0 in build_tf_windows.shSoon TF_NEED_CUDA won't be False by default on Windows, we need this to make sure tf-master-win-bzl  won't fail. @gunan"
contrib/layers: Make integer check Python 3 compatibleFixes NameError: name 'long' is not defined error thrown in Python 3.
Add Windows GPU support with Bazel@mrry @dslomov @damienmg
"Fix projector_api_test, ensuring it runs.This test was missing a call to tf.test.main(), so the test wasn't being
run."
"Simplify CMake thirdparty library target namesIn order to build platform independent static libraries, we can use CMakes
builtin CMAKE_STATIC_LIBRARY_PREFIX and CMAKE_STATIC_LIBRARY_SUFFIX
variables to separate the naming convention for Windows and Unix host
systems."
R0.11No description provided.
"[Windows/CMake] Add TensorBoard.Enables some TensorBoard tests, and fixes tf.contrib so that these pass. Also removes the CMake-specific setup.py, and replaces it with the same one that Bazel uses."
"Merge release version back to master.Changes are mostly for updating version strings.
Also change TF_PATCH_VERSION in master to head."
[Windows/CMake] Enable SVD op and test.No description provided.
Branch 139215742Internal push.
R0.11No description provided.
"Enable a mechanism for filtering out log messages usingan environment variable.  Reads the environment variable
on the first call to LOG, uses it to filter out based on the
severity of the log message."
"Remove version_info.cc from framework_internalversion_info.cc was being compiled into both version_lib and framework_internal, resulting in duplicated symbols. The header version.h should also be associated with version_lib."
"[Windows/CMake] Use a more recent version of SWIGThis fixes reader_ops_test.py, which was suffering from a bug in older versions of SWIG when using Python 3.5 and a SWIG-wrapped generator object."
Renamed variable bias to pre_activationpre_activation is more meaningful.
"Add missing backticks to documentation.The formatting for extract_image_patches is missing backticks, which messes up the code vs non-code formatting."
Fix: Create a new script for gpu-mac tests.Also fix the gpu-mac test build issues with the script.
"Remove _logfile_map, _logfile_map_mutex. They are not used.No description provided."
"Fix: Change the lock file location for GPU tests./var/lock does not exist on mac, so execution fails on mac."
Branch 139105151Internal push.
Branch 139090881Push to public.
Error in Recurrent Neural Networks tutorialI was suprised to see that the two implementations of char-rnn in tensorflow I found on the web fall in the same Python trap:
Remove argv argument from tf.app.run()The second argument in tf.app.run is causing a TypeError and I think we can remove this.
"Fix CMake config if used as a subprojectWith this fix we don't assume that the tensorflow project is the build
root. Instead CMAKE_CURRENT_SOURCE_DIR/CMAKE_CURRENT_BINARY_DIR is used
instead of just CMAKE_SOURCE_DIR/CMAKE_BINARY_DIR, which now builds
successfully, if it is built inside another, larger project."
Minor corrections to \Adding a New Op\ docsNo description provided.
Allow deprecation decorator to specify ownerThis helps the following situations:
Checks that quantized Tensor's elements have type tuple.Fix for the issue #5568
Deprecated array and embedding ops in contrib.learnSame functionalities exist as specified in the deprecation description. The examples were updated though.
"Add support for decoding RGBA images in tfexample_decoder.Tensorflow's image decoding API's support RGBA images with png/raw formats, but the tfexample_decoder module cannot handle them due to an exception that is thrown when the decode_jpg() case is evaluated with channels >3. This PR works around that limitation by eliminating JPEG as a decoding option when the number channels is >3."
"Fix syntax error in UnchangedShape example codeThis is the same patch as #5566, but applied to master."
Fix syntax error in UnchangedShape example codeNo description provided.
Branch 138943977No description provided.
R0.11No description provided.
enable avgpooling for windows gpu buildsNo description provided.
Branch 138939121No description provided.
"Add string tensor tags to new summary interfaceOld/Deprecated summary ops can accept string tensors for tags. The new summary interface only allows strings for names (subsequently used as tags). This pull adds prefix option, which can be a string tensor."
"make RestoreV2() work for windowsRestoreV2() did not work because wildcard match had some issues.
Enabled RTTI for windows as well."
R0.11No description provided.
optional libjpeg-turbo supportThis is in reference to #4807.
"Add support for dict Input to DataFeeder, StreamingDataFeeder and allow for different TensorSignature for each of ModeKeysThe Estimator.fit() function takes as argument either"
"word2vec: Create directories for saving summaries, if necessary.Simple change to allow passing a directory that doesn't exist to --save_path in the word2vec examples."
"Fix inconsequential compiler warningsFixes many compiler warnings due to integer signedness issues, unused variables, missing return values and multi-line comments."
[Windows/CMake] Enable avgpooling_op.cc.Fixes #5517.
[Windows/CMake] Add support for tf.contrib.This change enables all libraries apart from tf.contrib.tfprof to be used from the CMake-built PIP package.
Branch 138793949No description provided.
Add maxout op to tf.contrib.layersNo description provided.
"Add support for broadcasting shapes.This PR adds functionality to TensorShape to allow for broadcasting. In particular,"
Added Student T CDF as per 5413See Issue 5413. I implemented & tested CDF for Student's T distribution.
Make sure to uninstall the old pip package and install the newly builtone when running windows tests on TF CI.
Removed unnecessary classproperty decoratorad of logging
Remove deprecated copy of checkpoints libThis has been deprecated for a while.
Branch 138702302No description provided.
"Remove stray text from index.mdWill replace with an include in an internal change, but for now just removing."
"Xmbrst patch 1Will replace with an include in an internal change, but for now just removing."
"Reformat markdown.@yifeif, thanks for your PR! By analyzing the history of the files in this pull request, we identified @tensorflower-gardener, @LiamHe and @tiagonj to be potential reviewers."
"[Minor] ExtractImagePatches grad fails when batch size is unknownMentioned in#5501#3672
Solution was by @mohamedadaly"
Branch 138642972No description provided.
Bugfix in gradient code for tf.image.resize_nearest_neighborThis PR prevents errors when computing gradients that involve tf.image.resize_nearest_neighbor and tensors with partially defined shapes.
"Refactor cuda_configure to better support for different CUDA installationsThis change implements cuda and cudnn version autodetection via running
nvcc --version and reading cudnn.h. As a result, TF_CUDA_VERSION and
TF_CUDNN_VERSION no longer have to be set. If TF_CUDA_VERSION and
TF_CUDNN_VERSION are set but do not match the detected versions,
cuda_configure will fail."
R0.11No description provided.
Updating CMake requirements #5487Issue #5487
Branch 138590602No description provided.
Disable flacky test contrib/slim/learning_test.No description provided.
Wait for jvm to shutdown completely before remove bazel install directory@gunan
Set TF_NEED_OPENCL=0 by default on Windows@gunan
"Fix a typo in export meta graph sample code.The sample code in How-tos ""Exporting and Importing a MetaGraph"" cause NameError: name 'saver0_ckpt' is not defined.
I think it should be 'my-save-dir/my-model-10000' to be restored in the subsequent sample code."
"Remove a premature checkpoint existence test in Saver.restore().The correct way to perform such a check is inside the Op kernel.
Change: 138212174"
Branch 138426641No description provided.
"Add ci scripts for cmake build and test on windows.Retrying without virtualenv.@guschmue  PTAL.
When it comes to batch files, I have no idea what I am doing."
Updates download_progress_hook commentUpdates download_progress_hook comment to match the behavior of reporting every 5% of change.
"Add dynamic_pad to shuffle_batchAdd 'dynamic_pad' flag to shuffle_batch as implemented in batch
Added the c++ implementation of padding_random_shuffle_queue#5147"
Branch 138409704No description provided.
"Typo, causing AttributeError$ ~/mnist $ python convolutional.py
Traceback (most recent call last):
File ""convolutional.py"", line 316, in 
tf.app.run()
File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 30, in run
sys.exit(main(sys.argv[:1] + flags_passthrough))
File ""convolutional.py"", line 123, in main
train_labels_filename = maybe_download('train-labels-idx1-ubyte.gz')
File ""convolutional.py"", line 62, in maybe_download
size = f.Size()
AttributeError: 'GFile' object has no attribute 'Size'"
Ignore tools/git/genHere you go @vrv.  For some reason my previous edit to tools/git/.gitignore just vanished; this adds it to the right place.
"[Windows/CMake] Remove dependency on zlib.dll.Instead, use the static zlibstatic.lib, as originally intended."
Branch 138387835No description provided.
"fix failed copy for op without outputs but with control outputsThis PR fixed copying op without outputs but with control outputs. This kind of op (which is common, e.g. Assert) is not copied at all before this PR.
btw, I'd like to add tests for my changes but I cannot find how to run bazel tests. There seems to be no guidance for contributions to Tensorflow."
Adding support for Linux s390xAdding support for Linux s390x. Could someone please review?
GridRNN cell uses tuples for output and states(Redo of #4631 because I screwed up the PR)
"phrase suggestion in docI am not very sure, but ""as well"" is adverb, ""as well as"" is conjunction or preposition. The ""as well as"" is used for the two nouns: the ""total loss"" and the ""speed""."
"Update 1_notmnist.ipynbI'm learning Tensorflow on the Udacity,and while I flow the course to test code,I found that the url in Update 1_notmnist.ipynb is wrong,it can't be open.After a while,I found the url in the video is different from the one in the file,so I pause the vedio and remenber the url.This url is ok and it pass the test perfectly. Thx for ur attention."
Fix misleading SaveDef V2 format warningAdding a line: Notice: the V2 format output different set of files
fix path error for libcudnn.xfix Invalid path to cuDNN  toolkit. Neither of the following two files can be found when using cuda configure
Update README.md. Wrong graph name.No description provided.
added full relative path to compile_ios_protobufThe command before and after this command have the full path. That was confusing for me and is a mistake if you ask me.
fix windows gpu buildNo description provided.
fixed the equation of the sequence increaseNo description provided.
"Pylint `disable` fixI have added # pylint: enable=wildcard-import wherever I found an unclosed disable, but only for the wildcard-import. There are many more for other parameter, including the custom definitions (g-... parameters)."
Fix windows build.Add resource_variable_ops to cmake
DONOTMERGE Create a windows batch script to run jenkins windows builds.No description provided.
Ignore tools/git/gen and fix a bash error in python_config.shb479813 only works if the new feature is used; otherwise it prints an obscure bash error.
Update version string to 0.11.0.No description provided.
"Update index.mdWe at Hewlett Packard Labs have created a plugin for TensorFlow, the Operator Vectorization Library, to more easily create custom operators in pure python and also automatically merge those operators when possible. We would appreciate a link to our project on the TensorFlow page."
Branch 138201323No description provided.
Add Kerberos support for HDFS file systemThis PR addresses #5369.
Add environment variable to configure usage of default python library pathSome changes to util/python_config.sh since release version r0.10 introduced the problem that the user is asked to choose the python library path during ./configure. The problem with this is that automated scripts / builds have no option to choose the default python library path.
Update examples/tutorials/mnist/mnist_softmax.pyThe comment is wrong. tf.softmax(y) is predicted probability distribution while y_ is the label. Check more about cross-entropy(http://colah.github.io/posts/2015-09-Visual-Information/#cross-entropy)
Revert IDCT jpeg change and nvcc flag changeIDCT change needs to be made backwards compatible until we can verify that the reduced quality for all applications (not just training) is sufficient.
Branch 138101249No description provided.
Add a .mention-bot config.Notable configs:
Create a script for building tensorflow pip package on windows using bazel.Scripts created by @meteorcloudy
Gradle change in 2.2 and sdk updateThere is a change in Gradle 2.2https://code.google.com/p/android/issues/detail?id=219732
"Fix a potential bug for android demoSize of the priority queue will decrease in every iteration, so the terminal condition will change,  but i increase in every iteration, it will lead to some problems. For example, when MAX_RESULTS = 10 and pq.size() = 4 in the beginning, after 2 iterations,  i = 2, the  terminal condition will become i < 2, but it  is wrong."
Remove hard coded file system scheme checking in tensorboard codeThis pull request addresses #5322.
Change file system FileExists interface to return StatusThe pull request addresses issue #5321.
plural should be findplural should be find
correct link to pcrecorrect link is http://ftp.exim.llorien.org/pcre/pcre-8.39.tar.gz
Merge back changes from r0.11No description provided.
#NAME?
Replace expunge with expunge_async in bazel clean#5357
Branch 137959663No description provided.
Add log1pThis PR adds the log1p function and partially addresses #3682. It also uses log1p in the computation of the sigmoid cross entropy to improve numerical stability (I had issues with rare events).
R0.11No description provided.
Changing Bazel dependenciesNo description provided.
Change sourceforge links from the unstable mirror to the primary siteThis change address this issue: #5347
Fix sourceforge links for TF external dependencies.No description provided.
Branch 137889948No description provided.
Branch 137837591No description provided.
"Implementing WriteFile OpHello,
I created a pull request which implements tf.write_file OP requested here. Please take a look."
Hessian with respect to one-dimensional tensorsThis PR adds an operation to compute the Hessian with respect to one-dimensional tensors.
Add optimizer that can perform sparse updatescontext:https://www.reddit.com/r/MachineLearning/comments/5abcd4/r161009027_scaling_memoryaugmented_neural/d9fz62u/
Consistently use bytes for git version tracking for Python3 compatibi…lity
Add synthetic datasetsThis is only one possible synthetic dataset. Following methods added + sample code:
Branch 137767898No description provided.
Add dynamic_pad flag to shuffle_batch as in batch ( ~python/training/input.py)The changed have been made as per #5147
Branch 137743425No description provided.
"Changed reference from 'eigen-latest/' to 'eigen/' in pi_examplesWith 'eigen-latest/' following error occurs:
./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1:42: fatal error: unsupported/Eigen/CXX11/Tensor: No such file or directory"
Branch 137721344No description provided.
Small header changes and a Doxygen tweak to shape the C++ API a bit b…etter.
Add atrous_conv2d_transpose python functionIssue description : #4668
[example] fix typoMay be --> maybe
R0.11No description provided.
Update os_setup.mdChanged all Cuda 7.5 to Cuda 8.0 as it is now the supported version for the pip files.
reduce_logsumexp fix for reduction_indices.  Fixes issue #5291Fix #5291
enable sparse_matmul and immutable_constant kernels for windowsNo description provided.
fixes a memory corruption on windows/gputhis fixes 2 crashes on windows. Originally part of  #5279
- fix for memory corruption: on windows use _aligned_free() for memor…y allocated with aligned_alloc()
add type info described in issue #5236A pr add the type info mentioned in #5236
Update classifier.fit()Needed to change input parameters as followed by tutorial too.
Update classifier.fit()Needed to change input parameters as followed by tutorial too.
"Fix deprecated usage of variable_op_scopevariable_scope.variable_op_scope was deprecated in commit 3d1ee95, but some of codes or documentations are not updated. This patch fixes them in favor of variable_scope."
Branch 137581645No description provided.
Fix minor error in os_setup.md.As title.
Initial support for OpenCLNo description provided.
Revert \TF Checkpoint V2: add \write_version\ arg to tf.train.Saver.\This reverts commit a1d0c8e.
adding android studio 2.2.0+ build supportEnable following features inside IDE:
Edited demo/index.htmlI have edited index.html as per issue 5247
"Update the misleading comment for cifar10.py's softmax_linear layerA fix for the issue #5251, make the comment more meaningful."
"Fix: replace deprecated nvcc flag with its replacement.Remedy for the warning:
INFO: From Compiling *.cu.cc:
nvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.
nvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'."
Branch 137452948Merging internal changes.
Fix graph_io_test flakiness.No description provided.
"Changed context creation to use primary contextReopening of PR #5196, which was issued to the wrong branch."
gemmlowp external dependency has been added to CMake.Hi guys!
"gemmlopw has been added to external dependencies.Hi guys,
I was building tf using CMake in ubuntu. I found out that an external dependency (gemmlowp) is missing from the CMakeLists.txt file. The building failed while compiling tf_core_kernels files. I just added the dependency and everything went OK."
Better ARRAYSIZE macro for tensorflow/stream_executor/platform/port.htaken from https://chromium.googlesource.com/chromium/chromium/+/master/base/basictypes.h#104
added python tools to pip_package rulesfor issue #5014
"reimplement viterbi decoding in tensorflow wayThe original viterbi decoding in tensorflow.contrib.crf is implemented in numpy way and can only be used in testing. This update reimplement viterbi decoding in tensorflow style, can provide more flexibility during model building."
Fix: For mac non-docker GPU builds fix handling of test concurrency. …(#5218)
R0.11No description provided.
Branch 137329621Merging internal changes.
Branch 137307610Merge resolution:
"Fix: For mac non-docker GPU builds fix handling of test concurrency.@mrry This should fix mac-gpu tests.@yifeif, let me test this. After that we should also cherrypick this into r0.11."
Add a GCS test to create a file and list it.No description provided.
Fix test_tutorial failure due to d9d7faSee d9d7fa2
Fix: also include dirent.h in cuda_diagnostics for compilation on mac.No description provided.
Mingmingyang patch 1No description provided.
Cherry Pick: Automatically build SWIG from sourceReviewer: @gunan
Cherry-picks for 0.11.0rc2No description provided.
"fix for issue #5169in nvcc -gencode we need to specify both sm_ and compute_, else we can not
fallback to a lower compute capability."
"Let build_server.sh take whl file URL as an input argument.This make it possible to test OSS GRPC distributed runtime in
dist_test/remote_test.sh against a release build."
"Fixed failed building of /pi_examples/label_image.Included <stdio.h> before including <jpeglib.h> because jpeglib.h implicitly requires it.
Cast 'usage' variable to 'const char*' because tensorflow::port::InitMain() function requires C-style string instead of std::string."
"Let build_server.sh take whl file URL as an input argument.This make it possible to test OSS GRPC distributed runtime in
dist_test/remote_test.sh against a release build."
"[issue#4453]Get rid of the variable_op wrapper.PR for the # TODO(mrry): Move this to where it is used, so we can get rid of this op wrapper?
in the state_ops.py"
"Changed context creation to use primary contextUsing cuCtxCreate/Destroy does not give any benefits over using primary context and is not advised by the CUDA documentation: http://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#multiple-contexts.
Moreover, it breaks interaction with some runtime API calls, like cudaPointerGetAttributes and cudaEnablePeerAccess (see section Context Interoperability in: http://docs.nvidia.com/cuda/cuda-runtime-api/group__CUDART__DRIVER.html#group__CUDART__DRIVER).
This PR changes how the context are obtained and released from cuCtxCreate/Destroy to cuDevicePrimaryCtxRetain/Release"
"Fix confusing CTC documentationFrom the docs it seems that CTC decoder have problems and it can't handle labelings like A B B, but if you will look at the code, it is not the case, everything is OK, just typo in the docs."
"Fixed typo in train api documentation""It True"" -> ""If True"". Fixed upstream as suggested by @drpngx."
Fix test_installation to skip using parallel_gpu_execute when not using gpu.No description provided.
Fix broken link to creating a Docker groupNo description provided.
R0.11No description provided.
BugfixesCan one of the admins verify this patch?
Improved mnist/convolution.py performanceNo description provided.
Fix string comparison issue in py3 for export_test.No description provided.
"Einsum dynamic shape bug fixI fixed a bug in einsum that did not allow for dynamic tensor shapes. I'm not sure if that's the only change necessary and I'm also not sure what conventions you follow to write tests for this, so since I have a paper deadline approaching I'll leave it at that for now. It seems to be working fine for me but I haven't tested any edge cases."
Fix contrib/makefile builds in 0.11contrib/makefile builds include version_info.cc twice and end up with duplicate symbols in the resulting library.  As a result none of the iOS examples work and the resulting library can't be used.
Add a GCS test to create a file and list it.No description provided.
"Fixed typo in train api documentation""It True"" -> ""If True"" in the documentation for tf.train.exponential_decay"
Fix bad var echoing introduced by #5135A minor mistake slipped through PR #5135
"Fix incorrect link for Building a Random Forest ModelReplace random_forest.py with random_forest_mnist.py, because random_forest.py is not exist."
Remove conflict include statments in port.ccI was getting errors like following when building PIP package with Bazel:
Orthogonal initializerThis PR adds an orthogonal initializer based on the paper Exact solutions to the nonlinear dynamics of learning in deep linear neural networks.
add required positional argument: 'features_dtype'method load_csv_with_header() need three positional argument.
"move type2index into EIGEN_HAS_INDEX_LIST#5127 has a small issue that type2index / IndexList is used without checking for EIGEN_HAS_INDEX_LIST which broke the windows gpu build.
This makes it build again."
Revert \extend tf.select to broadcast a scalar condition #3945\Reverts #5127
Fix merging of summaries to match the tutorial \TensorFlow Mechanics 101\The example does not work with tf.summary.merge_all(). Changing it to tf.merge_all_summaries() like in the tutorial fixes the issue.
Cherrypicks and rc2.No description provided.
for completeness that if the tarball from Alex's website is already i…n /tmp/cifar10_data/
"Fix #5143: Remove dependencies on test librariestensorflow/python:tf_session_helper has dependencies on some
test libraries. I don't believe these dependencies should have
ever existed."
"dynamic_rnn time_major=False transpose fixed for inputs of rank>3Fix for dynamic_rnn for inputs of rank > 3 when time_major=False, as discussed in issue #3882."
"Do not use non-portable `cp --parents`Mac OS cp command does not support the --parents option, so
use mkdir -p + cp instead."
Revert \extend tf.select to broadcast a scalar condition #3945\Reverts #5127
"Option to config python lib path from env varThe simplest way to give the option to configure python library path from environment variables, targeting the issue tensorflow/serving#216 about a scriptable complete configuration for tensorflow + serving."
Fix SWIG compilation across repositoriesPTAL @drpngx
Fix cmake build by restoring changes from commit c25f125.No description provided.
Merge release branch r0.11 for 0.11.0rc1 back to master.No description provided.
Merge release branch R0.11 back to masterNo description provided.
os_setup.md references \Installing from sources\ consistentlyNo description provided.
extend tf.select to broadcast a scalar condition #3945continuation of pull request GH-3995
"Made mnist tutorial data storage folder consistentmodified fully_connnected_feed.py train_dir to data_dir as other files
and made the default as /tmp/data
to avoid downloading data in the source folder."
Add test call to file_io.delete_recursively.No description provided.
Branch 136860272No description provided.
Fixes and improvements to docker build script and dockerfilesRelated to GH issues: #4116 and #4117
doc: fix possible copy&paste error in cumprod docsNo description provided.
"Fix cmake build by restoring changes from c25f125.Accidentally cmake build started depending on system zlib.
This PR fixes that."
"Branch 136793750@drpngx, thanks for your PR! By analyzing the history of the files in this pull request, we identified @keveman, @dsmilkov and @RNabel to be potential reviewers."
"Branch 136793750@drpngx, thanks for your PR! By analyzing the history of the files in this pull request, we identified @keveman, @dsmilkov and @RNabel to be potential reviewers."
Updating README adjusting to GPU supportUpdating current limitations and adding instructions to use GPU on Cmake build.
R0.11No description provided.
"Branch 136782838@drpngx, thanks for your PR! By analyzing the history of the files in this pull request, we identified @keveman, @dsmilkov and @RNabel to be potential reviewers."
Temporarily remove tests that fail running with a single GPU.No description provided.
Update doc and release note for 0.11.0rc1No description provided.
add support for fetch and feed session.run conversion functions#2068
"Do not set testonly to //tensorflow/python:construction_fails_goThis target is shipped into the pip_package so it is not testonly. Current
version of Bazel does not enforce testonly but the next version will.
Tested by building build_pip_package."
doc: fix possible copy&paste error in cumprod docsNo description provided.
"issue-4737Issue description: #4737
I test it by:"
replaced inception file with v3This is to fix issue #5007
"Fix typo in conv2d docCurrently, docs for conv2d:"
Little change in tf.contrib.learn Quickstart tutorialNo description provided.
windows specific eigen patch to enable gpu support for windowscompiling cuda kernels for windows fails. The following windows specific patch does temporarily fix this. Going to send the change also to eigen.
"Update protobuf to get fix from mrry/msvc_fixFetch the fix at protocolbuffers/protobuf#2203
I thought it was fetched at PR #4967, but turns out it didn't...@mrry"
cmake changes to enable gpu support on windowscmake changes to enable gpu support on windows. This goes on top of #5071
Use fast IDCT for JPEG decoding by defaultPlease refer to issue #4833 for details.
support for gpu on windowscode changes to enable gpu support for windows
Bump up size of gradient_checker_testSeen in this build
Change test size of gradient_checker_test from small to medium.No description provided.
"Rename examples test dir to tflearn@terrytangyuan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @tensorflower-gardener, @yifeif and @vrv to be potential reviewers."
"fixed issue #4903as mentioned in #4903,https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/setup.py#L47
it directly run main function which doesn't run the argument parser in if name==""main"".
I am not sure if FLAGS is used in somewhere else, so I moved the parser part into a function to update FLAGS in main() function."
"CMake: Set the /MP flag correctly on WindowsThis should fix the ""invalid option"" warning we were seeing in the CMake logs."
Suppress all warnings that appear >100 times in windows cmake build.No description provided.
Branch 136515806Merged by hand:
"eigen patch to enable gpu support on windowscompiling some kernels with nvcc on windows fails. A few minor changes to eigen to get pass this. I'll send a pull request to the eigen repo.
This change is required to make the following 2 work:#5051#5052"
"cmake changes to build gpu support for windowscmake changes to build gpu support for windows.
For this to work you need to have the code changes from:#5051"
"gpu support on windowscode changes to enable gpu support under windows. Tested on windows 10, cuda 8 sdk and cudnn 5.1.
CMake changes to build this come in a 2nd pull request."
Branch 136508257Merged by hand:
Branch 136497385See merge comments about conflicts with #4684 and #5009.
"Branch 136481222See merge comments, proper merge of the tensorflow/examples/skflow/BUILD wrt resnet."
Branch 136476925No description provided.
"To fix continuous build, install ca-certificates-java in docker images.No description provided."
Fix hdfs scheme parsing issue in tensorboardTensorboard HDFS support is broken because it's treated as a local relative path.
Fix hdfs scheme parsing issue in tensorboardTensorboard HDFS support is broken because it's treated as a local relative path.
Branch 136159650No description provided.
Branch 136351181No description provided.
Branch 136428122No description provided.
"Change Tensor summary to print tensor without losing shape information in outputissue description #1702
Please close this because I make a github mistake there.
Please tell me , if there exists some code format error."
Minor Python code health improvementsMinor Python code health improvements
"Fixed error with NaN an None elements in Wide & Deep Learning TutorialThere was an error after reading the dataset, looks like the last line (of the dataset) contains NaN values, giving an error when converting to integer (to generate the labels):"
cherry-picks for 0.11.0rc1No description provided.
Branch 136158550do not merge.
Fixes and improvements for Windows platform codeCan one of the admins verify this patch?
Branch 136156106No description provided.
Add basic WebDriver functional tests of TensorBoard.No description provided.
Add a resource container for sync tokens in SyncReplicasOptimizerV2.Not sure if this aligns with how resource containers are planned to be used in tensorflow. I wanted to be able to reset sync token queues without also resetting other variables defined in the optimizer.
Fix typo in xla_prerelease.mdTLA => XLA
Branch 136382518No description provided.
Remove duplicated arg description in doc stringsequence_length description is repeated in bidirectional_dynamic_rnn documentation. It looks like it split the dtype description into two sections. I believe that dtype is required if either initial state is not provided (like bidirectional_rnn) and that these changes should reflect that.
Matrix Triangular Solve GPU opAdds a GPU version of the triangular solver op using cuBLAS trsm.
Make example trainer build again@mrry
"Use an OrderedDict in convert_collection_to_dictWhen printing the dict, it's helpful to have the layers in the order they were created."
Update the version of re2 to support building with g++ 6.2.Fixes the build on Ubuntu 16.10
[g3doc] Fix image link errorNo description provided.
"Add support for dict Input to DataFeeder, StreamingDataFeeder, Estimator.fit() and Estimator.evaluate()The Estimator.fit() function takes as argument either"
Deprecated the `is_training` argument in vgg.py.This fixes #4887.
Update README.md1st push here
Add data_format option to convolution2d_transposeAdd data_format option to convolution2d_transpose.
Issue 4746#4746
"use use_default_shell_env for SWIGing actionWhen swig is in the PATH but not in a standard bin location, bazel can't
find it unless the PATH is propagated."
Branch 136231860No description provided.
Branch 136224169No description provided.
Revert \Make tutorial_example_trainer build on Windows with Bazel\Reverts #4796
Branch 136214096No description provided.
Check Bazel version in configureThis fixes #4975
Update version strings from 0.11.0rc0 to 0.11.0rc1.No description provided.
Verify file_io.create_dir and file_io.list_directory in GCS test .No description provided.
"Update protobuf to get a fix from upstreamWe already have a fix in protbuf protocolbuffers/protobuf#2246
This makes TF build with Bazel at HEAD again.Fix bazelbuild/bazel#1929"
Fix too long sentencemodels/rnn/translate.py with --decode option raises exception if input sentence is longer than 20 (default lower bound on last bucket)
Fix too long sentencemodels/rnn/translate.py with --decode option raises exception if input sentence is longer than 20 (default lower bound on last bucket)
fix some prompt errorNo description provided.
"refine quantize_graph.pydelete .keys()
no need to get keys()
just use 'in' instead"
Testing lstm gpu changesNo description provided.
"refine server.pydelete .keys()
no need to get keys()
just use 'in' instead"
"refine benchmark_test.pydelete .keys()
no need to get keys()
just use 'in' instead"
"refine specs.pydelete .keys()
there is no need to get keys()
just use 'in' instead"
"refine importer.pythere is no need to get keys()
just use 'in' instead"
"refine optimize_for_inference_lib.pythere is no need to get keys()
just use ""in"" directly"
Minor Python code health improvementsreplace is with == for len()
Branch 136105500No description provided.
"Fix error handling for when swig isn't found.Currently, if swig is not found, then the configure script fails but
does not print an error because we are redirecting the stderr of type -p swig
to /dev/null, which results in this command failing the configure script
immediately and silently before the subsequent error handling code can be
executed."
Update load_csv > load_csv_with_header for r 0.11No description provided.
"Added list functionality to registry objectVery small change which I'm personally going to find useful shortly, I think others will too."
Branch 136063535No description provided.
Make TensorFlow pip package build on Windows@mrry @dslomov @damienmg
FIXBUG: convolution use error GFile APIThis place should use Size() method.
fix comment error in mnist_softmax.pyshould be tf.nn.softmax
Branch 135971493No description provided.
Minor copyright year updateJust came across this. Not sure if the change is necessary though.
"Fixed fused_batch_norm gradientsFixed issues with fused_batch_norm as discussed in #4899, added support to 2D tensor for fused_batch_norm and added data_format option for bias_add."
"fixing go get and var namego get complained about the github.com path, splitting them out fixes it"
Updated the links in docs to match the markdown sytnax.No description provided.
Revise wrong name in RELEASE.mdI fixed wrong nickname in RELEASE.md.
Fix Mac CUDNN library path issue in configure scriptNo description provided.
Added support for new fused Winograd algorithms in cudnn 5.1No description provided.
"Fix a the bug in the doc of a tutorial for training linear modelIn this tutorial, the column gender should have two category: ""Female/Male"" not ""female/male"". See the source of datasets https://archive.ics.uci.edu/ml/machine-learning-databases/adult/."
Branch 135828145No description provided.
"[bug]unmatched quote causes big problemAn unmatched quote causes thousands lines typesetting error. Look at the api docs, from here to here has the problem, which influence almost 30 functions api docs from constant_initializer to IndexedSlices."
"Add fused_batch_norm layerAdd data_format option for convolution2d, bias_add, max_pool2d, and avg_pool2d as well. This helps to fully utilize the cudnn speed for normal convnets with 'NCHW' data layout."
"Add fused_batch_norm layerAdd data_format option for convolution2d, bias_add, max_pool2d, and avg_pool2d as well. This helps to fully utilize the cudnn speed for normal convnets with 'NCHW' data layout."
"Switch stream_executor to use portable dlopen()Use the functions from port::Env rather than dlfcn.h, to make it easier to port stream_executor to Windows."
"Issue 1702Sorry I make a mistake. I should create a branch in my repo in order to contribute.
would you please close #4873"
"Add tip to fix \RuntimeError: Broken toolchain\This issue hit me when I tried to install TensorFlow.  I checked the ""Common Problems"" page and when I didn't see this issue there I searched the interwebz to find the fix.  Only after I found the fix did I notice the helpful You have not agreed to the Xcode license agreements message further up in the Terminal output..."
Branch 135689005No description provided.
Fixed and improved ./configure on WindowsCan one of the admins verify this patch?
issue 1702#1702
"Removed orphaned declaration of extern \C\ void RegisterOps(void *)In op.h the declaration of extern ""C"" void RegisterOps(void *) was missed when removing it's implementation in e774fa8. This PR removes the orphaned declaration."
Fixed the wrong comments of `tf.scan`.No description provided.
tensorflow R0.9No description provided.
Updates to documentation of two tf.contrib.metrics functions.Can one of the admins verify this patch?
"Add zlib to the CMake build.Previously, we relied on a system-installed copy of zlib; now we build it from source and link it into the generated executables. This removes the previous implicit requirement that zlib must already be installed."
"Replace all calls to contrib.learn.datasets.base.load_csv with calls …to contrib.learn.datasets.base.load_csv_with_header and adjust tutorials accordingly, as contrib.learn.datasets.base.load_csv is not defined anymore. See https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/datasets/base.py."
Branch 135614756No description provided.
Fixed leak `_EventLoggerThread` threadsThis fixes #4820 .
Updated the links in docs to match the markdown sytnax.No description provided.
Fixed a compilation error with gcc 6.2No description provided.
"Add PIL formats(gif,png...) support for retrain.pyCan one of the admins verify this patch?"
R0.11No description provided.
"updates to einsumResolving #4722:
-- Fix bug where output indices are expected to be in alphabetical order
-- Add to docstring"
Branch 135521241No description provided.
Branch 135436451No description provided.
"Better support for initializing without explicit initializer(issue#4419)When using tf.get_variable(name='foo', shape=(42,), dtype=tf.int32) without explicit initializer, it causes the error:"
Branch 135477243No description provided.
contrib: add naturali neccessary opsIncluding lookahead ops and warpctc ops
Fix /WHOLEARCHIVE linking on Windows in Bazel build/WHOLEARCHIVE has a bug linking static library compiled from empty source file.
Supported `tf.float16` in `tf.decode_raw`.This fixes #4782.
Fix configure script readlink incompatibility on Darwin.#4699 introduced a change that broken the build on OS X since readlink works
Update configureb/31910117
Change to use contrib.tfprof since write_op_log is already exposedNo description provided.
"Adjusted buffer size to reduce memory usage and increase performanceThis small tweak to the im2col buffer size shows improvements in some of our benchmark's latency, and reduces overall memory used."
Branch 135386248No description provided.
[Windows] Fix build by avoiding use of non-standard 0-size array.Fixes #4798.
"Updated the links in docs to match the markdown sytnax.Refer to markdown syntax,
the [ should come after ) without spaces or new line character. This fixs
the broken links when generate PDF/EPUB books by Gitbook."
"Make tutorial_example_trainer build on Windows with BazelWith these changes, we are able to build the C++ example trainer bybazel build --host_cpu=x64_windows_msvc --cpu=x64_windows_msvc -c opt tensorflow/cc:tutorials_example_trainer
with Bazel from HEAD on Windows.
I modified the BUILD files carefully, hopefully it won't break TF build on other platform.@mrry @damienmg @dslomov"
Fix types in create_vocabulary (translate model)I encountered this bug when going through seq2seq tutorial - https://www.tensorflow.org/versions/r0.11/tutorials/seq2seq/index.html#neural-translation-model
Branch 135327887No description provided.
Overwrite the target file in HDFS Rename operation; it removes the ta…rget file first if it exists.
Update link to doc for linux.Update link to doc for linux.
Typo in the README fileTypo in the README file.
Branch 135176011No description provided.
Fix: Update nightly links in readme.md.No description provided.
contrib/quantization: Do not open dot file in binary modeThe Python 3 documentation states:
"Initial support for building TensorFlow on Windows (#17).This PR contains an initial version of support for building TensorFlow
(CPU only) on Windows using CMake. It includes documentation for building
with CMake on Windows, platform-specific code for implementing core functions
on Windows, and CMake rules for building the C++ example trainer
program and a PIP package (Python 3.5 only). The CMake rules support building
TensorFlow with Visual Studio 2015."
"bug fix when iterators stops at multiple of batch_sizeIn contrib.learn framwork,  Estmator.fit() supports x, y and batch_size arguments where x and y could be iterators/generators. However, when iterator finishes right at the edge, after exactly integer multiple of batch_size, a run is made anyway with batch_size = 0. This causes NaN errors with following code snippet."
Fix python3 encoding issue with data format stringThis fixes the python 3 issue found by @gunan in #4411.
Branch 135176011No description provided.
Added changes to scoping to the release notesThe changes to name scoping and variable scoping are important breaking changes and should be listed as major changes.
Patch 3No description provided.
"contrib.seq2seq initial commitAs advised by @lukaszkaiser from #4686, initial commit of the tf.contrib.seq2seq folder."
Fixed some typos.No description provided.
Fixed state test in StackBidirectionalRNNOne of the tests for StackBidirectionalRNN as not correct. Fixed.
"Use std::ptrdiff_t in place of POSIX-specific ssize_t.The type ssize_t isn't defined on all platforms, but we use it in core/lib. std::ptrdiff_t seems to be the closest standard equivalent."
fix comment in notebookNo description provided.
"Added Gitbook support for the documents.This fixed #3810. This patch added a script to generate SUMMARY.md
for Gitbook and then we could use Gitbook to generate the documents in
pdf or epub format."
Added changes to scoping to the release notesThe changes to name scoping and variable scoping are important breaking changes and should be listed as major changes.
Add libcurl dependency to gcs_test DockerfileNo description provided.
Branch 135053757No description provided.
"Use scope name instead of scope tensor in output collectionsStart from version r0.11, because of the change in variable_scope function, it breaks the collect_named_output function. Instead of using scope tensor, use scope.orignal_name_scope."
Add KL divergence for Categorical and Beta distributions.No description provided.
"Fix python bath in python_config scriptWhen runing ./configure, two places in the script python_config try to invoke python but don't use the python-related environment variable PYTHON_BIN_PATH. So it will cause the error that can't find python during configuration."
"check_version: fails if native.bazel_version is undefinedThis feature is in Bazel since 0.2.1, TensorFlow requires 0.3.0
at least and should error out if the feature is not present."
"Correct height/width ordering to mnist docsNot that it matters much, but I believe these two are swapped. Correct me if I'm wrong, but when convolving in only one dimension, I had to reverse the two in order to get good classification for a dataset."
Adding missing moduleIn the library testing section the PIL module was missing
"small typo fix""matlotlib"" should be ""matplotlib"""
change syntax of curl & tarWas throwing syntax error on osx 10.10
Documentation for creating language bindings and shape inferenceRequest to merge documentation updates from master into the 0.11 release branch.
fix spelling errors in commentsNo description provided.
Fix typo in comment.No description provided.
Branch 134847453No description provided.
"Fail configure script immediately on error.For lines such as default_python_bin_path=$(which python), add a || true
expression so that if the executable does not exist, the command will not exit
with a non-zero exit code, and the variable will be set to an empty string."
Enable to pass feed_fn to fit methodThere was no way to use fit method to pass feed_fn.
Refactored CMake rules to reduce redundancy.A step towards concentrating the platform- and compiler-specific code in one place.
Merge release branch back into master.No description provided.
Small fix about cuDNN version in release.md.No description provided.
Merge r0.11 branch to get any fixes in the branch.No description provided.
Small fixes to RELEASE.mdNo description provided.
Fixed documentation for batch_normalizationFixed batch_normalization part of the nn python Documentation.
Fixed documentation for batch_normalizationFixed batch_normalization part of the nn python Documentation.
dynamic_rnn_decoder initial commitIn the raw_rnn @ebrevdo mentions that raw_rnn would be suitable to build a dynamic decoder with.
"Fix skflow resnet example to work on v0.10.0I tried to run resnet.py skflow example on TensorFlow v0.10.0,
but an error occurred."
Issue #4244Feature request: Docker image build (parameterized_docker_build.sh) lacks option for AVX2 optimization #4244
dynamic_raw_rnnWorking example of the recent raw_rnn by @ebrevdo .
"Generate additional cudart linkopts in cuda_configure.Currently, the target @local_config_cuda//cuda:cudart_static contains aselect() condition that references the @//tensorflow:darwin config
condition."
"fixing image loading error, autocomplete with ipythonAdding Pillow, pyreadline to fix image loading error, autocomplete with iPython"
Fix stddev computation in TensorBoard examples. (#4054)No description provided.
"Added scikit-learn, pyreadline, and PillowThe dockerfile has a few problems on my Mac os10.11.
Needed scikit-learn, and pillow to run 1_notmnist.ipynb
ipython auto complete isn't working, added pyreadline fixed it."
Branch 134734156No description provided.
"autocomplete and image read fixAdded pyreadline to enable ipython autocomplete
Added Pillow to fix an image loading error"
Branch 134731106No description provided.
"link to better jupyter notebook previewAs mentioned in the deep dream tutorial readme the jupyter notebook preview on nbviewer is better than the one on github. Specifically, github removes the network graph visualizations."
"Fix gcs_test issues@caisq, thanks for your PR! By analyzing the annotation information on this pull request, we identified @martinwicke to be a potential reviewer"
Make whl file URL in dist_test Dockerfiles configurableNo description provided.
Branch 134608953No description provided.
Add cuDNN 5.0 support to release notes.No description provided.
Update instructions for installing protobuf package.To triage #3856
Documentation updates for 0.11 release.No description provided.
Fix stddev computation in TensorBoard examples. (#4054)No description provided.
Resolve python 3.5's urllib dependency in abalone-tutorial.Replacing urllib with six.moves.urllib enables this tutorial for Python 3.5.
"GridRNN cell uses tuples for output and statesIn response to this (#2560) and recent changes in LSTMCell, this PR added state_is_tuple=True and output_is_tuple=True into the constructor of GridRNNCell:"
fix issues in \nn_layer()\ and \cross_entropy\Can one of the admins verify this patch?
"Resolve urllib dependency for py3.5After this pull, <..>/tutorials/estimators/abalone.py works with python 3.5."
spelling mistake of hight is fixedAt link https://www.tensorflow.org/versions/r0.10/tutorials/image_recognition/index.html
Update gradiesnt_descent.pyNo description provided.
make variable_scope accept empty string as name_or_scopeNo description provided.
Fix typo in 'normalization'.This pull fixes a typo in explanations of examples/tutorials/deepdream/deepdream.ipynb.
fixed link to queues.py in slimNo description provided.
Remove RE2 from the CMake build.It is no longer used internally.
Updating estimators to return the directory of the export.Cherypick request to r0.11
"optional arguments should be optionalthe input_op_fn appears to be optional (it has a default value), but the default value is trash and causes the function to crash with a less than useful argument."
Branch 134473452@gunan fyi
Branch 134471468No description provided.
Make TF_OperationGetAttrMetadata externTF_OperationGetAttrMetadata should probably be extern as the rest of the functions.
corrected comment in simple_placer concerning  step 2 in placement algorithmNo description provided.
get EIGEN_VERSION from workspace.bzlperhaps a better fix for #4575
Update farmhash commit hash to point to the farmhash's version that a…dds support for ppc64le architecture
Update optimizers.pyNo description provided.
Branch 134346700No description provided.
Branch 134301156No description provided.
"Doc: update README iOS instructions [skip ci]Automake seems to be required to build on MacOS 10.11.
Add instruction to the dedicated README to install this dependency."
Support older versions of gitThe Parameter -C is unknown in git 1.7.1 but --exec-path= can be used.
"Temporary workaround for iOS build problemThe download_dependencies.sh script fails, because the pattern it's searching for in workspace.bzl has changed but the workspace file itself hasn't been updated yet. This is a minimal fix to allow users to continue building for iOS until we get the syncing issue sorted out."
upgrade protobuf to 3.1.0No description provided.
[tutorials] Fixes code styleNo description provided.
"fix Gfile method size() to Size()Gfile object has method Size(), not size()"
"Add camera permission for iOS 10To avoid shutting the  application down on iOS 10,
adding NSCameraUsageDescription to Info.plist is necessary."
"Fix header path of iOS examples for eigenI failed to build iOS example projects.
It seems download destination path for eigen library is changed
from tensorflow/contrib/makefile/downloads/eigen-latest
to tensorflow/contrib/makefile/downloads/eigen.https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/makefile/download_dependencies.sh#L49"
"Fix to download eigen libraryURL for eigen library is extracted from tensorflow/workspace.bzl,
but expression is used to construct the URL in the code,https://github.com/tensorflow/tensorflow/blob/master/tensorflow/workspace.bzl#L22
so extracted URL using simple grep is not correct."
Cherrypicks for r0.11rc releaseNo description provided.
"[issue4339]Add adjust_gamma for imageAdd ""Gamma Correction"" Image Adjustment issue4339 according to scikit-image adjust_gamma"
Update version string to 0.11.rc0No description provided.
Fix cmake/external to use new include paths.Fixes the breakage from #4555.
Make division_past_test mediumIt's flaky with 60s timeout.
Branch 134070499No description provided.
Update os_setup.md cuDNN install instructionsTo install cuDNN:
Fix recently-introduced bug in ci_build.sh re. cmake buildsCommit 4316aeb inadvertently made cmake builds depend on bazel. This PR removes this dependency.
Branch 134001275No description provided.
"Portability improvements for CMake build.@mrry, thanks for your PR! By analyzing the annotation information on this pull request, we identified @lilac, @ebrevdo and @benoitsteiner to be potential reviewers"
"Update gitignore./tensorflow/tools/git/gen/ would be generated during build and it
should be ignored."
"Update seq2seq tutorialThe seq2seq tutorial still refers to models/rnn/seq2seq.py, but it has been moved to tf.nn.seq2seq (python/ops/seq2seq.py) on master"
"make text in word2vec tutorial match imageThe embedded image has male-female, verb tense, and country-capital, so the text should too."
Added colocate gradients argument to optimize_lossThis PR adds a colocate gradients argument to optimize_loss which is useful for multi GPU training where the model is split across multiple GPUs.
Develop device frameworkBeginning of solution to Issue #4359
Fix docs for tf.zeros and tf.onesQualify types.
"adding flake8 configIf you are going to use 2 spaces instead of four, at least reconfigure the
linter to not complain."
"Adding support for Linux s390xWe have added support for Linux s390x platform( big endian ) in TensorFlow.
Could someone please review?"
"Fix symbol duplication for iOS on Xcode/clangI tried to use Tensorflow on iPhone.
I successfully created library files for iOS (libtensorflow-core-*.a)
using tensorflow/contrib/makefile/build_all_ios.sh."
Branch 133795652No description provided.
Updating CallWithRetries to do exponential backoffCan one of the admins verify this patch?
Tag classifier_test as manual for now to unblock nightly buildsNo description provided.
Disable flaky rendezvous_testb/30476344
Add manual tag to dnn_sampled_softmax_classifier_test for now to unblockbuilds
"Fix gif build on WindowsIt fails on Windows because ""'unistd.h': No such file or directory"". ""unistd.h"" is included in some source files but never used. I can manually comment out these includes then the target is buildable. Since it's a new_http_archive, the only fix I can think of is to write a genrule to remove those include statments
Ideally, we want the include could be configurable, but that's not true in the source code yet. @mrry @damienmg @dslomov"
"Fuse MirrorPadding into Conv2D to reduce memory usage and decrease latencyThis is similar to the work for fusing bilinear filtering into Conv2D, but this version supports nearest neighbor lookups as part of im2col, so that mirror padding without a bilinear resize present can be efficiently fused."
"A typo word on you websiteOn you website, you typed east instead of each, version r0.10"
WIP: DO NOT MERGE: Upgrade numpy to 1.11.0No description provided.
Branch 133630671No description provided.
"Add auto-generated version_info.cc to .gitignore.This file is generated in-place during the CMake build, which risks it being checked into the repository."
"Revised CMake rules for SWIG wrapper generation.Instead of generating a separate python_deps.so and _pywrap_tensorflow.so, we now generate a single _pywrap_tensorflow.so containing the entire runtime, like the Bazel build. This simplifies the linkage on other platforms."
Fix path for `get_regularization_losses`No description provided.
"[mnist]Fix the array type bugFix the PS_ARRAY and WORKER_ARRAY  bug. They should be arrays, but in fact they are strings. The problem is the wrong way for assigning bash array.
The log info before fixing:"
"[done] update zeros_initializer()I'm reading source code this day, and I find there is a #TODO in array_ops.py saying that move zeros_initializer() to init_ops.py."
"Fix farmhash build on WindowsI tried to add windows config_setting in tensorflow/BUILD, but it's not accessible from external library, so I had to add into every relevant BUILD file. @mrry @damienmg @dslomov"
Improved iOS camera example and binary footprint optimizationsThis PR has a variety of cleanup changes and fixes to help demonstrate advanced features of iOS development like memory mapping and loading retrained models. It also includes some related changes that help shrink the binary footprint of the final executable on iOS.
"Make grpc buildable on Windowsgrpc++_unsecure needs zlib to build, adding @zlib_archive as a dependency"
"contrib/quantization: Open file in binary modeThis fixes the following error:
UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 53: invalid start byte"
Set re2 repository commit to the latestThis makes re2 buildable on Windows with MSVC toolchain. @mrry @damienmg @dslomov
Fixed ./configure on WindowsFixed some configuration issues when building tensorflow on Windows. @mrry @damienmg @dslomov
"Fixed cuda_configure.bzl for Windowscuda_configure is the first blocker when building tensorflow on Windows. We shouldn't even run cuda_configure if cuda support is not enabled, but this patch could unblock us easily. @mrry @damienmg @dslomov"
"Fix to run on Xcode 8.0Xcode 8.0 shows its version code as Xcode 8.0 (no micro version)
so the version check failed,
because 80 is less than 730."
Update artifact version in gcs_test DockerfileNo description provided.
WIP: DO NOT MERGE: Remove pylint whitelist from ci_sanity.shNo description provided.
"Fix cmake files for highwayhash and re2.Tested via the following:
$ cd tensorflow/contrib/cmake
$ mkdir build
$ cd build
$ cmake ..
$ make"
"Add a collections attribute to node_defThis updates add_to_collection method in the Python API to update (or create) a ListValue of collections in the attr map of each node def. This has been prescribed by @jameswex to solve Issue #3495, in order to have tensorboard show the collections that a node belongs to in the node info box."
Fix stddev computation in TensorBoard examples. (#4054)No description provided.
"Update example link in the docs preprocessing sectionThe preprocessing logic has moved to cifar10_input.py. This tiny PR updates the docs link, fixes #4358."
Update artifact version in tools/dist_testNo description provided.
Update artifact version in tools/dist_testNo description provided.
Branch 133403718No description provided.
Branch 133399050No description provided.
Branch 133345765No description provided.
Add gradient to BiasAddGrad op.A rather inelegant solution to fix #4174.
"[docs] Fix formatting-related issues and address #2083Improving tensorflow/g3doc/get_started/os_setup.md by enforcing 80-char width limit, which is widely used in docs, removing trailing whitespaces and adressing point 2 from #2083."
Support Python 2 and 3 in notebooksSupport Python 2 and 3 in notebooks
Deal with 1d shape in variance_scaling_initializer.Fixes #3825.
Deal with 1d shape in variance_scaling_initializer.issue#3825
"update and fix problem in API doc.The parameters in bounding box should be [y_min, x_min, y_max, x_max]"
Update bazel version in devel dockerfiles.This should also fix nightly docker breakages.
Update README.md to refer to 0.10.0 nightly images.No description provided.
"proper message for new contributorThere is a space left between ""howto""
Also, it will be better if you write as ""getting started"""
Set operation name in SyncReplicasOptimizer.apply_gradients.The name in SyncReplicasOptimizer.apply_gradients and ( SyncReplicasOptimizer.minimize ) was not being used for some reason.
correct batch_norm docstringIn response to #4361
Branch 133202022Pushing internal changes.
Update Dockerfile.gpu to use Tensorflow 0.10.0Tensorflow 0.10.0rc0 was compiled against CuDNN v4. Previous Dockerfile wasn't working.
"Removed duplicate section in Tensorboard READMEThere were two sections present, both talking about multiple/distributed summary writes. The sections were almost identical. I have removed one of them."
"List of 2Ds -> 3D Tensor, seq2seq_lossUse full tensor and reshape instead of evaluating at every timestep, computationally more efficient and faster. Further, handles None in sequence length and raw_rnn style RNN classes does not work with a list of Tensors."
fix comment grammarNo description provided.
"added einsum op and allow more broadcasting dimsThis was meant to solve: #175
And I think it addresses this too: #1519"
"Update Makefile-Wl,--no-whole-archive added fixes #3139
-Wl,--allow-multiple-definition no longer necessary
Only changed the Linux configuration because i can only test that, but could be applicable to Android too"
Remove deprecated load_csvNo description provided.
Remove deprecated learn.opsThese ops are deprecated and users need to use ops in contrib.layers instead.
"Typo fix in Android Example (gradle)It seems like the t is a mistake, although it may be a feature which I'm unfamiliar with."
"[Test]Fix the array type bugFix the PS_ARRAY and WORKER_ARRAY  bug. They should be arrays, but in fact they are strings. The problem is the wrong way for assigning bash array.
The log info before fixing:"
Change protobuf::uint64 to protobuf_uint64 in tensor_coding.ccNo description provided.
Fixed DeepDream example for Python 3.5The DeepDream example currently fails on Python 3.5 with
"Fix to allow compilation for Android API 19This is a (very) small change to allow compiling TensorFlow for Android API 19. Without this change, you get tensorflow/core/platform/posix/net.cc:44:51: error: 'errno' was not declared in this scope when compiling the example Android project with the WORKSPACE android_ndk_repository parameter api_level set to 19. This change resolves that error and allows compilation for this target."
Branch 133020769Pushing internal changes.
Changes in default valueNo description provided.
Branch 132956583Pushing internal changes.
"Add code to close sessionHi all, I read the tensorflow tutorial and find that we must close session when finishing using it. However, when I review the code in cifar10 tutorial, I find that in some files,  there is no sess.close() line. I don't know whether it's a function of tf.app utilities, so I add the session closing code and make you know about this issue.  Hope this can be helpful."
Merge release branch r0.10 back into master.No description provided.
DO NOT MERGE: Change GPU test to use cuda8. Update docker ubuntu to 16.04.No description provided.
[DO NOT MERGE]R0.10No description provided.
"Add Substr OpAdds the tf.substr Op, as proposed in #4232. Once merged, work can continue on the tf.decode_image Op (#4009)."
[mnist]:Delete the unused domain namesDelete the unused domain names of ps and worker.
Updated the documentation for Pi building to address malloc bugThis is a docs-only change to address #3442
Remove autoencoder estimatorReasons for removal:
add an `is` to make it a sentenceNo description provided.
Minor corrections on comments in census_widendeep testNo description provided.
Increase the maximum number of images per classIn the transfer learning example the maximum number of images per class is limited to 65535. There is not even a warning if the number of images exceeds it.
WMT en-fr training corpus filename changegiga-fren.release2.fr.gz file has been renamed to giga-fren.release2.fixed.fr.gz
"Pass through -fno-canonical-system-headersThis fixes the critical build issue #3743. After I figured out what was causing the issue, I couldn't really get a discussion of possible solutions going. I figured I would just go ahead and create a PR with the simplest and most immediate fix to get the ball rolling."
changed file name in WMT translation demo #4122Will resolve No such file or directory error.
Add PIP package creation to the CMake build.No description provided.
Branch 132710890No description provided.
Documentation for Adding New HardwareAdding documentation about the internals of TensorFlow.
Add doc of conv3d_transposeThis PR add the API doc of conv3d_transpose.
Develop newhardware docsAdding documentation about the internals of TensorFlow.
Add CUDA compute cap support of 3.0 for gpu.develSee discussion in #4048
Add -D_FORCE_INLINES to nvcc optsFixes #4103.
fixes load_csv_with_header to respect features_dtypeand removes unnecessary code in load_csv_without header
"Fix a typo in g3doc/how_tos/tool_developersAdd `()' after f.read so we pass a string rather than a
function."
MasterInstall numpy from pip
Added missing files to makefileThis fixes a build error with the makefile process.
Create ADOPTERS.mdNo description provided.
Force clean+fetch when re-running configure with different settings.Fixes #4105
Cherry-picking r0.10 fixesNo description provided.
"Fix type error in python_config.shIn the getsitepackages code path,
library_paths is a list.
Make the distutils code path a list as well.
Remove extraneous whitespace while we're here."
uint16 was missingNo description provided.
"convolution2dexplicit use ""is not None"" for activation_fn, normalize_fn and provide more detailed description"
Update OS setup instructions with the new protobuf pip wheel files.No description provided.
"Fix the issue#4138Fix the issue #4138
Redefine the w and w_t for improving the efficiency in case of handling sparse IndexedSlices objects"
WIP: Update OSS protobuf git depedency version to 3.0.2from 3.0.0-beta-2
Update OSS protobuf git depedency version to 3.0.0from 3.0.0-beta-2
Exclude external/local_config_cuda from being built into the PIP packageFixes #4261
"Fix Make build under Linux (Ubuntu)@ic, thanks for your PR! By analyzing the annotation information on this pull request, we identified @martinwicke, @tensorflower-gardener and @vrv to be potential reviewers"
issue #4252tensorflow/contrib/makefile/tf_pb_text_files.txt missing a couple of items.Issue #4252
"Bug in decodeNeed to change the batch_size before create the model. Right now, the model has placeholders for decode to be [batch_size]. It should be 1."
R0.10No description provided.
Improve documentation about custom GPU op compilationFixes #4050. See issue for discussion.
Fix typo 'sttdev' to 'stddev'(2) (in how_tos/summaries_and_tensorboar…d/index.md)
Branch 132376998No description provided.
Update installation instructions to use cuDNN v5 across builds.No description provided.
Fix bazel dependency failure for non-standard cuda toolkit pathArchLinux cuda package puts the toolkit to /opt/cuda without symlinks (no /opt/cuda-7.5 etc).
Fix nightly docker buildsNo description provided.
fix typo(sttdev-->stddev) in image_retraining/retrain.pyNo description provided.
merge master (2ab7e6326) into go branch and fix buildThis merges master into the go branch and fixes up the build along the way. The build just needed the new filepaths to the C API header. And I ran go generate to get the latest protobuf.
"Add decode_image OpFor #4009: Automatically detects whether the bytes passed in are JPEG, PNG, or neither and returns a decode_jpeg op, decode_png op, or ValueError respectively."
"Fix 'sttdev' to 'stddev' in tutorial(mnist_with_summaries.py)When I study the tensorflow recently, I found the wrong characters of the summary directory in tutorial code."
Merge Changes from Internal: Branch 132225803No description provided.
Fix nightly build link in READMEThe nightly build link for Linux / GPU / Python 3.5 linked to a wheel for version 0.8.0 for some reason.
Removing deprecated moduleNo description provided.
remove redundancy in moment opsWe subtracted the shift twice for both the first and second moments. Removing one subtraction slightly improves batch_norm performance.
Add -O2 to the adding an op HOWTOBased on a request from StackOverflow where a user observed that the same code compiled following these instructions is 10x slower than code built as part of the binary installation.
Fix typoNo description provided.
"Fix a bug #3994I have fixed the bug#3994. So, now, we can use Variables as gradients with the update.
Check if gradient is tf.Variable:"
Fix a typoNo description provided.
Documentation updates for r0.10(non-rc) release.No description provided.
Push from internal.No description provided.
Use valid GPU for allocating CUDA host memoryThis PR fixes (again!) issue #1888.
Push from internal.No description provided.
Make wide_n_deep_tutorial.py work on Python 2 and 3Use the six.moves module as suggested by @mrry to make this work with Python 2 and 3
Improve performance of tokenization for seq2seq/translationby reducing compilation time of regular expression
Push from internal.No description provided.
"Fix bazel warnings by using their official names in the other repo WORKSPACEUpdated the commits to points where they have this new name.  highwayhash update also
might include windows support, which is a bonus."
TensorFlow: remove no longer needed third_party/boringssl files.No description provided.
Update the version string to 0.10.0No description provided.
Add more capabilities to the CMake buildThis commit includes changes that enable the following:
Update installation instructions to use cuDNN v5 across builds.No description provided.
R0.10Upgrade to cudnn5 and point deve docker image to the correct cudnn location.
Push from internal.No description provided.
add specialized size_t comparison macros to reduce number of warningsNo description provided.
[WIP] Embed git version into open source build (for review)TODO(aselle): DO NOT MERGE
"[wip] 4d image opsContinuation of #3566 - I decided to change to master branch, since I needed some stuff that wasn't in r0.9."
"remove XCode 7.2 instructionsAs of CUDA 7.5.27, CUDA is working with Xcode 7.3. We no longer need the 7.2 instructions."
"use 'typedef' instead of 'using' to compile on gcc4.8.2Currently, gcc 4.8.2 complains with the following error message:"
"improve error message when a category is emptyWhen a category has no images, the error message doesn't display which label causes it:"
set attr num_sampled <= range_maxFor Log Uniform Candidate sampler the num_sampled cannot be more than the range_max as mentioned in #4112
Fix bug where TensorBoard will crash if it can't determine host ip addressNo description provided.
update reader._file_to_word_ids_file_to_word_ids throws a key error if there is a word in the validation or test data that doesn't exist in the training data.
"Merge TensorBoard 28 into r0.10This includes many bugfixes, and some new features, like better smoothing and log scale option for the event plots."
Branch 131878651No description provided.
Remove unused cache files from Docker imageCloses #4116
Branch 131799027No description provided.
"lstm code example clarificationotherwise the probabilities variable changes every iteration, preventing us from ""predicting the probabilities of the possible continuations of the sentence"""
"add Rint operationBased on previous work: https://github.com/tensorflow/tensorflow/pull/1288/files
and from a comment on #3730. Fixes #3730."
Clarify that Mac works with cuDNN5.No description provided.
Issue3963Added threadpool.h to the BUILD script so it can be installed in the public #include directory with a binary pip install. Fixes issue #3963
Use canonical cuda include directory path in CROSSTOOL.Fixes #3985
tf.nn.conv2d_transpose doc fixNo description provided.
"Clearer rank mismatch error message...logits rank (received %s) - 1.
The - 1 is confusing for readers, can be mistook for em-dash instead of a subtraction. Also made overall wording more reader-friendly"
"Update deepdream.ipynbIt would be better if ""from future import print_function"" occurred at the beginning of the code."
modify scatter_update to hack variable initialization checkFixes #3373
close opened file descriptors properlyCalling fclose() will ensure the file descriptor is properly disposed of and output buffers flushed so the data written to the file will be present in the file on disk.
Branch 131437591No description provided.
"Add some more info in ISSUE_TEMPLATE.md, some text cleanupClarifies what kind of issues should be reported and what we will close, asks people to try searching on the web for similar issues first, asks for a minimal reproducible example."
Fix a lost wakeup bug in `Notification::WaitForNotificationWithTimeout()`(Cherry pick for r0.10 branch.)
Branch 131404637No description provided.
"Use auto-detected gcc host compiler include paths in CROSSTOOL file.This change removes the hard-coded cxx_builtin_include_directory entries and
instead generates cxx_builtin_include_directory entries using the compiler
include dirs detected using get_cxx_inc_directories."
Fix typo in README.mdNo description provided.
"Deprecate parameters from tf_workspaceThere is no need for either of those parameters, use Bazel label
resolution instead."
Fix stddev computation in TensorBoard examples.No description provided.
549 unsorted segment maxadded unsorted segment max. Fixes #549.
Feature/index based unpooling 3No description provided.
"Fuse resize and mirror padding ops into convolutionsSpatial transformations like padding and bilinear resizing can be merged into the im2col stage of conv2d. This reduces the memory usage considerably (from 338MB to 224MB) and latency (by 15%) on some models, and helps us avoid OOM crashes on iOS. This PR has all the changes needed to fuse these particular ops, including the kernels themselves and integration into the optimize_for_inference script."
"Switch 'friend class DimensionOrConstant' to use struct, to match act…ual declaration."
Branch 131308917No description provided.
Fix flaky test: Add small absolute tolerance so test with expected zero outputs do not fail.No description provided.
Cherry-pick into r0.10 cuda configure fix and gif.BUILD missing headersNo description provided.
"fix small typo in contrib.metrics.confusion_matrix docs, and use less… confusing variable"
Fix docker tag step in parameterized_docker_build.shNo description provided.
Disable export_test in OSS builds temporarilyhttp://b/31032996
R0.10No description provided.
cuda_configure: Use env variables that match those used in configure scriptIssue #4002
Branch 131232000No description provided.
Branch 131182216No description provided.
"Add PSGLD optimizerI add an algorithm, Preconditioned Stochastic Gradient Langevin Dynamics (PSGLD), for training optimization, which"
Consider that arg keep_prob to dropout might be an intCalling
Register missing gradient for tf.nn.max_pool_with_argmaxRegistering the gradient should fix issue #1793.
Fix DFS in quantize_graph.pyMark nodes as visited before recursing into their children to avoid infinite loops (e.g. when quantizing graphs using tf.dynamic_rnn construction).
"Change device_setter.py for choose ps deviceAdd arguments ""ps_device_name"" for replica_device_setter(), in order to choose ps decive .
Reference the issue#3762"
Update tf_op_files.txt to add tile_6.ccTo fix makefile
Disable tf_stream_executor in the CMake build.Temporary workaround for issue #3996.
Disable CMake build of tf_stream_executorTemporary mitigation for #3996.
extend tf.select to broadcast a scalar condition #3945This is WIP. The test fails on my machine for the GPU version. Comments are welcome.
"time_major parameter for ctc_loss opJust as dynamic_rnn and to be more regular across the TensorFlow's code I added a flag capable of transpose the input data to be in time_major, required by gen_ctc_ops._ctc_loss. Note that, instead of set time_major=False (as the most of TensorFlow data), it was set False to be compatible with previous ctc_loss function call (but I don't think that this is a good idea)."
Branch 131066649No description provided.
"Add support for complex SVD.In response to my issue #3874, I decided to get it working. I might still need to write some tests, but preliminary testing seems good."
Install numpy from pipCan one of the admins verify this patch?
"update instructions for Raspberry PiHi Tensorflow team,
when installing on a fresh Raspberry Pi, I noticed that I also had to install a couple additional packages. These two lines were taken from the Linux instructions, and were verified by me (and additionally a friend of mine), when we've both started building it on a new Raspbian system."
"update instructions for Raspberry PiHi Tensorflow team,
when installing on a fresh Raspberry Pi, I noticed that I also had to install a couple additional packages. These two lines were taken from the Linux instructions, and were verified by me (and additionally a friend of mine), when we've both started building it on a new Raspbian system."
"More tutorial updates for r0.10 releasePossible to fold this commit into the r0.10 release, as it contains a fix for a broken URL in the Logging and Monitors tutorial?"
"Add cuda_configure repository rule to autodetect cuda.This change reimplements the CUDA autoconfiguration mechanism in Skylark,
providing a cuda_configure workspace rule. We keep the same user interface,
the ./configure script, but rather than modifying source files within the
source tree, cuda_configure generates a @local_config_cuda workspace
containing:"
Branch 130964761No description provided.
R0.10Cherry picks for the fixes for r0.10 release
Allow using custom initializers for batch norm paramsNo description provided.
Delete unused boringssl.BUILDNo longer used after 4af1fb4.
Change app.py() to pass through unparsed flags.This is so that a client that is using our flags library can pass their own flags as well.
docs(distributed): Fixed environment variableThe environment variable for setting container cluster should be TF_DIST_CONTAINER_CLUSTER instead of CONTAINER_CLUSTER
Tensorboard URL for visitingRun last week into the 'issue' that one of the users tried to go to http://0.0.0.0:6006 as instructed on the command line.
Update(mnist):ps/worker cluster frameworkI updated the cluster setter function of mnist_replica.py with the latest and easy-understanding way in distributed tutorial here.
Branch 130790705No description provided.
Fix broken link for gif_archiveNo description provided.
"Docs(Queue): Fix a PriorityQueue API missing bugAs we all know there are 4 subclass of class QueueBase, but only 3 subclass(FIFOQueue, PaddingFIFOQueue, RandomShuffleQueue) descriptions in the API Docs here"
"update message to ask user to also install scipyFollowing the word2vec tutorial instructions I tried ""pip3 install sklearn matplotlib"" but this didn't install the required ""scipy"". Adding that to the ImportError message."
"Fix typo in documentation of `gate_gradients`The documentation said gate_gradient in several places; however, the
option is named gate_gradients. This PR fixes this in all the
places that gate_gradient occurs."
Test DO NOT MERGENo description provided.
R0.10No description provided.
Branch 130665817No description provided.
"Revert \Revert \Merge branch 'r0.10' of https://github.com/tensorflow/tensorf…\Reverts #3781
This PR was born out of a confusion. should be reverted to reinstate the changes we want."
Branch 130640571No description provided.
GPU version for OSX also availableas per: #664
Docs(FIFOQueue):Fix a misspelling in line #594Fix a misspelling which may confuse readers. It should keep same as the line #604 and others:first-in-first out -> first-in first-out
"fix sparse rmsprop check variable bugfixes #3797
a quick fix"
Merging ROI Pooling into masterNo description provided.
Branch 130554783No description provided.
"Fixing comment, wrong data type in argument description.Usage can be seen in lines 445->446, the file is read in and passed directly in, it is not a Numpy array, but rather just a string of raw JPEG data passed into the DecodeJpeg layer of an arbitrary network (by default Inception v3)."
"Change \var1 == var2\ to \var1 is var2\This is a detail and might be just a matter of taste. My reason for proposing this change is that the Python ""is"" operator stands for a stronger type of equality than the ""=="" operator, so perhaps it drives home the equality point more strongly. However, again, this could just be a matter of taste; I will certainly not be offended if this proposal is rejected."
Branch 130529399No description provided.
"Rename Tensor \summary_op\ to \summary\ in the 101 tutorial""summary_op"" is a Tensor, so it's incorrectly labeled as an op. This change renames it to ""summary"", and makes the corresponding changes in the explanation."
Tensorboard log plot optionAn option to switch between modified-log and linear y-axis scales for event charts in tensorboard.
"Add some new features of mnist_replicaModify the mnist_replica.py:
1.Add FLAGS.ps_hosts,  FLAGS.worker_hosts and get_cluster_setter() function to set the cluster and allocate the device. It's more likely the Distributed Tutorial of Tensorflow here
2.Add the gpu_num argument to allocate the gpu for worker server
3.Add Flags.steps_per_checkpoint to manage the saving time of checkpoint file."
"Removing a confusing statement about training opThe statement seemed to suggest that optimizer.minimize() returns a Tensor, which it doesn't; I removed the statement."
"Correct the Variable constructor docstring: there's no return valueIt's a constructor, so it doesn't return anything. I removed the comment stating that it returns a Variable."
"Move TensorBoard 25 into r0.10TensorBoard 25 has some great features, including:"
Branch 130458942No description provided.
docs(slim): fixes typos and capitalizes TensorflowUpdates to docs:
Fix some comment and test case typosNo description provided.
enable python setup.py test using nosewhen developing for the python package might be useful to use standard python testing
"Fix reduce_prod gradient for scalar reduction indices paramsThe gradient of reduce_prod currently can't deal with scalars being passed as the reduction_indices parameter.
I've added a reshape to fix this, and also added a test case for reduce_prod and other reduction ops.
This fixes #3815."
Concurrent access locksess.run() is called concurrently by multiple threads in word2vec. Set use_locking=True in GradientDescentOptimizer to prohibit concurrent parameter read and update.
Correct typo in word2vec.pyNo description provided.
Branch 130325850No description provided.
"Update Eigen version to fix CUDA 8 compilation error (second attempt)The last attempt (#3818) at fixing the compilation errors in didn't work, because bitbucket turned the merged PR into an empty commit: https://bitbucket.org/eigen/eigen/commits/5fea06b2707993a43c5b31105b8224266ecc2c8f."
Add a new target including the C api.This is to fix issue #3814.
Fix `ResourceWarning: unclosed file` warnings in reader_ops_test.pySome file handles created in these test cases are were not being closed. This causes warnings in py3 along with leaked handles.
R0.10No description provided.
Correct typo in word2vec.pyNo description provided.
Branch 130271393No description provided.
"Update to Eigen version that fixes CUDA 8 compilation errorThis updates Eigen to a new version that should fix the compilation error seen in #3786.
The corresponding pull request in Eigen is https://bitbucket.org/eigen/eigen/pull-requests/218/fix-compilation-on-cuda-8-due-to-missing/diff."
fix typoNo description provided.
Allows running \-m tensorflow.tensorboard\ (alternative solution)Allows running python -m tensorflow.tensorboard. This is a more gentle alternative of #3779.
Fixes for Raspberry Pi docs and build filesNo description provided.
TypoFix a typo in some comment.
#3767 tanhgrad gradient and sigmoidgrad gradientgradient functions for tanhgrad and sigmoidgrad
"retrain.py, changed graph_util import statementFirst attempt at a Pull Request, please be gentle:"
"Update Glossary section in Distributed TensorFlow document.Let layout like Glossary.
And it  more friendly for reading when using browser."
seq2seq.py: Fixed the documentation to be consistent with the codeA fix for #3800
"Fix Eigen-related compilation error when using -mavx2.Since updating to use a newer version of Eigen [1], compilation with
-mavx2 causes an error caused by an undefined type. Eigen removed
the type scalar_multipl2_op [2] so scalar_product_op should now
be used."
"Fix tensorboard CSV download in Python 3In Python 3, the csv module cannot be used with six.BytesIO (io.BytesIO in Py3) as demonstrated by this example:"
Remove unnecessary exception and abstract property in BaseEstimatorThese are not necessary anymore due to the addition of Evaluable and Trainable's abstract methods.
Branch 130152575No description provided.
Remove duplicated NanLossDuringTrainingError in graph_actionNo description provided.
ZlibInputBuffer::Inflate() incorrectly considers Z_STREAM_END an errorWhen reading compressed records produced by something other than TFRecordWriter it is possible to produce valid files that are not readable by Tensorflow.
"Revert \Merge branch 'r0.10' of https://github.com/tensorflow/tensorf…Commit a353996 was pushed by mistake, reverting 3c65e0d."
"Added hungarian layer.Please see initial discussion here for reference. I am submitting a custom layer that is necessary to implement this paper from CVPR 2016. Users of Tensorbox currently must compile Tensorflow from source to use these features, so accepting a variant of this pull request would at least help out those existing users. It would ideally be useful to others as well."
"Allows running \-m tensorflow.tensorboard\This is a suggested change that moves the main entry point of Tensorboard from tensorboard.py to __main__.py, allowing tensorboard to be run as a package:"
"Reduce memory usage and increase performance for convolution on iOSWe've had lots of problems with large convolutions hitting memory limits on iOS. This new implementation of the operator breaks the work into chunks so we never use more than 16 MB, and uses Apple's Accelerate framework to optimize the matrix multiplication."
add int32 support for param seq_length of op reverse_sequence#3528
upgrade to cudnn5No description provided.
Branch 130102794No description provided.
Forward port the \reuse WorkerInterface\ fix to r0.10This is the rollback-to-the-rollback of cf02fa2 (which had a bug and was rolled back in e61fb28.
Minor comment change.Erroneous comment from copying the graph freezing test.
"Tflearn tutorial updatesHi TF team,"
Fixes a potential thread leak in the gRPC runtime.Fixes #3470.
"Beam Search WrapperI've been working with the beam search implementation @nikitakit wrote to fix issue #654 , and found the outputs aren't exactly what they should be (unless I'm misunderstanding something). It seems the top output is correct but the rest of the beams are not reordered correctly in the computation. This is my fixed version with a more detailed test case to prove correctness, as well as an attention wrapper to be able to use beam search with attention without much effort. I think it would be great to nail down some official solution."
Branch 130028402No description provided.
Branch 130016968No description provided.
extract element from list when py_func's output type is a single tensorflow type#3464
"solve the bug which the python include config gives out repeat resultsit shows repeat result in config on python includes, it is because the old code show paths[0] and ret_paths at the same time,
so I add a else condition and do some simple optimization by using join"
"Support a separate namespace for the protobuf librarySome clients are already using protobuf v2 as part of their application and would need a lot of work to move, but TensorFlow requires v3. This script patches the protobuf source code after downloading it to put it into a google::protobuf3 namespace, and alters all the necessary TensorFlow code to compile with this new namespace. This allows the v3 library to be linked into applications alongside v2 without causing linker errors."
Document tf.nn.conv1dNo description provided.
Rename TF_Node to TF_Operation in C API.Change: 129673736
Fix typo in TensorFlow Linear Model TutorialHi team!
Update the TensorBoard README link on r0.9.Cherrypicked from master.
Update the TensorBoard README link on r0.10.Cherrypicked from master.
Merge internal changes: Branch 129809238Bringing internal changes to GitHub.
"Add complex dtype support to castThis PR enables the tf.cast op to convert from/to complex numbers.
This is something that users might expect to work, as it's possible in numpy.
I've also extended the tests and gradient code."
"Explanation of blank label in ctc_lossThe doc string of ctc_loss is lacking of several details. I tried to explain a little better of what is needed to get it working, but english is not my native language, so I'm sure that you can do much better!"
"Fix TypeError in gradient clipping opsTwo gradient clipping ops, tf.clip_by_global_norm and tf.clip_by_average_norm, raise TypeError if clip_norm is a Tensor. This PR fixes the issue."
Add link to tensorflow-rust in resourcesNo description provided.
Cuda8No description provided.
Cuda8No description provided.
Cuda8No description provided.
"Added code to raise ValueError if parent directory of  path Saver.save…Current version of Saver.save(session, path) fails with a rather mysterious error code when parent directory of path doesn't exist. It throws a NotFoundError, listing a bunch of nodes variables, e.g.:"
Benchmarking example for iOS profilingNo description provided.
Fixes #3677: Added missing save_summary_steps in BaseEstimatorReported in #3677
added image patch gradThis solves: #2921
Add layer_norm op to contrib.layers.Addresses #3621 for python at least. The new op is modeled after batch_norm and borrows code from it heavily.
Fix cmake buildFix cmake build
Fix analogy response of word2vec interactive when the response is unicode.I run word2vec.py with interactive mode.
"Update jupyter_notebook_config.pyAdding the capability to set jupyter port via the PORT environment variable.
This is especially useful if this Docker container runs on clusters managers like Mesos, DCOS , etc."
Fix typo in error message formatsThe parameters were not formatted properly.
Revert \Fix prototype mismatch of ByteCount in env.cc\Reverts #3614
Cross-import KMeans and GMM in tf.learn.estimators@agarwal-ashish do you prefer to keep this separate? We may just want to cross-import the estimator. That way it's clearer who the best contact for the code.
Branch 129393964Merging internal changes.
Starting on a tf.contrib.learn notebookI'd like to add an IPython notebook using tf.contrib.learn.
Starting on a tf.contrib.learn notebookI'd like to add an IPython notebook using tf.contrib.learn.
Fix chain rule to not imply second differentiationFixes part of #3629.
Added libcupti path to Linux GPU support documentationAdded path to libcupti in the documentation for enabling Linux GPU support.
Remove some signed/unsigned integer comparison warningsNo description provided.
fix tanh inconsistent#2234
"Fix word2vec_optimized excepction when words contain unicode.When word2vec_optimized deal with Korean language, it will break out below exception."
"Fixed inconsistency of outputs collectionBecause naming logic for utils.collect_named_outputs in max_pool2d and convolution2d is different, collection is getting filled with inconsistent names.
code to reproduce:"
"Tutorial updates for r0.10 releaseHi TF team,"
Branch 129255791Merging internal changes
"Python style, added spaces between argumentsNo description provided."
Add missing imports in TF learn examplesNo description provided.
"Fix prototype mismatch of ByteCount in env.ccCurrently, makefile build is broken due to the prototype mismatch of ByteCount.  This change fixes that build error."
"bug fix: the benchmark only run FLAGS.num_batches-1 timesI found that if I set num_batches = 100, then it only runs 99 batches.
Because i is [0, 110), and it starts to count the time when i > 10, so valid i is (10, 110), it only contains 99 elements. So i should be [10, 110), which means '> ' in line 179 should be changed with '>='."
Restore a working CMake build on LinuxUpdates CMake build files as follows:
"Added esn cellI wrote an Echo State Network cell for my personal need, hope that this can be useful to someone else. I tried to be compliant with the project coding style, let me know if I missed something"
"Changed visibility of protos_cc to publicThe only tensorflow package that is private and preventing us from creating custom kernels (with a custom set of operations), is the protos_cc. If we make this public, we can make our own kernels outside of the tensorflow repo, which means for Android/iOS we can make compact libraries with just the right amount of kernel ops."
Use tf.contrib.layers.conv2d instead of learn.ops.conv2d which is dep…Use tf.contrib.layers.conv2d instead of learn.ops.conv2d which is deprecated and the code will be removed after 2016-08-15.
Moved eightbit graph trimming to before output_nodes definitionCurrently fails when output_nodes have inputs that are removed by graph trimming. Example below:
Added missing name in release.mdSimply added my name (non-Googler) and removed my nickname.
Branch 128894163No description provided.
Removed unused imports from examplesMinor code cleanup.
0.10.0rc releaseMerge release branch back into master to get all the bugfixes.
Branch 128859117No description provided.
Branch 128853679No description provided.
"Hard-code libcuda version number to \1\. Fixes #2865.As per comments from nvidia-docker dev @3XX0, hardcoding ""1"" should be
reasonably safe. The TF_CUDA_VERSION variable from the configure script
is not appropriate here (it will contain something like ""7.0"" or ""7.5"",
while the libcuda soname major version number should be ""1"")."
Update Mac GPU setup instructionsNo description provided.
update os_setup for r0.10mac directories are changed to be similar to linux and to avoid collision of cpu/gpu mac wheel files
Update documentation for r0.10 release.No description provided.
word2vec_basic.py : to prevent possible issue with libpngFollowing error message stopped with this pull request.
Fixing crosstool config file to build tensorflow on PowerPC architect…ures
"Extended adjust_hue and adjust_saturation to work on 4D tensorsI noticed that adjust_hue and adjust_saturation only worked on single images (3D tensors), but I couldn't really see a reason for that, so I extended it to work on 4D. I don't know if you want this in the main repo?"
"Update index.mdI just test it as I want to assign a, b and c to gpu3. Something wrong happened.
if the code ""c = tf.matmul(a, b)"" is not include in ""with tf.device('/cpu:0')"", then even you find b and a are assigned to cpu0ｼ荊hey just be assigned default. Because c is assigned to cpu0 default. a and b are used by c, so they are assigned to cpu0."
R0.9No description provided.
Docker build script: Fix logic re TF_BUILD_APPEND_CI_DOCKER_EXTRA_PARAMSNo description provided.
R0.10: Update Session documentation.Updates core/public/README.md and Session API doc to address issue #3195.
Branch 128756911No description provided.
Fix typos in print statements in Wide & Deep TutorialNo description provided.
Add release note to 0.10.0No description provided.
Correct tf.Gradient... to tf.train.Gradient...No description provided.
"Fixed typo:Variables must be initialized by running an init Op
""before"" having launched the graph, not ""after""."
Fix go build errorsTwo minor changes:
Branch 128624829No description provided.
Fix debian build; Bring debian build into ci_parameterized_buildNo description provided.
"Update go branchThis is a merge of the latest changes from master onto the go branch.
Build and local tests of TensorFlow 0.9 using the Python and Go APIs is successful."
"Fixed typo:There is no Mechanics tab, practical aspects of usage is inside TUTORIALS
and HOW TO tab."
fix for BM_UNARY testhere is a fix for the test. Can you kindly review @rryan ?
"Clarify docs for tensorflow/python/ops/rnn_cell.pyWhat the docs and code refer to as a ""cell"" corresponds to what the literature
calls a layer of cells/units. This clarifies that e.g. RNNCell is an array of
cells/units."
Update version string to 0.10.0rc0No description provided.
Fix an error message.Minimum tensor rank should be dim + 1 instead of dim.
"Explain how to make it work with ipython.It is not obvious that although ipython is available in the
tensorflow environment, it does not know about tensorflow until
ipython gets install into the tensorflow environment that was
just created. Same goes for other packages that have already been
installed but not into the tensorflow environment. Fixes #3321"
"Added useful ops to makefile buildThese are common ops needed by some of our users, so adding them to the mobile build."
Branch 128492931No description provided.
Branch 128485842No description provided.
Replaced _logger.warn with _logger.warningFixes #3085.
"Calculate dependencies for makefileThis change updates the makefile so that changes in headers are spotted and the right files are rebuilt. This also breaks down the different iOS architectures' objects into subfolders, so that incremental builds are possible."
R0.9No description provided.
minor typo fixNo description provided.
Branch 128270792No description provided.
Enhance doc of model_dir in estimatorscc: @martinwicke @ilblackdragon
"Remove confusing sectionRemoving the --rm is simpler. If users want to use a named container, they can, but it's not essential."
Fix a typo in input_producer documentationJust what it says on the tin..
Add bazel version to issue templateNo description provided.
Correction in Dequantize commentsA small correction in Dequantize Comments
Corrected a typo in Dequantize commentsGiven dequantize pseudocode is same as quantization. Corrected that
fix sync update in distributed mnist demoNo description provided.
Fix CUDA capability version logic in ci_parameterized_build.sh for non-Docker casesFix CUDA capability version logic in ci_parameterized_build.sh for non-Docker cases
Fixed regex for extracting Eigen version on iOSNo description provided.
"Update download_dependencies.sh for changed Eigen configThe download_dependencies.sh in contrib/make also needs to be updated to work with the Eigen config changes from #3288.
Thanks to @apcode for pointing this out!"
"Update link in linear tutorialThe link to the wide_n_deep tutorial doesn't work.
Should it link to the one above?"
Fix segfault in MacOS when GPU is not availableFixes #3435
minor typo fix.This just fixes a minor typo in a comment.
New user op warp ctcNo description provided.
"Update tf.nn.rnn.mdIt is hard to read some parts of markdown with gfm newline grammar.
I think adding code block is more good for reading."
Fix eigen hash detection in download_dependencies.shFixes #3427
"Add support for quantized operations to pip wheelWhile quantized op layers are currently part of the built pip package
already, the underlying libraries are not included with the build. This
commit adds support by adding both ops & kernel libs to the pip package
dependencies."
"Merge contrib/go into master, minor syntax fixesThis includes:"
Fix few warnings that I see on macosx-clang compilationNo description provided.
Combined update for contrib/goThis PR merges 1700+ commits from master into go.
"Prevent evaluating stale output node.When quantizing to 8-bit the Identity ops are removed (""spliced""). For graph's with a parameter-less output node like SoftMax, there is no issue. However, if the graph's output node received a constant input (i.e. a bias add with weights) the output node referenced here will be stale (still has Identity input) and result in a error."
"Make the default command use a named containerIt seems that it's a more common workflow than I assumed, and should be relatively foolproof."
Speed up retraining times  approximately 2xSpeed up is achieved by:
"add Dummy gradient for LogUniformCandidateSamplerI added a dummy Gradient for the LogUniformCandidateSampler, as proposed by Martin Wicke    in this discussion thread, to get rid of this error:"
Update the quantization how-toCan one of the admins verify this patch?
"Broadcast doc for ops in math_ops.ccDocument broadcasting behavior for each binary elementwise operation, as discussed in #508."
Fix minor typoFix indentation in tensorflow/workspace.bzl
Fix typo in rnn_cell.pyFix typo.
Added debugging information for Pi errorsNo description provided.
standardize BUILD files format using buildifierI just run buildifier -mode=fixfind . -iname BUILD -type f`.
Branch 127784684No description provided.
R0.9Thank all authors of these tensorflow tutorials!
"Updated makefile to use a more robust way of generating file listsThis should help reduce the frequency of breakages, since it uses a wildcard and exclusion list approach modeled on the Bazel rule, rather than a plain list of files."
"Remove read_analogies() from word2vec class initializationWhen I used word2vec model for training my target words directly, it lacked of analogies file for evaluation. Thus, it would raise file not found exception when model initialization. So I made read_analogies() public and called it after initialization."
"Fix whitespace issue in contrib/makefile/README.mdThese paragraphs were indented by an extra space, causing Markdown rendering quirks that affected readability."
"Fix gradient of prod op using cumprodThis is an initial shot at fixing #2641 (NaNs in the gradient of tf.reduce_prod when the input is 0).@girving suggested to use two calls to cumprod and to multiply the outputs to produce an array containing the products of all values without the current one, like this:"
Branch 127608996No description provided.
"Added missing files and clarified documentationAddresses the confusing documentation that caused #3327, and added new files to the Makefile sources."
Branch 127592611No description provided.
Branch 127588880No description provided.
Branch 127578995No description provided.
Modified retrain.py: changed import at 80 line.Changed import 'tensorflow.python.framework' to 'tensorflow.python.client'.
Allow tensorboard to follow symlinks (feature request #2140)Fixes #2140
"Make the default command use a named containerIt seems that it's a more common workflow than I assumed, and should be relatively foolproof."
Branch 127440874No description provided.
"Adding info and links regarding Bitfusion's TF AMIAdding a link and info for TF AMI to the resources page, in the community section."
Documentation for broadcasting behavior of binary elementwise operationsPR for #508. Uses @mrry's example in the SO question referenced in the issue.
"Remove confusing section in Udacity doc.Removing the --rm is simpler. If users want to use a named container, they can, but it's not essential."
Initialize local variables in fully_connected_preloaded example to resolve #3168fully_connected_reader example was fixed while fully_connected_preloaded was not
Branch 127324936No description provided.
"time_major parameter for ctc_loss opJust as dynamic_rnn and to be more regular across the TensorFlow's code I added a flag capable of transpose the input data to be in time_major, required by gen_ctc_ops._ctc_loss. Note that, instead of set time_major=False (as the most of TensorFlow data), it was set False to be compatible with previous ctc_loss function call (but I don't think that this is a good idea)."
"Add exclusive kwarg to scan opsThis adds an exclusive kwarg to the cumsum and cumprod ops.
Documentation and tests have been extended to cover this kwarg."
Remove the unused/orphaned code in python/package/default.No description provided.
"Minor code doc fix - cwise_ops_common.hFound a minor error in code documentation while digging for something. The file cwise_functors.h does not exist, and the functor definitions are inside cwise_ops.h. Also, couldn't find the add2 functor, so replaced it with add."
Simplify Eigen package configI think we can avoid specifying the Eigen commit hash in multiple places by using the strip_prefix option to new_http_archive.
Branch 127253427No description provided.
add norm1d and 2d support#2826
Fix bug in gcs_smokeNo description provided.
Add Install step in Installation for Linux.Can one of the admins verify this patch?
"Enable reverse op for complex valuesI've enabled complex values for the reverse op based on #3271.
This is part of the more general #2577."
Multiple fixes in KMeans clustering estimator(i'm waiting for green tests :)
Update Eigen to version that includes scan op fixThis updates Eigen to a newer version that includes a fix needed to merge #2711.
Branch 127122527No description provided.
"Revert \Revert \Misc improvements to Dockerfile.devel-gpu\\Reverts #3157 which reverted #3143, but which now has proper CLA."
Add cuda_configure repository rule to autodetect cuda.Fixes #2873
"Extend #3020 to decode animated GIF#3020 has been squashed into a single commit, with proper authorship acknowledgment. I'll squash my commits after code review."
"fix mispellings and add minor correctionsThe main change of the PR is the change of interface from a single Reader(, isText) to a more (IMHO) go idiomatic ReadFromBuffer and ReadFromString"
"Fix word2vec excepction when words contain chinese.When word2vec deal with Chinese language, it will break out below exception."
Added post link for building TF estimatorsNo description provided.
"Fix for protobuf library order building problemsThis should fix #3191. The problem was that we'd added internally-built protoc, but the include and library orders in the makefile would pull in headers and libraries in /usr/local/ before the locally-generated ones."
Update README.mdFix links to iOS examples
"Remove support for CuDNN v2 runtime/compile from TensorFlow.Major changes in the APIs between CuDNN versions make it
hard to update to newer versions of the library as they
come out every few months (as can be seen by the lines
removed by this commit).  As CuDNN APIs become more stable
we can likely leave support for more versions, but V2 was
particularly problematic, and versions V3+ are a large
enough improvement over V2 that we don't need to support V2
anymore."
"Change cudnn version checking to check Major version.CuDNN versions with the same major version should be ABI
compatible, which means that if we release a binary
with cudnn version 5.1, it should be compatible with
a system whose runtime loads version 5.0.  This check
would trigger if the cudnn version loaded at runtime is
5 but the compile-time version used was 4."
"NUM_CHANNELS instead of '1' for consistencyEven if the MNIST dataset is made by one-channels images, NUM_CHANNELS variable is used for creating the model. To be consistent and for generality, shall we use NUM_CHANNELS also for extracting data from images into the 4D tensor."
TensorForestEstimator - removed unused continue_training and changed to use config in constructorRemove unused continue_training
Push changes from internal: 126965578No description provided.
fix nightly download links in readmeI grabbed these links from build history.  Fix #2939
Branch 126943819Merging internal Google changes.
Update Scikit flow link in resourcesNo description provided.
Fix issue 3186: buffer alignment needs to be 8-byte for uint64 valsThis Closes #3186
fix import error for graph_util (#3203)Fixes #3203 - ImportError for graph_util from tensorflow.python.framework
Accompany TF_LoadLibrary with TF_DeleteLibraryThe pull request addresses issue #3213. Please let me know
Fix doc typo from `Tensor.run` to `Tensor.eval`Quick documentation in session.py to fix to point to correct function name and permalink id.
Reserve Udacity docker container after the session finishedFix issue #2596 as a beginner.
maximize function added to OptimizerI have added a Maximize() function to the Optimizer.  This makes efforts where maximizing a function straight forward to implement.
Some additional pointers to resources.No description provided.
Updateno modification
"instructions for saving progress using the udacity docker imagePeople not used to Docker might be surprised when their ""saved"" changes suddenly disappear."
"docker exec -it to start the interactive terminalAs per the current documentation,
$ docker run -it -p 8888:8888  gcr.io/tensorflow/tensorflow should be used to access the CLI.
However, the previous command starts the Notebook App. The CLI is not available. To access the CLI, we need to access the container by creating a new interactive terminal to it.
Hence, I added a second step using docker exec."
"Make dims of TF_NewTensor immutableThe pull request addresses issue #3176. Since immutability is a milder requirement than mutability, there should be no serious implications for the existing codes."
fix trivial typo (word repetition)No description provided.
R0.9No description provided.
Update README.mdAdd more detail on required project changes to include TensorFlow support.
"fixed link to tensorboard readme in image retraining how-toI noticed my update to the image retraining how-to had a broken link to the TensorBoard README when viewing the content at https://www.tensorflow.org/versions/master/how_tos/image_retraining/index.html#visualizing-the-retraining-with-tensorboard. Therefore, I updated the relative link to be an absolute link so people will be able to browse to it regardless of which page they're viewing the tutorial (tensorflow.org or github)."
Fixing typosNo description provided.
R0.9No description provided.
"update tflearn example digits.pythe previous classifier.fit(X_train, y_train, val_monitor) has a problem,
the learn.TensorFlowEstimator.fit(x, y, steps=None, monitors=None, logdir=None) now has monitors as the fourth argument, and should be a list
I modified it to classifier.fit(X_train, y_train, monitors=[val_monitor]) but this cause a new problem.
Is is this a bug from TensorFlowEstimators or ValidationMonitor"
Add Float64 support to CTC Decoder OpsPR incomplete! Have question about best way to get around one line
Update README.mdFix markup for link to iOS examples
Update from original r0.9No description provided.
Revert \Misc improvements to Dockerfile.devel-gpu\Reverts #3143
Updated tflearn examples copyright@ilblackdragon
R0.9No description provided.
Branch 126416482Merging internal Google changes.
Small typoNo description provided.
Fix link in tf.learn linear models overviewAdds '../' to a link in the inear models overview.
Add missing tf.tanh() tests for SparseTensorMore information in comment here. Tested locally.
Misc improvements to Dockerfile.devel-gpuNo description provided.
i added my changeNo description provided.
fixed error in example syntaxJust a little nitpick...
"update tensorflow learn readmesince TensorFlowDNNClassifier, TensorFlowLinearClassifier, TensorFlowLinearRegressor are all deprecated, use DNNClassifier, LinearClassifier, LinearRegressor"
Fixes #2935 sklearn compatibility fix with cross_val_scoreFixed #2935 and added test.
Fixed run_config exampleClosing this since it's already changed from internal merge
Fix arithmetic transform testNo description provided.
"Update README.mdFixed spelling mistake line 64
Fixed link to NDK line 107"
Fixed early stopping example and copyrightUsed DNNClassifier for early stopping example
"Remove mentions of `with_dependencies` from API docsWe no longer (perhaps never did?) expose this function in our public API, so it shouldn't be mentioned in our public API docs."
Change FIXME to TODOFIXME is on the list of banned words in the Google export script.
Branch 126308395Merging internal Google changes.
Enable tf.erf() for SparseTensorEnabled tf.erf() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
"change boringssl resource from googlesource to githubDue to the network issue in China, the https://boringssl.googlesource.com/boringssl can not be downloaded while using Bazel. So I suggest to change it to a github mirror https://github.com/google/boringssl.git."
R0.9 mergeNo description provided.
Update the directory of cuDNN in doc of install cudaThe directory of cuDNN has been changed to cuda. It would be better to update the doc.
Branch 126229168No description provided.
Branch 126222638Push of internal Google changes.
"R0.9: Fixes URLs and headingsPoints links to wide_and_deep.py to master, fixes a heading, and changes a versioned URL to a generic URL."
fixed ValueError in tensorflow/examples/skflow/mnist_weights.pySolution to #3083.
"Fixes code URLs and a heading in docsPoints links to wide_n_deep.py to master, and adjusts the heading level of the top level heading in the tf.contrib.learn quickstart."
Branch 126195202Push of internal Google changes to TensorFlow.
"Fixed dependency in makefile, and sped up iOS buildNo description provided."
Update os_setup.md for new tensorflow releaseupdated links to tensorflow 0.9.0
"solve the building issues \Undefined reference to symbol 'ceil@@GLIBC_2.2.5'\This is to solve the bug Undefined reference to symbol 'ceil@@GLIBC_2.2.5'#3070,
the solution is inspired from bazelbuild/bazel#934 and #1171"
Wide and Deep docs updateNo description provided.
Branch 126112363Pushing for last minute website update.
Fix path to boringssl_err_data_c in workspace.bzl.Passing in an absolute path for path_prefix gave me this error:
Branch 126125286Extra push
"Resolve the libcudnn library to its SONAME, when possible,and build the binary with that SONAME, which is supposed to be
ABI-compatible."
Fix the TensorBoard README link on the how to page.Change: 125799092
Branch 126082003Push of internal Google updates to TensorFlow.
"Remove explicit dependency on Python 2.7 from crosstool wrapperMany superclusters need to compile TensorFlow from source due to an outdated glibc version (see #110). In @rdipietro's excellent workaround post (#110 (comment)) he mentions issues with the referenced Python version in this file. I have issues as well, but of a different nature. In my case the build script is unable to find libpython2.7.so.1.0, since only Python 3 is present on my machine. The issue originates from crosstool_wrapper_driver_is_not_gcc where the only Python 2.7 exclusive feature is the print statement. By importing print_function from __future__ the explicit dependency can be dropped and both versions of Python are supported."
Fix for iOS compile problemsFixes #3065 and #3004
"Update framework.mdcode conflict with comment縲Ｔhall be ""inner_1"""
"Explanation of blank label in ctc_lossThe doc string of ctc_loss is lacking of several details. I tried to explain a little better of what is needed to get it working, but english is not my native language, so I'm sure that you can do much better!"
Fix Nightly Python3 error in graph_io_test.pyChange: 125988941
"Better docs of returned tensor in ctc_ops.py'Logits' aren't a meaningful word for what the ctc_cost function returns. Browsing the implementation (tensorflow/tensorflow/core/util/ctc/) I saw that the cost function is returning the negative log probabilities of the target labelling, so, this new comment erases any doubt. Thanks!"
User op warp ctcNo description provided.
Branch 125939528No description provided.
Templatize dtype in RGBToHSV and HSVToRGBRGBToHSV and HSVToRGB currently work only for float32 inputs. Made the data type a template parameter so that other input types like float16 and float64 can be used. This change is towards resolving #1140 for the above mentioned operations.
Adds conv3d_transpose operation (3D \deconvolution\)This pull request contains the following changes:
Fix some typosFix some typos
docs: Change \valued\ to \values\No description provided.
R0.9have a try on this project
Udacity Readme.md updates to docker commandChange to docker command to ensure changes to notebooks are not lost between restarts
Add sparse_transpose wrapperAttempt to add transpose function for SparseTensor as mentioned in #2180.
Branch 125795153No description provided.
Update copyright datesThe copyright dates are changed to 2016.
"README: fix shell snippet markdownFixes shell snippet markdown, by ensuring that
the shell command python and the actual Python code
are separated in different code blocks. This is to prevent
a formatting nit because $ not in string form, is not
a valid Python token."
"Support GIF image decode ops by giflib libraryRefactor the code from the former PR #2578, to use giflib instead of FreeImage.@martinwicke Please review this. Thanks"
R0.9No description provided.
WIP: Reorganizes tutorial navigationReorganizes tutorial navigation
WIP: Reorganizes tutorial navigationReorganizes tutorial navigation.
"WIP: Reorganizes leftnav files.Changes to be committed:
modified:   tensorflow/g3doc/tutorials/leftnav_files"
WIP: Site navigation changeReorganizes leftnav file for tutorials.
R0.9 ver2Reduces the test time from about 33 s to 24 s.
Added complex type support to ops for GPUInitial matmul complex support for issue #2977
"Update Eigen to new version with cumsum/cumprod fixesWould it be okay to update the version of Eigen to one that contains the fixes needed for #2711 to get merged?
This PR changes the version to the one right after the fixes were merged."
Enable tf.tanh() for SparseTensorEnabled tf.tanh() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
Branch 125575345No description provided.
Added Xcode version check and logging utilities for kernel errorsNo description provided.
"Added Xcode version check, and logging utilities for kernel errorsNo description provided."
Branch 125511710No description provided.
"fix word2vec_test's tmp pathfix word2vec_test's tmp path:
'/tmp/word2vec_testtest-text.txt' to '/tmp/word2vec_test/test-text.txt'
'/tmp/word2vec_testeval-text.txt' to '/tmp/word2vec_test/eval-text.txt'"
Branch 125491759No description provided.
Update build file to fix #2703No description provided.
Branch 125447159No description provided.
"CIFAR-10 init routine breaks simple usagesThis is partly breaking the CIFAR-10 example, and it doesn't make sense."
Branch 125447159No description provided.
update docsNo description provided.
Enable tf.sqrt() for SparseTensorEnabled tf.sqrt() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
Correct typo in pydoc  for MinOrMaxGradNo description provided.
R0.9 time fixNo description provided.
Docstring example and formatting updatesChange: 125205938
R0.9 commentsNo description provided.
Version bump: 0.9.0rc0 --> 0.9.0No description provided.
R0.8No description provided.
Use string_to_hash_bucket_fast in feature_columnUpdated feature_column to use string_to_hash_bucket_fast instead of deprecated string_to_hash_bucket.
Fixing minor typo in comments.Typo in command-line build example comment.
"Added missing pandas handling, fixed tf dataframe testsNo description provided."
Update build file to fix #2703fixes #2703
Branch 125246026No description provided.
"tf.learn updateUpdate contrib/{learn,losses,layers,metrics,framework,slim} to reflect changes since r0.9 branch split."
Added camera example for Raspberry PiNo description provided.
Added basic Raspberry Pi exampleAlso fixed a math error in the iOS examples image decoding.
Enable tf.square() for SparseTensorEnabled tf.square() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
"Cast tf.shape() output to int32 for SparseTensorinput.shape gives a Tensor of type int64, where input is a SparseTensor. Cast the output of tf.shape() to int32 for a SparseTensor to be consistent with the doc. Tested and verified locally. This completes the changes for #1968."
Branch 125215862No description provided.
Fixed makefile problems with new files and zlib dependencyNo description provided.
Fix genrule Python execution problem with Python3.Change: 124202095
Make RNN api public.Change: 124305799
Revert premature version bump in master branchNo description provided.
Use asarray to avoid copy - ~2x speedup for feed_dictThis starts to address #2919
Branch 125120308No description provided.
"Fixup url to MNIST fully-connected feed tutorialDocumentation at https://www.tensorflow.org/versions/r0.9/get_started/basic_usage.html ends with "" See the MNIST fully-connected feed tutorial (source code) for a larger-scale example of feeds."", including a link to a broken url.  This changeset changes the source code url from https://www.tensorflow.org/code/tensorflow/g3doc/tutorials/mnist/fully_connected_feed.py to https://www.tensorflow.org/code/tensorflow/examples/tutorials/mnist/fully_connected_feed.py so that the link resolves to relevant source code."
Merging release notes changes from r0.9 back into master.@martinwicke not sure if we should merge the entire tree back or whether I should cherry-pick one at a time.
Branch 125083559No description provided.
Fix build for PPC.This CL includes 2 parts -
"Fix markdown list in dtypes documentationThe markdown processor can't deal with empty lines in between list items, which leads to a broken list here:https://www.tensorflow.org/versions/master/api_docs/python/framework.html#DType"
A few code hygiene fixesCan one of the admins verify this patch?
"Deprecate contrib.learn.ops{dropout, dnn}For dnn, simply added a deprecation message. BTW, there's a bug in TensorFlowEstimator where dropout is still happening during testing. But I am guessing that's not critical at this moment since it will be deprecated anyways."
Branch 124994976No description provided.
Cherry-picking stability and doc fixes for r0.9This PR contains all the bug fixes I have applied to the master branch since r0.9 was forked.
Comment erroneously says output instead of input for the input_node_names.No description provided.
"Fix negation of flags with dashes, add test.This fixes issue #2880 by replacing dashes with underscores when adding the negated version of a boolean flag. I also added a test making sure it behaves as expected."
Retrain tutorial with tensorboardI created a script that allows running the Inception retraining example with TensorBoard visualizations and figured I'd submit it so others can learn from it. It's based on the retrain.py and mnist_with_summaries.py scripts.
Branch 124956736No description provided.
Enable tf.sign() for SparseTensorEnabled tf.neg() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
Qualify references with @org_tensorflow to make function importableQualify references with @org_tensorflow to make function importable by other workspaces
tensorflow_learn蟄ｦ荵 tensorflow 貅千 
"Hard-code libcuda version number to \1\. Fixes #2865.As per comments from nvidia-docker dev @3XX0, hardcoding ""1"" should be
reasonably safe. The TF_CUDA_VERSION variable from the configure script
is not appropriate here (it will contain something like ""7.0"" or ""7.5"",
while the libcuda soname major version number should be ""1"")."
Branch 124906347No description provided.
Deprecated contrib.learn.ops.conv2dNo description provided.
Deprecated contrib.learn.ops.batch_normalizecc: @ilblackdragon @martinwicke I'll probably do similar thing for some other ops (different PRs) if you think this approach is ok.
"Make sure that concat complains about concat_dim < 0tf.concat already checks whether concat_dim is too large for
the provided arguments at graph construction (if that's possible), but it
should also make sure that concat_dim >= 0."
Update README.mdFix for the Deep Neural Network example in tensorflow/contrib/learn/python/learn/README.md
Added iOS CI build scriptNo description provided.
Revert \Logistic regression weights: Using a `tf.Tensor` as a Python `bool` is not allowed\Reverts #2757 because check is the reverse.
Branch 124869789No description provided.
fix dim mismatch bug in resnet example.Can one of the admins verify this patch?
Fix bugs in Residual Network implementationCan one of the admins verify this patch?
Merge iOS and Pi changes into 0.9 branchNo description provided.
Branch 124848019No description provided.
Enable tf.neg() for SparseTensorEnabled tf.neg() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
"[WIP] Gradient reversal op""Unsupervised Domain Adaptation by Backpropagation"" introduces a very simple but effective ""gradient reversal layer"" that is the identity for the forward computation and flips the gradient during backpropagation. This PR implements this as a user op called FlipGradientOp. The gradient registration is here (with a small MNIST experiment in that repo that uses the op)."
"Reuse add_loss function and removed skflow folderI don't think people are still importing from skflow, instead of importing from learn."
Branch 124789706No description provided.
"Update version number in pip package setup.pyUpdated version number.
Minor change. But I was confused for a short time about the old version number in the newly generated .whl file..."
Updated Eigen include paths for iOS examplesNo description provided.
"Restore a working CMake buildThis includes changes from #2705, which fixed some of the breakage."
Enable tf.abs() for SparseTensorEnabled tf.abs() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
Discard Pull Request (PR)Greetings @googlebot! Send me your Contributor License Agreement
Second try at testing removal of gtest flagNo description provided.
Branch 124731683No description provided.
Fixes to TensorArray and Functional opsFixes #2787.
"MNIST tutorial incorrectly described a fileThe file ""input_data.py"" from MNIST tutorial does not download any data, as previously stated."
Shrink iOS binariesNo description provided.
R0.9No description provided.
"[tf.learn] Allow Attention in RNNClassifier and RegressorWithout having checked -- the RNN interface has recently evolved a bit, did you use the new cell types (or can a user use those)?"
"Fixed bug in train_test_split operation.If scikit-learn is installed, tensorflow attempts to import the operation train_test_split from scikit-learn. Otherwise it provides a custom implementation. The custom implementation correctly computes the position to split the dataset, but returns the same set of indices for both the training set and the test set. Effectively this operations returns the training set for both the training and test sets."
"[learn] update TensorFlowEstimator's functions (fit, partial_fit, predict)Can one of the admins verify this patch?"
Branch 124648897No description provided.
Stopgap measure to fix session_bundle genrule for py3.5No description provided.
Update iOS Eigen versionUpdate Eigen version in iOS projects to 5f86b31739cd
add support for nesterov momentum#594
Revert \Enable tf.log() for SparseTensor (#2763)\This reverts commit 6e8cc50.
change documentation to use nvidia-dockerRecommend nvidia-docker as the right way of running docker images.
Docs for conda-forge packageSmall PR that add some documentation of a community maintained conda package.
Enable tf.exp() for SparseTensorEnabled tf.exp() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
Cherry pick dist/tf-tensorboard.html update onto r0.9This merge will fix several Safari bugs in TensorBoard.
Branch 124560962No description provided.
"Initializer for Input->H & H->H weight matrices for RNNCellsThis modification allows initializer (with trainability) for the Input -> Hidden and Hidden to Hidden layer when using the _linear function. Currently, only BasicRNNCell has the new arguments in it's call function, but this could easily be solved. The motivation for such a modification is that it would easily allow different weight architecture for each component of the cell. For example, one could have a one-to-one connection from input -> H, all-to-all from H -> H and one-to-one for H->Output. One could also easily create sparse weight matrices for the input->H and H->H."
Enable tf.log() for SparseTensorEnabled tf.log() for SparseTensor. Added tests and verified locally. This partially addresses #1828.
Missing space;(1) bash file check will fail without the space;
Branch 124454600No description provided.
Fix typoNo description provided.
Logistic regression weights: Using a `tf.Tensor` as a Python `bool` is not allowedTrying to use logistic_regression weights led me to the exception:
"Apply fully connected activation function on flat datalayers.fully_connected flattens all dimensions of the input but the last, transforms the flat rows using the same weight matrix, and unflattens the result. One use case is to apply the same layer to each output of an RNN like in this example."
"Fix typo 'puth' instead of 'put'Extract patches from images and put them in the ""depth"" output dimension."
Fix for build issue #2742;(1) Additionally added linking against pthread for linux machines
"Immediate execution mode with graph caching.Implementation of immediate mode execution in TensorFlow. The idea is to wrap original tensorflow API, but provide session/run management logic so that commands execute immediately, and graph caching to avoid modifying graph when same op is run repeatedly. Data is kept in TensorFlow runtime whenever possible using persistent tensors and transferred to Python runtime on demand when needed for printing/control flow."
Fix for build issue #2742;(1) grabs build info from eigen.BUILD (rather than using a specified hash);
Updated Pi documentation and Eigen version in makefileNo description provided.
Updating the setup web page for GPU to use primary with nvidia-docker then docker_run_gpu as alternativeUpdating the website setup page to align with `tools/docker/README.md`` by adding description to use nvidia-docker first before trying docker_run_gpu script for GPU scenario.
Branch 124381148No description provided.
Dynamically shaped image support for `tf.image.resize_image_with_crop_or_pad`This patch is intended for issue #521
Branch 124370170No description provided.
MNIST downloader doesn't work as expectedSee: https://www.tensorflow.org/versions/r0.9/tutorials/mnist/pros/index.html
R0.9No description provided.
Fix typoNo description provided.
Enable whole batch whitening.The function tf.image.per_image_whitening() can now be applied to a whole batch. Mean and adjusted_stddev is then computed over all batch dimensions.
Fixed tensorboard not to use any lambda functions for compatibility with SafariFixed tensorboard not to use any lambda functions for compatibility with Safari
added complex128 to release notesNo description provided.
Branch 124305034No description provided.
Branch 124290852No description provided.
"Add cumsum and cumprod opsThis implements tf.scan_sum (cumulative sum) and tf.scan_prod (cumulative product) ops.
Unfortunately, this won't compile with the current version of eigen, as I have to make some small changes to TensorScanOp.h
But this should be useful to discuss how the API should look and whether we want to have inclusive/exclusive ops, and so on."
Branch 124251558No description provided.
"Update roadmap.mdAdd mesos integration to ecosystem work, placer work to core."
Update Cmake build files to reflect recent dependency changeAdd external library dependencies including
Normalize cuDNN spellingNo description provided.
Fixes for Raspberry Pi compilationNo description provided.
cast to integer as required re issue #2420issue #2420 workaround fix
"Fix gcc error: cannot convert 'auto*' to 'float*'gcc 4.8.1 barfs on this reasonable-looking type inference for unclear
reasons. In this case const T* is arguably clearer than auto*
anyway."
"Use -DGPR_BACKWARDS_COMPATIBILITY_MODE in gRPC.This avoids using secure_getenv(), which prevents building on
operating systems with a GLIBC < 2.17."
Fix UniformUnitScalingInitializer -> uniform_unit_scaling_initializerFixes #1328.
Updated iOS settingsNo description provided.
Branch 124169174No description provided.
"Remove sudo in virtualenv during installationIn r0.8 and r0.7, installation inside virtualenv did not need sudo.  Sudo appears in r0.9 document.  It seems a copy-and-paste typo."
Gated Feedback LSTM implementationThis PR aims to add a GFLSTM implementation in contrib.
Fix formatting issue in docs caused by lack of backtickMissing backtick was causing unhappiness.
parameterized_docker_build includes three CUDA capabilitiesNo description provided.
parameterized_docker_build includes three CUDA capabilitiesBefore it included only one (3.0).
"Enable tf.size() for SparseTensorAdded an override for tf.size(), that takes care of SparseTensor objects as well. Added tests and verified locally. This partially addresses #1968."
Fix broken link to Anaconda installationNo description provided.
Fix broken link to Anaconda installationNo description provided.
Replace assertEquals in graph_io_test; disable a session_bundle testassertEquals is deprecated and causes Python 3.5 test failures.
temporarily disable contrib/session_bundle from test_installation.shNo description provided.
[learn] add an lstm regression exampleNo description provided.
temporarily disable contrib/session_bundleThe genrule makes problems in integration testing. We disable it for now and fix it after 0.9 release.
"Mention fix for building on 16.04 in TroubleshootingI ended up using @fayeshine fix from #2073 to get tensorflow building on Ubuntu 16.04, add a mention to this work-around under ""Linux Issues"""
"Add a method to remove entries from registry.I'm using this to remove incompatible shape functions from the registry to make ""immediate"" tensors work as a drop-in replacement for regular TensorFlow tensors."
add doc for packaging TF in format of tar.gztackle issue: #2631
Added linker options to armv7 in iOS makefileNo description provided.
Added linker flags for iOS buildNo description provided.
"Enable tf.shape() for SparseTensorAdded an override for tf.shape(), that takes care of SparseTensor objects as well. Added tests and verified locally. This partially addresses #1968."
Android permission checkAdded a simple permission check and request to prevent crashing on api 23+
Android permission checkAdded a simple permission check and request to prevent crashing on api 23+
update release and roadmapNo description provided.
fix minor mispells in tensorflow/tools/dist_testNo description provided.
Bump version to 0.9.0rc0No description provided.
Branch 124012080No description provided.
Added licenses to makefile sh scriptsNo description provided.
Add x permission back to test_tutorials.shNo description provided.
Updated Eigen version in MakefileNo description provided.
Add OSX/iOS makefile build scriptThe build script can be used in Jenkins CI jobs.
Makefile buildNo description provided.
improve docker readmeWe have very old readme in tools/docker leading to confusion - see #2533
Branch 123940786Merge from internal.
Updated gRPC to release 0.14.This patch updates the version of gRPC used to the latest release. It adds dependencies on nanopb and the same boringssl library as used in many of the models' workspaces.
"Fix gradient of complex op when broadcastingThe gradient of the complex op didn't take into account that it can broadcast its parameters.
I've also added a test that should check this in the future.
This fixes #2627."
"bug fix in ApplyAdadelta update ruleFollowing the Zeiler ADADELTA paper, numerator of update equation
should be RMS(accum_update) * grad"
Add paper-dialog to TensorBoard's index.html importsWarning! Warning! Warning! Your totally-automated TensorBoard Testing Serviceﾂｮ has detected an issue with TensorBoard that would make users sad upon the next release.
Work on strings instead of binary in Python3Running word2vec_basic on Python3 gives silly byte-ish output since it reads the sentences as binary:
R0.8No description provided.
Push changes from internal: 123818693No description provided.
Added iOS example using the cameraNo description provided.
Fix setup for development link step.Can one of the admins verify this patch?
Merge pull request #1 from tensorflow/masterupdate from origin
"Enable tf.rank() for SparseTensorAdded an override for tf.rank(), that takes care of SparseTensor objects as well. Added tests and verified locally. This partially addresses #1968."
fix typo in setup for developmentNo description provided.
"Immediate Mode execution in tensorflowImplementation of immediate mode execution in TensorFlow. The idea is to wrap original tensorflow API, but provide session/run management logic so that commands execute immediately, and graph caching to avoid modifying graph when same op is run repeatedly. Data is kept in TensorFlow runtime whenever possible using persistent tensors and transferred to Python runtime on demand when needed for printing/control flow."
"Cherry-pick internal change: Reduce computation load in metric_ops_test to prevent timeoutThe test methods named ""testWithMultipleUpdates"" in test classes ""StreamingAUCTest and ""StreamingPrecisionRecallThresholdsTest"" previously used a large number of samples (5000), which lead to repeated test timeouts in non-copt builds in TensorFlow's OSS Jenkins. For example, see:http://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=NO_OPT,TF_BUILD_IS_PIP=NO_PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/111/console"
dynamic splitNo description provided.
Added Raspberry Pi cross-compilation support to makefileNo description provided.
Add links to nightly Python3.5 builds and artifactsIncluding links to build history and whl artifacts
"Revert changed bracketsI was a bit overzealous in 62f76be and changed [] to () where it wasn't appropriate.
This PR reverts that change."
"Implement bidirectional_dynamic_rnn (#1779)In #1779, it seems that the problem of implementing bidirectional version of dynamic_rnn is that tf.reverse_sequence cannot reverse a sequence whose shape is unknown.
However, now it can reverse an unknown-shaped sequence according to #1816, so I implemented the dynamic version of dynamic_rnn and its tests."
"Update RNN PTB example to use state_is_tupleCurrently, the PTB example emits warnings that using without state_is_tuple would soon be deprecated.
It can confuse newbies (like me), so it would be nice to use the one that makes no warning."
fixed atrous_conv2d to work with unknown shape of the input tensorNo description provided.
"Support GIF image decode ops by FreeImage libraryUse FreeImage library to decode GIF images. This is the initial commit with simple implementation first, will add more features and optimize later. Thanks."
"Remove unnecessary check from docker_run_gpu.shdocker_run_gpu.sh was checking for /usr/local/cuda, which is not the default install location on ubuntu 16.04. The check was not being used by anything else anyways, so removing."
"Correct resnet.py and hdf5_classification.py1. Update tensorflow/examples/skflow/resnet.py
move ""upscale to the next block size"" to the outer loops2. Update tensorflow/examples/skflow/hdf5_classification.py
classifier.fit and metrics.accuracy_score takes ndarray as input.
Direct input of HDF5 dataset will cause TypeError: PointSelection getitem only works with bool use HDF5 dataset's value or convert to numpy array"
"Enable segment reduction ops for complex numbersI've enabled segment reduction ops for complex 64 and complex128 on the CPU,
in order to bring their behavior in line with the regular reduction ops.
Only sum and prod reductions have been enabled, as min and max are not
appropriate and mean would require changes to the code and is probably
not worth it."
add sparse gradients support for RMSPropOptimizier#2476
"Fix python3 incompatibility in encode_audio_op_test.pyThis fixes test failure as in: http://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=cpu-slave/108/console
Change: 123507798"
Fixed up include paths for iOS exampleNo description provided.
"Added iOS exampleThis change adds in an example of using the static library generated by the makefile in an iOS app, and allows optimization flags to be passed to the makefile on the command line."
Push changes from internal: 123496073No merge conflict.
added Install instructions for OS X GPUfor issue #2522
cuda 8 api uses cudaDataType for 16bit float typeNo description provided.
cleans up warning/errors tensorflow/stream_executorCan one of the admins verify this patch?
"[WIP] [tf.learn] API restructureAPI restructure to unify pieces and support a wider variety of models (such as multi head, unsupervised, etc)"
[tf.learn] Added Mnist example that uses RNN model.No description provided.
"Work around for problem with Thumb linkingThere's an occasional problem with linking armv7 code with the makefile, which results in a bogus linker error. One way around it is to disable Thumb code. See https://discussions.apple.com/thread/6037322?tstart=0 for more details."
"Updated Eigen version in MakefileThis cleans up assignment in the makefile, and switches to the latest Eigen version."
grammar/typo: \like variable\ -> \like a variable\No description provided.
Improve complex128 support (again)This PR adds complex128 to various places where it was still missing (mostly tests and docstrings).
"Add meshgrid functionI needed to use something similar to np.meshgrid in tensorflow and decided to write my own version.
This can be implemented in pure Python by making use of tf.reshape and tf.tile.
I've placed the function in array_ops.py and added a simple test that compares the output to the numpy version."
Base mergeNo description provided.
Upstream changes from internalNo description provided.
Enable complex number types for tile opI've enabled complex64 and complex128 on the CPU for tf.tile and added them to the tests.
"load the  readable dataBy doing so, num_images will always equal to len(image_files).
So  the code here, dataset = dataset[0:num_images, :, :] cannot  select the valid (readable) images.
But from the output, it works just fine.
Why it work fine??
I think the job can be done by the following code."
[tf.learn] logic for pandas import and fixed test@martinwicke Seems like tests are running automatically for me now?
"Remove --recurse-submodules from docsNow that #1289 has been merged, the documentation for master doesn't need the --recurse-submodules argument to git clone unless cloning earlier releases."
fix missing cudnn dependenciesThis is the simplest solution to fix missing cudnn dependencies.  Just use the devel image from nvidia/cuda
Upstream changes from internalNo description provided.
Merge changes from internalNo description provided.
Remove unnecessary args from gpu small test suiteNo description provided.
Upstream changes from internalNo description provided.
examples/udacity: Ignore dataNo description provided.
Upstream changes for 5/25/2016No description provided.
Enable GPU for Matmul float64Enabled GPU registration for MatMul operations of type double. This partially addresses #1140.
Add genrule_strategy=standalone to bazelrcFixes #2499 (hopefully)
Push changes from internal: 123201123No conflicts to resolve.
Upstream changes from internal for 5/24/2016No description provided.
Truncate random seed to fit into int during protobuf serializationFixes #2460
updated README fileNo description provided.
Modify zero_state to work with MultiRNNCell when state_is_tuple is True#2463
Fix wrong bazel test target in ffmpeg integration_testNo description provided.
Upstream internal changes for 5/23/2016No description provided.
Go bindingsNo description provided.
Fix typo in the instructionparamter => parameter
python 3.5 compatibilityadding comment to see if it triggers the CLA bot
Add x permission to parameterized_docker_build.shNo description provided.
Learning rates based on Karpathy CS231n lecture 6Continuation of #1512@vrv seems like I can test now.  Updated the pull request as you suggested.  Please let me know if you have any comments.
Branch 122885116No description provided.
"[tf.learn] Fix logistic_regression() summary name conflict.If you call logistic_regression() more than once in the same model, you get this error."
"Add a new contrib/avro directory and initial schema for tf.Example.Since Google Cloud Dataflow has native support for Avro, we'd like to add Avro support to TensorFlow so that Google Cloud users can train directly on their Dataflow output."
Add piecewise constant opThis should close #2432
"Experimental makefile supportI'm working on automatically generating a makefile from our Bazel dependencies, to make it easier to cross-compile for mobile platforms, and build on systems that can't handle Bazel's resource requirements or dependencies. Supports OS X, Ubuntu, iOS, and Android currently."
"Add quick link to check compute capabilityThe same link also appears under ""Configure TensorFlow's canonical view of Cuda libraries"", but people might overlook it."
Typo fix in master_session.cc commentJust a typo fix.
sync with supported data types in cwise_op_*.This is an updated version of PR #2244 after the comp128 support from @ibab and based on comments from @girving and @zheng-xq.
Branch 122741738No description provided.
Push changes from internal: CL 122636949No description provided.
R0.8No description provided.
"Add more changes for complex128 supportThis PR contains all ops from @hunkim's #2263, rebased on master with a few adjustments.
I've extended all relevant tests, and added a few more ops that were missing from the PR above.
With this PR, support for complex128 is almost finished (documentation changes and a few ops are missing)."
Testing new Eigen version in isolationChange: 122462177
Branch 122541517To sync @nsthorat
Updated installation instructions for conda.This PR updates documentation of installation instructions for conda users.
add complex64 support to tf.diag#1783
Push changes from internal: 122460440No description provided.
Push changes from internal: 122444497No description provided.
R0.8No description provided.
Add float64 to _valid_dtypes in OptimizerAdded float64 to _valid_dtypes in class Optimizer(). Tested locally.
"[skflow] Added support for different parameters per layer in dnnAdded support for per layer configuration of activation function and
dropout probabilities. Example usage as per following code:"
"[skflow] Added verbosity support to Validation monitorAim of this diff is adding verbosity switch to Validation monitor class,
whcih previosly had none (It was automatically set to level 1)."
Enable password support for Jupyter in a Docker imageThis small update enables Jupyter to support passwords passed as an environment variable when instantianting a docker container.
Match conv2 weights stddev with cuda-convnet's layer def.conv2 initW is 0.01 in cuda-convnet.
"Typo fix for comment in worker.protoTypo fix, nothing more."
Fix typos in API docs and Python docstring for ExponentialMovingAverage object.No description provided.
Fix incorrect buildozer rule for contrib/ffmpeg/BUILDThis should fix a integration test failure in nightly builds.
Fix incorrect buildozer rule for contrib/ffmpeg/BUILDNo description provided.
Merging internal changes to githubNo description provided.
Enable GPU for SoftmaxCrossEntropyWithLogits float64Enabled GPU registration for SoftmaxCrossEntropyWithLogits operations of type double. This partially addresses #1140. Tested locally.
Enable GPU for L2Loss float64Enabled GPU registration for L2Loss operations of type double. This partially addresses #1140.
fix shuffle_batch zero_division bugfix #1853
A couple of bugfixesfixed wrong indexing into dict; every picture is read into 3 channels even if input is grayscale; loaded jpeg is read as rb buffer.
Set -headerpad_max_install_names on Darwin for targets that need binary header padding to rename pathsFixes #2332
Basic implementation of immediate execution mode for TensorFlowThis version implements Immediate execution for native TensorFlow ops with graph caching:
Enable GPU for MatMul float64Enabled GPU registration for MatMul operations of type double. This partially addresses #1140.
Upstream changes from internalNo description provided.
python 3.5 compatibility and remove unused importsNo description provided.
python 3.5 compatibility and better display effectNo description provided.
"Update seq2seqThis PR brings updates to the seq2seq examples, removing all of the with ops.device(""/cpu:0""):."
"Set workspace nameAdds the workspace name to runfiles paths, removes a hack introduced in8cda66e,
and fixes #2040."
Additional instructions on how to fix missing submodulesThis adds a better hint on how to fix a repository that was cloned without --recurse-submodules.
"Confusion with QueueRunner docWhen reading the threading_and_queues how_to and the doc of QueueRunner the phrase ""repeatedly run an enqueue op"" confused me.
I think these minor changes would save others a few minutes of confusion."
"Fixed Tensorboard minimap not being drawn on Safari (OS X, iOS)Fixed Tensorboard minimap not being drawn on Safari (OS X, iOS)
Tested on Chrome (OS X), Safari (OS X, iOS)"
Branch 121885139Merge Google changes into open-source.
"Fix botched merge in conv_grad_ops.cc.We returned in the wrong location, so that we ended up doing twice the
work: the optimal gemm and then the suboptimal conv (for 1x1 filter)."
update local repoNo description provided.
Fix distributed example code documentCurrent distributed document of example code is invalid. Simply fix it.
[tf.learn] Remove accidentally repeated codeTried to fix #2198 but I guess I'll fire a separate PR when I get a chance
"Add parameter to specify inner activations for rnn cellsAllow to specify activation function of inner states for GRU, BasicLSTM and LSTM cells. The paramter defaults to tanh so that existing code does not need to be changed. This is equivalent to the activation parameter for GRU and the inner_activation parameter for LSTM in Keras and the activation parameter for LSTM and GRU in Theanets."
"Added comments to clarify how/why the embeddings are being minimized.Reason for commit: For a student who has been going through the udacity examples, this particular use of the minimize function is a bit confusing as its difference between the previous examples is subtle. To the student it appears that only the softmax weights are being modified."
"[tf.learn] Support HDF5 in tf.learnSee issue #2089
cc: @ilblackdragon"
Markdown links using `[This link](http://example.net/)` syntaxNoticed these spots are using a syntax similar to markdown links but weren't rendering in the markdown under g3doc.
"Renamed `vocabulary_size` to `character_set_size`.  \Vocabulary\ mean…s ""a set of words"" not a ""set of characters"" and thus the variable name was misleading."
Add x permission to integration_tests.shAccidentally removed x permission in commitce575f1
Parameter keep_prob now dropoutSeems as parameter keep_prob is now called dropout. Because of the comment above I'm pretty sure droupout is meant.
"Add complex128 supportAdded the complex128 support, based on the guidance from @girving and others in PR #2244. All tests (in CPU) including backwards_compatibility_test are passed! I couldn't test the GPU version."
"Add complex128 supportAdded complex128 support, based on the guidance from @girving and others in PR #2244. All (python) tests passed."
Branch 121719728Merge internal changes
Fixes for protobuf changesNo description provided.
"Update os_setup.mdFrom PR#2095, I've checked command to Installing from sources on OS X."
R0.7No description provided.
fix compile issue on os xfor issue #2243
add test fileadd test file for test
Branch 121636618Merge internal changes.
"Updated API docs to sync with supported data types in csiwe_op_*.Based on excellent comments from @yaroslavvb and @zheng-xq, this PR changes API docs to sync with supported data types in csiwe_op_*."
"Merge changes from the last several daysThis was a pretty hard conflict to resolve from internal to external, so we'll see if I did it right."
"Fix Issue  #2225 InvalidArgumentError: No OpKernel T=DT_INT32 for log, exp, etc.This PR fixes  #2225,  InvalidArgumentError: No OpKernel T=DT_INT32 for log, exp, etc."
Fix links inside distributed/index.mdNo description provided.
Add port mapping in the setup documentation to make sure Jupyter notebook server port is exposed.Need to add -p 8888:8888 to expose the port to host in the Docker documentation.
"API Doc: Moved the usual termination code into a finally blockMoved the usual termination code into a finally block so that the code can be executed even when SystemExit, KeyboardInterrupt, GeneratorExit raised (These exceptions derive not Exception but BaseException.)"
Correct RunConfig example linkNo description provided.
"Fix init value in inner_productinner_product accumulates into the type of the initial value
meaning that the result actually has type int instead of int64.
This will lead to truncation errors resulting in invalid writes
on buffers larger than 4GB."
"Add support for 3d convolutionsThis patch is a WIP, but adds functionality for 3d convolutions as requested in #150."
[WIP] Initial proof-of-concept NodeJS binding.Retrieves the tensorflow versions string.
Added a function to report download progress of the MNIST data on the… first Udacity example. This commit is primarily intended for users with slow internet connections.
Added a function to report download progress of the MNIST data on Uda…city example.  This commit is primarily intended for users with slow internet connections.
add check for read only filesystemNo description provided.
"Change gpu_device.cc so that per process fraction uses total memory fraction, not available memoryThis change is for making the memory allocation from the whole memory not only the remaining memory to achieve better configuration for multi processes"
Adding validation_steps and batch_size to VaidationMonitorThis allows to do less frequent and mini batch evaluation while training.
"Typos in the example. Their shape [4, 4, 1] is fixed to [1, 4, 4, 1][4, 4, 1] is fixed to [1, 4, 4, 1]"
"Fix convert_to_tensor error in tf.one_hotAddresses more issues found in #1799. When a user passes in a TensorFlow constant that is not of type tf.int64 for indices or type tf.int32 for depth, one_hot() throws a ""Tensor conversion requested..."" error due to using convert_to_tensor for those parameters. This PR addresses this by using tf.cast() instead for indices and depth."
"Added clear description: -1 can also be used to infer the shapeThe current description, ""also be used with higher dimensional shapes"" is not very clear."
"In the doc example, commas in tensors are missing.Missing commas in the doc example are added to show tensors more precisely. Also, they are now consistent with other reshape examples."
added cuda/extras and cuda/lib to gitignoreon OS X these folders need to be gitignored
Fixed a typo: a -> tensorFixed a typo in the API doc.
fix typoNo description provided.
Remove loading sklearn even if it's present and only load when env flag is setRef #2034 to reduce load time of import tf when people are not interested in tf.learn / sklearn integration.
"Import numpy before a call to sys.setdlopenflagsMust import numpy before a call to sys.setdlopenflags, or there may be a segfault in certain situations. Fixes #2034."
"Blacklist py tests in python/platform/defaultThese tests are superseded by the corresponding ones in python/platform
in the OSS tests. They are currently used only internally and will be
eventually removed in the future."
"Fix variable names on confusion matrix metricConsidering that tensorflow metrics documentation states that every metric receives the parameters predictions and labels, this merge request fix the name of one of the confusion matrix variable, which is named ""targets"" and now is named ""labels""."
"build doc enhancementbuild doc enhancements, described in #2083. @vrv , this is to replace #2113 , solved conflicts."
"bug fix in ApplyAdadelta update ruleFollowing the Zeiler ADADELTA paper (http://arxiv.org/pdf/1212.5701v1.pdf), numerator of update equation should be RMS(accum_update) * grad. The code previously did not perform the RMS operation."
internal to github 2016/4/28No description provided.
fix scaler transform in boston skflow examplefit_transform was being used instead of transform for the test set in the boston example
"corrected a one_hot example, fixed mark down formatsThis PR corrects a one_hot() example, additionally fixes mark down formats."
"Fix typos in example 'adding an op'The colons after @tf.RegisterShape(""ZeroOut"") should not be there."
R0.8No description provided.
Remove unused os importNo description provided.
[WIP] TensorFlow Studio prototypeFor now:
Issue 2066: Fix the conv for stride > ksize case.Issue 2066: Fix the conv for stride > ksize case. Passed all the tests and locally verified it fixed the problem.
internal to github 2016/4/27No description provided.
"Fix sec_per_batch in a multi-GPU CIFAR-10 exampleIn a multi-GPU CIFAR-10 example, 'sec_per_batch' should be computed in the same way as a single GPU example. It's identical with the inception-v3 example."
Ref #2063: Adding validation summary writer in ValidationMonitorNo description provided.
Branch 120862895No description provided.
internal to upstream 2016/4/26No description provided.
Change from using platform.default._gfile to platform.gfile in learn …datasets
"Don't reimport numpy from py_funcNumpy is supposed to be imported only at module initialization time.
Fix this by factoring our numpy import logic into lib/core/numpy.{h,cc}
and using from both tf_session_helper.h and py_func.h."
"build doc enhancementsbuild doc enhancements, described in #2083"
Branch 120798893No description provided.
update configuration in os_setup.mdupdate configuration in os_setup.md according to master branch
"only update batch norm averages during trainingaccording to #1724, a node that is meant to only run in one state of tf.cond needs to be defined inside that conditional function."
Branch 120750153No description provided.
Those aren't floats...Am I misunderstanding something here? I fail to see floats.
Branch 120724543No description provided.
fix missing import `monitors`No description provided.
Update os_setup.mdFixed command to Installing from sources on OS X
"tensorflow.bzl: strip bazel version number to work with patch bazel releaseThe newest bazel version number is 0.2.2b, when need to strip 2b"
Some Sampling Opsissue: #565
Fixes #2063 not displaying loss in tensorboardMerge summaries after optimizer adds loss and gradients summaries.
[tf.learn] High-level DNNAutoencodercc: @ilblackdragon
Merge 0.8.0rc --> 0.8.0 version bump to masterCherry pick of version bumping for 0.8.0 final release (#1959)
Merge r0.8 to masterMerge r0.8 final release to master
"conv_grad_ops: return after setting error statusIf cudnn/cublas fails to launch, we should just error immediately."
Fix markdown syntax of skflow README.mdI find it very inconvenient since links are not clickable and code blocks are not highlighted.
"Attention Mask OpsThe current attention seq2seq example (i.e., in seq2seq.py function attention_decoder) has a bug. The code (quoted below):"
remove unused array assignmentThe array in
Add a link for installing from sources in os_setup.mdAdd a link for installing from sources in os_setup.md
"solve compatibility issue for ubuntu 16.04Ubuntu 16.04 LTS has update default gcc to 5.3 and string.h as well, even we install a gcc-4.9,
we will get a bug like"
"FIFOBucketedQueueNew FIFOBucketedQueue! This queue is similar to the existing FIFOQueue but w/ buckets. This allows you to use the same graph for all your buckets rather than creating multiple graphs for each bucket (i.e., as shown in the TF examples for seq2seq). The main advantage is having a single graph (makes creating a graph much faster and simplier python code). Finally, for those unfamiliar w/ bucketing, see Sutskever et al., 2014 ""Sequence to Sequence Learning with Neural Networks"", it is a strategy to sample by say sequence length to reduce the variance of each minibatch, and consequently be much more efficient in computation (at the cost of losing uniform sampling, however this doesn't seem to be a big problem w/ large datasets)."
Update cuda instructions to be more specific about versions (#2065)(cherry-pick of change to r0.8 branch)
Update cuda instructions to be more specific about versionsNo description provided.
Add caffe importer to resourcesNo description provided.
use cudnnGetErrorString to get cudnn error stringthe built-in cudnnGetErrorString does exactly the same as the ToString helper
Merge internal changesNo description provided.
Remove duplicate wordsThis PR simply removes duplicate words.
R0.7please i want download tensorflow data
FixNo description provided.
Update commentmodify the comment to link the right arxiv paper on Adadelta
"Fix Anaconda install instructionsChange to install python 3.4, and change title for consistency. Fixes #1990."
Upstream changes from internalNo description provided.
set cudnnSetFilter4dDescriptor format using filter layout for cudnn_v5CUDNN_TENSOR_NHWC the only other cudnn filter format is still not supported since kInputYXOutput would correspond to CUDNN_TENSOR_CHWN which doesn窶冲 exist
One more version update for 0.8.0 finalNo description provided.
Fix wrong docstringThe keys in the _word2id are bytes literals.
R0.8 tensorforest cherry-pickThis PR also contains a small amount of other changes pushed from internal.
Fix wrong docstringThe keys in the _word2id are bytes literals.
Doc changesNo description provided.
"docs only: removes sudo from pip/easy_install in instructionssudo, where removed in the below instances, is superfluous, nonstandard, and is not a sensible default.  When using a virtualenv or similar, this can cause unsafety later on. Below examples work when pip/easy_install/npm are installed in userland. pip will complain if it needs root."
"fix index.md & add png files at \tensorflow/tensorflow/g3doc/images\When I review TF tutorial using Github website at index.md on ""tensorflow/tensorflow/g3doc/tutorials/mnist/beginners/index.md""
There are no image on index.md and others"
"Updated docstrings to link to descriptions of padding algorithms.It took a bit of searching to find out what these terms ""VALID"" and ""SAME"" meant, so I put a link in the docstring."
Merge internal changes.No description provided.
Include TensorBoard TAG in pip_packageNo description provided.
Add mavx/mavx2 switches to ci_parameterized_buildNo description provided.
Duplicated descriptionNo need to point out twice.
[skflow] Added additional callbacks for monitorcc: @ilblackdragon
"LSTM*BlockOp: Monolithic kernels for the LSTM, approx 40-50% faster.These are monolithic OpKernel for LSTMs. Compared to python BasicLSTMCell impl on 1 layer PTB this is a 40-50% performance difference on Titan X. Also, this is much more efficient if you want to create extremely large graphs with thousands of timesteps (i.e., replace many simple ops with 1 op in the graph)."
Make \Get Started\ example Python 3 compatibleNo description provided.
Add confusion matrix to tensorflowThis MR add a confusion matrix implementation for tensorflow. The function is named confusion_matrix and is a metric operation.
Update RELEASE.mdTook out James Wexler (Googler) and added Yuan Tang (not Googler).
(Do not merge - developing) Add tests for user opsas a part of test-on-install in pip.sh
"Fix SAME padding calc when stride>ksizeAdds a failing test case for conv2d ksize=1, stride=2, padding=same, input=4x4"
Fix docstring of dynamic_rnnminor docstring fix: time_major = True avoids extra transposes in dynamic_rnn
"Stream Executor: perform a cudnn library vs. binary check, add relu6/x support.During initialization, we check whether the loaded version
of the cudnn library matches the version of the library that
the binary was compiled against.  When there is a mismatch,
throw an error."
Add a comment to install mentioning cuda and cudnn requirements (#1985)for PIP installs.
Add a comment to install mentioning cuda and cudnn requirementsfor PIP installs.
add a reference for Caffe in tutorialadd a reference for Caffe in deepdream tutorial
fixed broken links and markdown stylingfixes #1970
Fix tb r0.8No description provided.
"Revert change to r0.8 branch that points to new URLsThey haven't been uploaded yet, and so our website is pointing people at the wrong location."
add a reference for Laplacian pyramidadd a reference for Laplacian pyramid
master: Fix TensorBoard README url for demo TensorBoardNo description provided.
r0.8: Fix the TensorBoard README.md url for demo TensorBoardNo description provided.
trivial typo in ci_build READMEbellow -> below
Merging changes from internal.No description provided.
"Fixed bug in `tf.train.ClusterSpec` constructor.Creating a tf.train.ClusterSpec from another ClusterSpec was broken,
which in turn broke creating a tf.train.Server from a ClusterSpec."
add a wiki reference for partial differential equationadd a wiki reference for partial differential equation
add a wiki reference for Mandelbrot setadd a wiki reference for Mandelbrot set
Add setup instructions for Anaconda Python distributionThese instructions show how to install tensorflow with the Anaconda Python distribution.
Version bumping for 0.8.0 final release0.8.0rc0 --> 0.8.0
add a reference for `building from source` and `bazel`add a reference for building from source and bazel in RNN tutorial
add a reference for dropout in mnist tutorialadd a reference for dropout in mnist tutorial
R0.8No description provided.
deepdream: fix trivial typosThis pull request fixes trivial typos under deepdream/ directory.
Fix small typo in pooling_ops_test(not related to pull req #1868)
Added dbpedia to learn.datasetsUpdated examples to use it. Updated examples to use mnist and iris datasets as well. A bit of clean up to use correct rnn_cell and rnn.
"Update the documentation of sparse_softmax_cross_entropy_with_logits()With @fd839dc, sparse_softmax_cross_entropy_with_logits() was extended
to allow the type of labels to be int32."
Cherry-pick tensorforest internal bug fixesMerge internal changes
Fix TensorBoard lib/css dependency (#1926)Cherry-picked from master branch.
Adding rx.y pattern to update_version.shStrings fitting this pattern will be updated if there are major.minor changes.
add a reference for Penn Tree Bankadd a reference for Penn Tree Bank dataset in RNN tutorial
Duplicated codecheck two times.
Fix typo in batch normalization documentationNo description provided.
"Add further changes for complex128 supportI'm now back to working on extending the existing ops to support complex128 where appropriate.
This addresses #1517."
Fix TensorBoard lib/css dependencyNo description provided.
Fix TensorBoard by depending on the lib/css file properlyNo description provided.
Merge r0.8rc0 changes back to masterNo description provided.
Applying editorial changes to the distributed how-to.Also fixes a couple of incorrect names in the code examples.
Update 2_fullyconnected.ipynbNo description provided.
add a reference for logistic regressionadd a reference for logistic regression in word2vec tutorial
switch docker links from b.gcr.io to gcr.ioNo description provided.
switch docker links from b.gcr.io to gcr.ioNo description provided.
fix python wheel linksNo description provided.
image_retraining: fix trivial typosThis pull request fix trivial typos under image_retraining/ directory.
"tv.Variable doc: fix typo'b' does not exist in the example, probably 'y' was meant."
add a reference on log-likelihoodadd a reference on log-likelihood in word2vec tutorial
Run C++ gendocsNo description provided.
fix ppa repositories in ci_buildfix debian build
update more places with version to 0.8No description provided.
Merge internal changesNo description provided.
Marge internal changesNo description provided.
Update roadmap.mdNo description provided.
R0.8 Release notesNo description provided.
Make sparse_tensor_dense_matmul_op_test mediumNo description provided.
Fixes for releaseNo description provided.
"Fix bugs in the indexing operator with latest NumPynp.random.random_integers() is deprecated and recently started returning non-int values. This PR fixes this so that the tf.Tensor indexing operator can handle non-int (but convertable-to-int) values, and removes the deprecated method from the test."
Gradient and unit test for MatrixTriangularSolve and BatchMatrixTriangularSolve opsSee issue #1875 for some discussion with @girving .
Make diag_op_test fasterRemoves high rank and large tensors from the test.
Adding a link to the playgroundNo description provided.
Make diag_op_test fasterRemoves high rank and large tensors from the test.
"Fix chat link at start of READMEOriginal formatting for this link included the pipe character at the end, so that clicking it would lead to a 404. The more explicit URL formatting makes it so that clicking the link leads to the correct chat room."
Bumping version: 0.7.1 --> 0.8.0rc0Preparing for RC0 of 0.8.0
Bumping version: 0.7.1 --> 0.8.0rc0Preparing for RC0 of 0.8.0
"make the formula to be centralizedremove the period after the formula to make the formula centralized, so it can be consistent with other formulas"
Adding server/Dockerfile.test to versioning rollNo description provided.
"Word2vec basic show id and word togetherWhen I first read the output, I spent a lot of time to understand these numbers to match them. Now, words along with the ids clearly show what's going on in the sample data and prediction pairs."
add reference for CBOW and skip-gramadd reference for CBOW and skip-gram in word-vec tutorial
skflow: trivial fixupThis pull request contains trivial fixup for examples/skflow.  It removes mistakenly added files that related with merge conflict and fix trivial typos in comments.
Fix trivial typos in source codes / commentsCan one of the admins verify this patch?
"Add QOL improvements for tf.one_hot()This commit adds a Python wrapper for tf.one_hot(), and introduces two
main, backwards compatible, improvements, as mentioned in #1799:"
"Fix conv2d with kernel 1x1 stride > 1Fixes #889 - seems the problem was an optimization to call directly into cublas when the kernel is 1x1. I suspect that was meant for 1x1 and stride 1, as it calculates the wrong thing with stride2. This adds 3 tests - two that demo the bug, one that I did while debugging but figured to submit too for extra coverage."
Fix typo in Mechanics 101 tutorial to match recent code.No description provided.
Fix a typo in Mechanics 101 tutorial to match recent code.No description provided.
Merge internal changesNo description provided.
Moved mnist reading from input_data in tutorial to learn/datasetsNo description provided.
Merge internal changesNo description provided.
Merge internal changesNo description provided.
"Link to active linux GPU nightly build (#1859)The Linux python 2 build appears to have been moved to another jenkins job, and the link was stale. This link came from @vrv, in the linked issue (#1859)."
"Fix \naming\ anchor in \Adding an Op\ How-ToThe file had a braces-style declared anchor, {#naming}, which wasn't
being rendered or pre-processed properly. This changes it to an HTML <a>
tag. This should also fix the broken link pointing to this section on
line 874 in the same file."
Update update_version.shNo description provided.
R0.7I need this code to learn tensorflow so please allow request
fix ppa repositories in ci_buildThose repositories are just workaround for old versions of libraries on old ubuntu (trusty). Those ppas do not make sense on newer ubuntu or debian.
Update word2vec.pyMakes it consistent with line 516.
"Creating a FFmpeg library along with a test … that will work whether or not FFmpeg is installed on the machine running the test. This also creates a set of integration tests that will be run during the nightly build.
Change: 119061788"
"Modified tests for gradientsWhile implementing gradients for some new functions, I forgot to propagate the grad argument in the definition of the derivative in tensorflow/python/ops/math_grad.py. The wrong implementation passed all the tests because the derivative of the function is evaluated in isolation."
add a multi-gpu version link in tutorialadd a multi-gpu version link in the deep-cnn tutorial
"Fixed a typo. It should be x (not b).I think it's should be x, not b."
Fix two typos in API docs for ExponentialMovingAverage.No description provided.
Let reshape guess the dim.Let 'tf.reshape' guess the dim and use it.
Changed the dim computation in a compact form. It is also very easy t…Changed the dim computation in a compact form.
Add polygamma and zeta function to tensorflowThis PR adds the polygamma and zeta functions as discussed in #1741. It also implements the derivative of the digamma function. Tests are provided and can be run provided scipy is installed.
[Skflow] Move skflow to learn and make it available by default.Builds on top of #1832
[Skflow] Fix imports to use specific tf modules... and added skflow to default import of contrib.
[skflow] Change batch_norm defaultNo description provided.
"[Skflow] Make sklearn not mandatory dependencyTo include skflow by default in the tensorflow, making sklearn non mandatory dependency."
Upstream changes from past few daysNo description provided.
add a reference for TensorBoard in tutorialadd a internal reference for Tensorboard where it first comes out in cnn tutorial
Clarify attention_decoder documentationNo description provided.
add reference for several concepts in tutorialadd a wiki or quora reference for several concepts in cnn tutorial
add a wiki reference for CNN in tutorialadd a wiki reference for CNN in tutorial
Added support for unsupervised data feederNo description provided.
Update skflow READMEI will make a note in tensorflow/skflow to direct new users to post issues and PRs here instead.
add Gradient Descent reference in tutorialAdd a wiki reference for Gradient Descent in TF mechanics 101
Update tensorflow to use new version of protobuf libraryThis is necessary to remove the need for libpthread workarounds when building binaries for Android (as seen in tensorflow/examples/android/BUILD).
Add Cuda/Cudnn version requestHelps with GPU issues.
Attempt at adding support for cudnnr5 API only (no LSTM/RNN additionsyet).
Add reference for ReLu in tutorialAdd a wiki reference for ReLu in tutorial TF mechanics 101
Add missing parenthesis in descriptionNo description provided.
"Switch to pass graph instead of GraphDef to summaryWriterSimple change since GraphDef is deprecated
cc: @ilblackdragon"
refactor learning rate related code for the optimizersThis is one step forward to solve #313. It's overshot to use multiple optimizers just for different learning rate.
"Add footnote about dropout in MNIST tutorial for expertAdd footnote about dropout in MNIST tutorial for expert, this is to replace #1710@Sohl-Dickstein ,please check this, thanks"
"Fix Typo in TF Mechanics 101 TutorialIn the section of Inputs and Placeholders, the IMAGE_PIXELS should be mnist.IMAGE_PIXELS"
Remove `as` for `import` in testsThey are redundant here.
Upstream changes for April 4thNo description provided.
"Go APIHello,
During the last weeks I have been working on this implementation of the Go API. This is still a work in progress, I'm doing this PR just to show what I'm working on and to get feedback."
Fix a missing pylint whitelist item in ci_sanityAlso removed an obsolete TODO item.
Update TF 101 Tutorial to match recent codeThis patch updates two portions of the TensorFlow 101 tutorial:
Add missing parenthesis in descriptionNo description provided.
issue #1760 fixedthis fixes issue #1760
Upstream changes from internal for April 2nd weekendNo description provided.
"[WIP] CuDNN Batch Normalization OpThis pull request is a WIP for adding a cudnn batchnorm op that works on NCHW data layout. Others and myself (#1502) have noticed very poor performance. Currently, the code is very rough and is just enough to do performance evaluations."
fix cuda warningI see this error message when compiling with nvcc 7.5
correcting bottleneck residual functionAs described in He et al. [1] the first 1x1 convolution inside the bottleneck architecture reduces the dimension to save FLOPs. Hence the correct number of filters is block.bottleneck_size instead of block.num_filters.
Refactor skflowSo far:
Upstream changes for april foolsNo description provided.
Update README.mdNo description provided.
Fix links to nightly gpu build for python 3No description provided.
Fix Linux CPU Tests CMAKEChanges:
Upstream changes from internal for March 31No description provided.
[skflow] sklearn dep version check fixcc: @ilblackdragon
grammar update in TensorFlow mechanics 101 indexNo description provided.
"update description for Tensorflow Mechanics 101 TutorialI changed: ""We use again MNIST as the example."" to ""We again use MNIST as the example."" as this seemed to make more sense."
"Add getting started doc for skflowThis is a slight revision of the previous version of the skflow readme, which is still in the skflow repository"
TensorFlow: fix python3 with GPU test failures.python3 compatibility is so annoying.
"Add support for development version of Bazel when detecting the versionDevelopment version of Bazel (especially built on ci.bazel.io) are setting their version to empty, making the test fails with error."
[bugfix] chase version to tensorflow/workspace.bzlFix #1720 . With original version we will have errors like:
"Reduction of CPU test time for cwise_ops_test and rnn_test.Reduce test scenarios for CPU-only tests by checking for whether
cuda has been enabled in the binary to avoid running CPU tests twice."
Merge changes from internal for March 30(Resolved conflicts hopefully correctly this time)
Upstream changes from internal for March 30No description provided.
"Update index.mdchange the code style to bash
At before, it's quite like a sentence but not a command, especially in the following link:https://www.tensorflow.org/versions/master/tutorials/mnist/tf/index.html#tensorflow-mechanics-101"
Update to correct method name in local exampleThis is to help #1713
Update to correct method name in local example.There is an error in the current distributed TensorFlow documentation which caused me a little trouble when verifying that installation was correct.
Skflow fix importsCurrently from tensorflow.contrib import skflow doesn't import all the things. This adds __init__.py files to the BUILD file and correct absolute imports.
"move dropout to later chapters where it can truly work@Sohl-Dickstein
This is to replace #1620 ,
remove dropout in the very beginning tutorial on MNIST since it doesn't work in that network architecture,
and move it to Tensorflow Mechanics 101, where it can truly work and we give more detailed explanation on dropout:"
Update build_pip_package.sh for generating a tarballUpdate build_pip_package.sh for generating a tarball
"update tensorflow mechanics 101 index.mdUpdate tensorflow mechanics 101 index.md according to the fully_connected_feed.py.
Now we don't need sess.graph_def but only need sess.graph."
rename var mu to learning_rateTrying to resolve some problems with commit...done
Revert \mu to learning_rate\Reverts #1638
Upstream changes from internal for March 29No description provided.
Revert \Fix wrong parenthesis.\Reverts #1648 -- it's breaking the mac build
"Update fully_connected_feed.py""os.path"" and ""numpy"" were unused, so I removed them.
The tfevents-output-file was not completely written in IPython, so I added ""summary_writer.flush()"" to fix it."
[skflow] Fix skflow imports in examplescc: @ilblackdragon
"Fix typos in messagesIt's ""overwriting"", not ""overwritting"". Also fixed missing space after a full stop."
R0.7No description provided.
fix mem leaks for dynamic rnnFix mem leaks in tensor array and stack.
"replace googlemock source from google site to github@vrv , this is to replace #1673"
"Re-add ability to check for a specific bazel versionI tested this by upgrading to bazel master -- when i set minimum version to 0.2.1, it failed, and when I set it to 0.2.0, it passed.  Setting it to 0.1.4 currently also passes."
"Update os_setup.mdActually these two lines are still bash commands,
although it has python convolutional.py, but python setup.py develop at before is also defined as bash
besides, using python make the $ becomes red which is not consistent with other commands"
Revert \Add ability to check for a specific bazel version. Supports\Reverts #1679
Upstream changes from internal for March 28No description provided.
"solve a building bug on bazel version requirement@vrv
today I also update bazel to newest master version, and when I rebuild tensorflow, I got this:"
"solve a serious bug which cause you fail to buildlast day's update on third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc made me failed to build tensorflow.
The error is as follow:"
Add ability to check for a specific bazel version. Supportsbazel versions pre-the ability to check for versions.
Fix broken links in distributed_runtime README.meNo description provided.
Upstream changes from internalNo description provided.
"Update os_setup.mdadd ""build with GPU support"" in ""Setting up TensorFlow for Development"", otherwise it is quite easy to wrongly build a CPU-only version.
I didn't noticed that there's a ""build with GPU support"" option at first, so I wrongly built a CPU-only version."
"replace googlemock source from google site to githubgoogle site is blocked for people under the wall, we could help them by using official google github repo"
"Update fully_connected_feed.py""os.path"" and ""numpy"" was unused, so I removed it.
The tfevents-output-file was not completely written in IPython, so I Added ""summary_writer.flush()"" to fix it."
Added implementation for GridRNNAs discussed here: #1453
"Update InitGPU() to return if VisibleDeviceCount() <=0.When CUDA_VISIBLE_DEVICES is empty, VisibleDeviceCount() returns -1, so we should check for <= 0."
Updated year on LicenseNo description provided.
Upstream changes from internalNo description provided.
"replace libpng from google source to github sourcesince google source will be blocked for people behind the wall, we could use the official release of libpng in github"
fix trailing whitespace in edge.tsNo description provided.
"Fix building android_tensorflow_lib.This commit fixes a build time failure of the Android TF library that is
missing some dependencies since they have been made more fine-grained.
For reference, the relevant errors (one per required dep) look something
like:"
Fix wrong parenthesis.No description provided.
Upstream changes from 2016/03/25No description provided.
Get tensorflow/core link down to 2.2GMost tests now depend on only the kernels they desperately need.
Improve core/kernels/BUILD so that no test is bigger than 25MTests now depend on a much finer grain set of kernels.
"gradient calc description change it text cellI have found the previous explanation of manual gradient calculation a
little confusing because we compute a vector of gradients with the size
of number of neurons (with bias) and in the explanation it looks like we
compute a scalar."
Fix mktemp issue on MacPR #1605 caused silent failure related to mktemp on Mac. This PR fixes that.
Typo descient to descentTypo in text cell
"mu to learning_rateNew var mu defined as Learning rate:mu = 0.002
but later in the same code cell var learning_rate is used instead:update_weights = tf.train.GradientDescentOptimizer(learning_rate).minimize(loss)
, which was defined in previous cell:"
Pushing changes from internal for March 24No description provided.
replace xrange with range for python3 compatibilityNo description provided.
TensorBoard Graph: Put edge label in the middle of edge only if it is thick enoughPut edge label in the middle of edge only if it is thick enough.
"Initial iOS Support and ExampleCompiling this will require the top-of-tree version of Bazel, until it makes it into the released version in about a week."
"Improve LSTMCell's appearance in TensorBoardThis is a very small cosmetic change, right now the 'concat' operation
isn't carried out in the scope created by calling LSTMCell so
this makes it appear weirdly inside tensorboard."
correct worker_service.proto linkFixes up a link in the distributed_runtime's README.md
"Make configure hard code path to swigI've set it up to just try ""swig"" if configure hasn't been run since
syncing to this change, so users who sync and have no swig issues won't
have to do anything new."
"solve the boringssl problem in grpcboringssl in grpc was previously held in googlesouce which block people under the wall,
upgrade to this commit version will change its source to https://github.com/google/boringssl.git
and this solve all the problems.
Detail can be found in #1413 (comment)"
Update relu link in 2_fullyconnected.ipynbNo description provided.
"Delete tf.reduce_mean on scalarRemove tf.reduce_mean() from tf.reduce_mean(tf.nn.l2_loss()) in tensorflow/tools/docker/notebooks/2_getting_started.ipynb
According to reference, tf.nn.l2_loss() always returns a scalar, thus no
need to average it.
At last code block where loss function is re-implemented by hand,there is
no mean() operation.
Excuse me if something is wrong, have little to no exp. in python and tensorflow."
"Typo in comment, random weights initAccording to the code and tensorflow reference standard deviation would
be 0.1
Excuse me if something is wrong, have little to no experience in python
and tensorflow"
Fix nbviewer link to deepdream.ipynbNo description provided.
add matplotlib inlineto redirect the image of matplotlib to notebook
"remove dropout in MNIST tutorialremove dropout in MNIST tutorial since it didn't improve the accuracy but make training slower,
what's more, it make the tutorial long and tedious. A simpler demo which can show same results will be cool.
After removing dropout, the accuracy remains around 99.2% and sometimes even higher (test 3 times, 0.9919, 0.9922, 0.9929)."
"Typo in comment, random weights initAccording to the code and tensorflow reference standard deviation would be 0.1
Excuse me if something is wrong, have little to no experience in python and tensorflow"
Fix arguments in docstrings.This PR fixes the mismatched argument names in docstring according to the function signatures and detail descriptions.
Fix pipeline example.This PR simply adds a missing ) in iris_with_pipeline.py.
Typo in 2_fullyconnected.ipynbNo description provided.
Upstream changes from internal for March 23No description provided.
"Add matplotlib inline@vincentvanhoucke
Sorry for leak comma."
Update 1_notmnist.ipynbFix typo
Update 1_notmnist.ipynbadded a comma at the end of line 58 so the ipython notebook is a valid JSON and can run
Branch 117961829No description provided.
Fix /dev/urandom-related hanging on some systemscat /dev/urandom causes hanging sometimes on ec2 machines. This PR fixes that.
"Benchmark testsTo run the tests, do (for example):
export TF_BUILD_CONTAINER_TYPE=CPU
export TF_BUILD_PYTHON_VERSION=PYTHON2
export TF_BUILD_IS_OPT=OPT
export TF_BUILD_IS_PIP=NO_PIP
export TF_BUILD_RUN_BENCHMARKS=1
tensorflow/tools/ci_build/ci_parameterized_build.sh"
Merge pull request #1 from tensorflow/masterThe new update of tensorflow on 14.03.2016 from tensorflow/tensorflow
fix: add selective_registration.h header to framework file groupNo description provided.
Fix for bool strictness in CIFAR multi-GPU trainer.Fixes #1595.
Add %matplotlib inline on the first cellConfig the matlotlib backend as plotting inline in IPython
Fix a missing-space issue in with_the_same_userNo description provided.
fix test sizesNo description provided.
Merge internal changes from late March 22ndSome small fixes to skflow in merge commit to rectify the original import.
Delete superfluous file added by a commitNo description provided.
Upstream changes from internal for March 22No description provided.
Note about compiling user op with gcc 5Added a note about compiling user op library with gcc 5
Add __pycache__ to .gitignoreNo description provided.
Fix docs for cross-entropy loss functionsShould close #1234
"Fix a Tensor-as-boolean issue in cifar10 tutorialThe bug in cifar10.py was caught be the nightly tutorial tests today. For example, see:http://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/39/console"
"Fix Skflow imports (esp in examples)Prior to this, the imports in the examples were broken."
"Add Tan, Asin, Acos, Atan trigonometric functions. See #1108This branch was previously in #1124 but for some reason (most likely a bad force push on my repo) was permanently closed."
Fixing a python3 issue in bias_op_test.pyIssue 1: range in python3 does not return a list as in python2
Push changes from internalNo description provided.
Moved deepdream to tutorials.No description provided.
"Update README.md for Udacity Deep Learning CourseAdd a FAQ for adding a new virtual machine instead of the default one.
The default one is only 1G. Here we create a new vm with 8G which is recommended"
"export tokenizer parameterAdd back the tokenizer parameter, since it's hard to set tokenizer now."
Fix a comment in a sampleNo description provided.
Fix a typo in RELEASE.mdNo description provided.
"Fix broken link in add_summary() docFix incorrect closing paren in link to Session.run() in doc for
tf.train.SummaryWriter.add_summary()"
"Minor refactoringsReuse variable
and use enumerate() to manage image_index variable."
Clarify that skip-gram and CBOW are both Word2Vec modelsText changes made in the Udacity Deep Learning Assignment 5 to clarify that skip-gram and CBOW are both Word2Vec models
0.6.0No description provided.
Upstream latest changes from internal(All changes coming from internal Googlers).
Add a missing 'of' in docNo description provided.
"549 unsorted segment maxGave it a try, however, computation of the theoretical jacobian seems to fail in the test.
All manual tests seem fine, and the numerical jacobian comparison between the sortedMax and unsortedMax seem also fine.
Any idea why this is, I am not super familiar with automatic derivatives, or is that not applicable for the max operation?"
Fix broken links to nightly wheels in README.mdNo description provided.
DeepDream tutorial notebook for TensorFlowNo description provided.
Fix typosNo description provided.
install sklearn to debianand fix nightly-debian-cpu
Fixing some python3 failures.  Fixes much of tensorflow pythontests and tensorboard server_test.
test without long test_timeoutWe should remove --test_timeout=3600.
Replace build_opener with urlretrieveSince used 'urlretrieve' without header to download the file from give url will cause fail it should use another way it is able to attach headers instead.
fix typosNo description provided.
Typo?No description provided.
"changed predict to use self.batch_size by default in skflowAlso, this adds an example for skflow that uses sklearn's gridsearchcv."
fix python3 supervisor and server_lib testsas title.
fixes #1522 close file object properly for read_data()Fixes the issue raised here:  #1522
[skflow] Corrected link to example and added link to new blog postNo description provided.
Fixes tensorflow/skflow#148 - off by one errorFixes tensorflow/skflow#148 - error in neural translation example for sampling validation examples.
Bugfix to test/run_and_gather_logs.Can one of the admins verify this patch?
"some learning decays from Stanford CS231n Karpathy lecture 6exponential time decay
step decay
1/t decay
from Lecture 6-39 Stanford CS231n"
Delete useless directoryNo description provided.
Fix python3 bNo description provided.
Fix python3 breakage (old-style exception block)No description provided.
quick python3 fixuse as instead of comma for python3 compatibility
"typos fix and ign temp files in gitignoreJust wanted to fix a simple typo in the documentation and noticed that some temporary files (e.g. .ipynb checkpoints and Mac DS_Store files for indexing) were not listed in the gitignore, yet, so that I just added them as well."
Disable run_and_gather_logs_testThe test is broken until proper dependencies are declared in workspace.bzl.
fix crash for empty dev_set bucketNo description provided.
fix virtualenv pip testingNo description provided.
"fixes #1423 - add check for tests to see if tensorflow was built with gpuEDIT:
The changes worked on CPU, but I would like to test GPU just to make sure.  I opened an issue for GPU test failure #1501"
R0.7No description provided.
simple ci build improvementsCan you rebase?
"Fix broken android example README linkThis PR fixes the link to the WORKSPACE file, highlights the relevant sections of that file, and recommends a faster command to initialize the protobuf submodule. I'm looking forward to getting this running on my phone! (I'm working through some ndk issues. I think bazel/protobuf depends on 32-bit r10e)."
"Fixing mac-pip buildsThe --system-site-package option flag in PR 1472 broke Mac pip builds due to existing packages on the system. For example, see: http://ci.tensorflow.org/view/Experimental/job/experimental-cais-tensorflow-mac-python2-copt_both/17/console"
ci_build: add cmake supportNo description provided.
make xrange python 2 and 3 compatible in sdca_ops.pyuse six.moves.range instead of xrange for python2/3 compatibility.
"Fix the download of the notMNIST dataset.It seems the Apache server at http://yaroslavvb.com is configured to
allow access to only specific user agents. By passing a user agent
string like wget or Mozilla, it could be tricked into allowing the
notebook to download the dataset. It is an ugly hack for urllib, would
have been simpler if the notebook used the requests module :-)"
Add space before filename in the error message of maybe_download().No description provided.
The error message in maybe_download was missing a space.Add a space before concatenating filename in the error message of function maybe_download
virtualenv tests should inherit system site-packagesThis way we do not need compile and install anything. We will test with the same version of packages we have compiled with (and the same as bazel test is running). Also we do not need install gcc and compile pip packages.
"Hard-coded bash pathChanged '#!/bin/bash' to '#!/usr/bin/env bash'.
There do not exist bash in most Unix system, like bsd family."
Improvements to Issue template languagePoints people to StackOverflow for non bugs / features.
pip test-on-install changes for skflow@jendap's comments and questions addressed. Rebased and squashed. Ready to merge.
Fix typosNo description provided.
Tf 0.7.1Merging in tensorflow 0.7.1
Cholesky backpropagationThis implements a gradient op for the Cholesky op as requested and discussed in #367 .
"added shortcuts to access tensorshape dims and ndimsfor less typing.len seems to cause problems though, will look into it."
Update README.mdScores obtained on running label_image does not display normalized value.
add code to register Mean GPU kernelsee #1433
"Fixing broken link in \Using the Op in Python\In ""Using the Op in Python"" section: the load_op_library link is broken.  Changed from ../../api_docs/python/framework#load_op_library to https://www.tensorflow.org/versions/r0.7/api_docs/python/framework.html#load_op_library"
"Fixed broken link in \Links\In ""Links"" paragraph there is a broken link to tensorflow.org.
Fixed it by changing from tensorflow.org tohttps://www.tensorflow.org/"
ci_build: fixesMerged.
Adding skflow to tensorflow/contribNo description provided.
Open vocabulary file in binary modeThe seq2seq tutorial breaks for python3 as GFile does not specify encoding. This fix explicitly opens the file in binary for both python 3 and python 2.7
Fixing Broken LinkFixed broked links
update protobuf to 3.0.0b2.post2No description provided.
Fix Error using tf.image.random._ : 'numpy.ndarray' object has no attribute 'get_shape' #1399Fix Error using tf.image.random._ : 'numpy.ndarray' object has no attribute 'get_shape' #1399 by fix flip_left_to_right to call convert_to_tensorFixes #1399
"Add complex128 dtypeI've started implementing support for complex128 in order to fix #1420.
This commit contains all changes necessary to create and run complex128 variables."
Logsoftmax kernelfor issue #443
"gradient of diag operator@girving Hopefully I learned your lessons.  I used auto in a loop, but initialized it to the unsigned version as I found out why it was comparing signed and unsigned.  Otherwise, hopefully this is good to go."
"ci_build - debian jessieadd debian jessie cpu container to ci_build
and cleanup a few things"
Fixing python3 issuesNo description provided.
"DO NOT MERGE: Replaced python configuration by a Skylark Remote RepositoryThis is just an example on how to delete the ./configure script
with Skylark Remote Repository (available in Bazel @Head)."
"Fix types image ops testsThanks to a recent comment by @martinwicke I realized that there's something wrong with the tests of test_image_ops.py. Combined with the use of use_gpu instead of force_gpu, the tests that were supposed to test the GPU implementation actually ran the CPU implementation."
Fix raising wrong exception.No description provided.
#1392 fix mnist tutorial doc typofix #1392 tutorial typo
"#1293 Implement Matrix TraceAs discussed in #1293, this is an attempt to implement matrix trace operator for rank 2 tensors. It only takes tensors with rank 2 (similar to the trace design in Theano). Trace for higher rank tensors requires more discussion on how we want to implement it. One approach is to calculate trace for all rank 2 sub-tensors as numpy. Another is to implement tensor contraction (generalization of trace)."
Added GPU implementation for resize nearest neighbor grad.And also adapted/added appropriate tests.
Also testing align_corners feature when comparing implementationsA follow up to #588
Improvements to Issue template languagePoints people to StackOverflow for non bugs / features  as an attempt to try to keep github issues mostly for bugs / feature tracking instead of general support.
"Changes to pip.sh; adding docker_test.shpip.sh now performs only the building and install of the pip package,
with the install happening inside virtualenv. (vritualenv address the
reinstallation issue on Mac pip tests). Then it calls
test_installation.sh and test_tutorials.sh to test the virtualenv pip
install of TensorFlow."
Add check_numerics_op.cc to Android extended operator filegroup.The check_numerics_op.cc is needed to load the newer inception model/retrained inception model in the android demo. Refer to the issue #1269 .
Fix typos in image_retraining how-to documentationNo description provided.
"Mean of cross entropy vs sum in summaries tutorialThe mnist_with_summaries.py and mnist_softmax.py tutorials compute the sum of the cross_entropy over the data points in the batch. This seems to deviate from the more common approach of taking the mean, such as in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/mnist.py#L99
The current form works as a loss function, but might confuse newcomers who are figuring out how gradients are aggregated in TensorFlow (as experienced by me, see http://stackoverflow.com/questions/35731506/unaggregated-gradients-gradients-per-example-in-tensorflow :-))"
Retraining Example with NotebookThe code from the retraining demo morphed into a IPython Notebook to make it easier to use interactively.
"Removed a broken linkA broken link referred to CIFAR-10 learning rate decay which was a broken link. So, I removed the link and the references to the link."
random.sample cannot take np.array. fixedOtherwise there will be an error on my machine.
Fix typo in READMENo description provided.
"Mastertranslate.py縺ｮ荳ｭ縺ｮ
outputs=[int(np.argmax(logit,axis=1))for logit in output_logits]
縺ｪ縺↓enumerate髢｢謨ｰ繧堤ｵ∩霎ｼ繧\"
Fix typoNo description provided.
Fix word2vec_basic.py example to be python 3 compatibleFixed word2vec_basic.py example to be both Python 2 & 3 compatible.
Fixing a still-broken link to artifact in README.mdNo description provided.
replaced an unused parameter with `_`replaced an unused parameter with _ as the Python convention to stop a linter warning
Fix PCRE link in get started docsThis is just a simple typo correction. Does this still require the Contributor License Agreements mentioned in the contributing guidelines?
"Add binary flag to gunzip_file in tensorflow/models/rnn/translate/data_utils.py.Python 3.4 does ""TypeError: must be str, not bytes"" unless the binary flag is present on line 69."
"Add _python_build to .gitignoreThe directions for a development build say to make it, so .gitignore
should ignore it."
"Removed a broken link in index.mdA link referred to CIFAR-10 samples. However, this was a broken link. So, I removed the link and the references to this link."
Assign graph to cpu in example/udacity/5_word2vec.Here's what I think is a fix for 1297. Please see the issue for discussion.
"fix #1303 doc link brokencapitalize name of type in C++ doc links, referencing #1303"
Incorrect variable nameNo description provided.
Fix typo 'overlaps' -> 'overlap'No description provided.
"Fixing basic Ubuntu CMake BuildPR #728 added basic CMake support for Tensorflow. However, that PR was only tested on MacOSX, so had a few errors on Ubuntu. This PR adds in fixes to make basic model compile on Ubuntu 12.04, with gcc 4.9.2, glibc 2.15."
Fixing nightly artifact links in README.mdAlso added auto version update for README.md in update_version.sh.
Corrected unbalanced parentheses in docs.Fixed small typo in the python API-docs for class tf.train.Optimizer.
Remove .pyc file and add *.pyc to .gitignoreCan one of the admins verify this patch?
"Removed a broken link in index.mdRemoved two broken links in index.md. One link referred to CIFAR-10 samples and another referred to CIFAR- Learning rate decay. However, these were broken links. So, I removed the links and the references to these links."
did grammatical clean updid grammatical clean up
"Automated Docker image build and testThis is aimed at automating testing of docker images.
Also, a step is added in pip.sh to uninstall existing versions of
protobuf and tensorflow if they exist. This addresses pip install-test
issues on non-Docker environments (e.g., Mac)"
Update retrain.py to be compatible with Python 3It's PROBABLY backwards compatible with Python 2 but I haven't fully tested it
"Use external repository for protobuf dependency.Currently, TensorFlow uses a Git submodule for its dependency on
protobuf. This was due to the hack used in protobuf for building Python
support with Bazel, which was required since Bazel's Python rules did
not support adding directories to PYTHONPATH. Now that the newimports attribute has been added to the Python rules in Bazel 0.2 and
the hack for Python support in protobuf has been removed, this change
removes the google/protobuf Git submodule and adds an external
repository for including protobuf."
Rint Operatorround to nearest operator #709
"In LRN docs eq, moved beta outside the parenthesisIn Krizhevsky 2012 paper, the beta in LRN equation is the exponent
of everything inside the parenthesis and not just sqr_sum."
Adding permission x to test_tutorials.shNo description provided.
Update 3_regularization.ipynbFixed a mistake in a variable name.
DiagPart OperatorImplemented the get diagonal GetDiag operator #824
Added sqrt to LRN doc equation.No description provided.
Adding switch for tutorial tests to ci_parameterized_build.shNo description provided.
"update_version.sh: automatic version update in sourceUsage example:
update_version.sh 0.8.0"
"Bidirectional rnn now returns forward and backward output states, upd…ated tests, tests pass. Updated my email with the right email this time!"
"Updated bidirectional rnn to return forward and backward final states…, updated tests, tests pass. Changed commit to use this email for Google permissions."
"Cherry-pick into r0.7: Add community projects to the resources pageThis supercedes some pull requests requesting to put these on the from page. We will only include what's included in the repo itself in the top-level readme, and add a pointer here instead."
Merge branch from 0.7.1 into masterNo description provided.
Update RELEASE.md for 0.7.1No description provided.
Go bindingsThis adds initial support for go via swig.
"Add list of community created projects... and point to it from the README. This addresses #995, #1223. We'd like to link only to things in this repo from the README, but it's a good idea to add a place for projects using or enhancing TensorFlow."
"Conditional logging for core platform flowConditional logging for core platform flow(skeletal), quick take as i find users needing this.This pull is based on using re2 flags and allowing severity check before the logging.Please let me know your thoughts."
MNIST example using TFRecordWriter context manager.The TFRecordWriter wasn't being explicitly closed. Updated the example to use the context while writing the examples.
Added skflow link to READMENo description provided.
Edit train.exponential_decay sample codeNo description provided.
Add ability to specify which gcc to useSome versions of gcc is incompatible with cuda (e.g. gcc 5.X.X and cuda 7.5). In such situation a compatible gcc version can be specified when running ./configure.
"Fixed bug in example: s/len(num_steps)/num_steps/gnum_steps is a value (an integer), not a list, so it was a typo to take len(num_steps)."
Add nightly binaries to README.mdMerging this should wait until our Mac nightlies successfully built at least once (otherwise we'll have dead links).
upgrade pip links for 0.7.1No description provided.
Retraining Example with NotebookThe code from the retraining demo morphed into a IPython Notebook to make it easier to use interactively.
Revert \Fix tensorboard import path\This reverts commit 4b30694.
Using ln -sf in python_config.shNo description provided.
Removing --upgrade and numpy-1.8.2 from pip.shConsolidating the two steps into one.
Fix a wrong link to random_crop()No description provided.
Fix typos in comments.No description provided.
Rename `testDoubleRandomTranposeBoth` to `testDoubleRandomTransposeBoth`This PR renames a test case in matmul_op_test.py to fix a typo.
"Avoid copying invalid large constant data.Tensorflow cannot create an operation with a NodeDef larger than 2GB.
(Python Unit Test Case: ConstantTest.testTooLargeConstant)
However, before throwing a meaningful exception, it consumes lots of memory
to copy the invalid input data. This causes std::bad_alloc errors sometimes."
ci_build: support tensorflow as submodulethis enable tensorflow/serving reuse our ci_build
Bidirectional rnn stateAdded return state from forward and backward rnn in bidirectional_rnn. Updated tests to pass in kernel_tests/rnn_test.py
Cherry-pick: Fix tensorboard import pathFor 0.7.1
Fixed spellingMinor spelling mistake
update release version to 0.7.1That should be all that but RELEASE.md
add samples to docker and start jupyter by defaultNo description provided.
remove ld_library_path from docker imageas suggested by @3XX0 in #970 (comment)
R0.7No description provided.
"Cherry-pick python3 and libcuda.so fixes from master into r0.7 branchI think it would be nice to get these changes into the patch release too, at least the python3 bug fix one.  Thoughts?"
Clean up unused variables in a exampleThis PR removes unused variables in mnist_with_summaries.py and makes its document align with it.
Cherry-pick into master: pip.sh: die on pip install failureNo description provided.
Fix Python3 tensorboard server_test failure.  Fixes #1147.Change: 114916060
fix broken links in docsfix issue #1169
fix broken links in docsfix issue #1169
pip.sh: die on pip install failureNo description provided.
Fix dataset encoding in MNIST example for Python 3The beginner example didn't work for me in Python 3. I believe this is because files are opened in UTF-8 mode by default. This patch tells gfile to open them in binary mode instead.
upgrade to cuda 7.5 and cudnn 4No description provided.
Fix tensorboard import pathNo description provided.
Fix a wrong parenthesisNo description provided.
"Adding tests and options to pip.shAdding test-on-intall for
tensorflow/python/{contrib,examples,models,tensorboard}"
Remove extra colonsThe documentation has double colons in a couple places.
Cherry-pick fixes to tensorboard/gfile/saver to r0.7 branchNo description provided.
Fix doc to test GPU kernels using dockerthe documentation says to use gpu_pip.sh but there is not such a command in the tensorflow/tools/ci_build/ directory only pip.sh
"Adding tests and options to pip.shAdding test-on-intall for
tensorflow/python/{contrib,examples,models,tensorboard}"
Cherry-pick some fixes into r0.7 branchgfile changes are necessary for input_data.py
fix master cpu build urlbecause we have renamed the master to master-cpu
"Adding tests and options to pip.shAdding test-on-intall for tensorflow/python/{contrib,examples,models,tensorboard}"
Fix gfile_test on Python 3This fixes #1146
Use standard types and add missing returns to fix compitable with MSVCNo description provided.
Fixed bug with fall-through switch statementNo description provided.
Fix spellingNo description provided.
"Embed __version__ into packageHi,
it would be nice to embed a version into the tensorflow package for reproducibility. The common Python convention is to do this via __version__ attribute in the __init__.py file so that one can import the package and verify its version."
"don't need a '+' before lambdaI think the + before the lambda is a typo. It can't compile by MSVC. On Linux, after removing it, gcc compile the code without problem and all tests pass as well."
Merge r0.7 back to masterNo description provided.
Update RELEASE.md according to the latest one in r0.7 branch.No description provided.
Merge r0.7 back to masterMerge the fixes for r0.7 back into master
Fix typoNo description provided.
Add tfserve tutorialNo description provided.
"Example image code using image module.I couldn't find decode_png, convert_image_dtype or rgb_to_hsv added to the tf module."
"Add Tan, Asin, Acos, Atan trigonometric functionsSee  Issue #1108 ."
"use string::append to catenate stringsWith VC++, when std::string is empty, there will be an error -- ""string iterator not dereferencable"" -- to use string::begin."
"Normalization of imageGenerally pixel intensity or features are normalised to [-1,1] range. But, here the range was [-0.5,0.5].
Sorry for inconvenience, if it was intentional."
"use string::append to catenate stringsWith VC++, when std::string is empty, there will be an error -- ""string iterator not dereferencable"" -- to use string::begin."
keep numpy version in pip.shWe should keep building against numpy 1.8.2 - the version in ubuntu 14.04.
Update os_setup for 0.7No description provided.
update docker for 0.7.0No description provided.
Adding google/protobuf back to pipNo description provided.
"TensorFlow: add thread annotations to mutex classes to preventthread annotation warnings from popping up (mostly on Mac with
clang)."
Fixing exit code in ci_parameterized_build.shCommit00b5ea7#diff-6ea208942bad0a8c2194f5540b5dd618
"Fix bitcast_op_test.py on Python 3This test is failing for me on Python 3 because the getbuffer interface only exists in Python 2.
Replacing it with .data should work for both versions."
"shrink pip package content@martinwicke @caisq we need this and the questions is if we want to keep the ""external"" there."
Python API docs fix array syntaxFix array syntax in comments for examples tf.pow and tf.accumulate_n
Add draw_bounding_box and sample_distorted_bounding_boxNo description provided.
"remove some signed/unsigned integer comparison warningsJenkins, test this please."
Update release notes for 0.7No description provided.
Changes for r0.7Can one of the admins verify this patch?
"Add a CNN sample for MNISTThe purpose of this PR is,"
"Contrib docsAdd contrib to the set of docs generated, and run gen_docs at head to produce an up to date docset."
keep special GPU kernels inside #if GOOGLE_CUDA... #endifWe don't need to compile these GPU kernels when compiling Tensorflow for CPU device only.
"Enable GPU reduction for doublesI was just trying to apply reduce_sum to a float64 array on a GPU and noticed that the reduction operators are currently only defined for float32.
Is there a reason for limiting the type?"
"Clean out assets left over from a prior runBefore, assets were not cleaned out if the build failed. Since some of them are created with mode 400, the next run will fail because unzip won't overwrite them. This makes sure we always remove the directory before we try unzipping."
"Fix 1064Fix #1064, comparison between string and bytes."
Update 0.6.0 docs with fix to tutorial.  Fixes #1084No description provided.
Enable all cudasNo description provided.
Make failing builds failNo description provided.
"added return state to bidirectional rnn, added unit testsAlso modified other unit tests in BidirectionalRNNTest to fit new return value."
Add a link.No description provided.
Fixes issue with loading external tensorboard assetsNo description provided.
"Fix tensorboard serving of external assetsThis is a quick fix to have TensorBoard correctly load external assets, after we have renamed the directories for compatibility with new Bazel."
Fixing Python 3-breaking xrange in r0.7 branchNo description provided.
add cuda links in third_party to gitignoreNo description provided.
ci_build updates@jendap The files involved in this PR overlap with my PR #1051 and the changes are smaller. I can include your changes in my PR to avoid potential conflict and make it easier to merge everything to r0.7. How does that sound to you?
Upgraded to the latest version of EigenUpgraded to the latest version of Eigen that introduces a way to conjugate a tensor as well as improved LU decompositions.
Fix some compilation issues found with Visual Studio 2015.Can one of the admins verify this patch?
Fix a bug for an unavailable argumentThe num_classes argument of the dense_to_one_hot function is never called by the other function.
"Clean up referencesClean up references and add explicit links to pdf files for references
that are displayed on www.tensorflow.org."
Upgraded to the latest version of EigenThis version provides better support for embedded platforms and optimized implementations of the tanh function amongst many enhancements
"Update resources pageFix some layout structure, add models repo info"
Completed the cleanup of the TensorFlow local copy of the Eigen codebaseNo description provided.
A few bug fixes to pip.sh and ci_parameterized_build.shCan one of the admins verify this patch?
removed signed unsigned comparison warnings for Move in inlined_vector.hChanged int to size_t to remove warnings from unsigned int and signed int comparisons.  This is my first pull request for this codebase.  How would I normally test after I make changes?
Fix new typos in tensorflow/core.No description provided.
Fixing a recently-submitted Python3-breaking lineiteritems() --> items() please
"Fixed \filer\ type in variable_scope how toChanged ""filer"" to ""filter"""
"fixed a typoSorry, I closed a messy PR at #987, and reopens here. Thanks."
Fix all but one Python 3 testsaver_test is still broken.
Fixing more Python-3 test errorsSome Python3 test errors introduced by recent changes are corrected.
Improvements to print_build_info.sh and pip.shThis is in response to @jendap's earlier comments. Using the $() subscript syntax.
Add Docs blurb to howtos.also fixes redundant path elements in links.
More explicit directory structure instructionsMore documentation about directory structure so I can point at it.
"Rename the parameter of wrapper function consistently with its docs and the original one.This fixes the mismatch between parameter variable dev and
its documentation device_name_or_function."
"Fix for python3 syntax incompatibility.Encountered a syntax error while following ""Getting started"" tutorial with python3:"
Python3 install-test in pip.shNo description provided.
Fixed tensorboard installation for pipBroke when backend was moved to subfolder. See also #1000
"Update os_setup.md with python3 documentationAdds python3 documentation for: ""Test the TensorFlow installation"""
Patch 1Adding python3 documentation to os_setup
Fix merge gone wrongMy merge and @vrv's overlapped badly so we're left with a few duplicate imports.
"Adding option for parallel build and serial testsIn ci_parameterized_build.sh, allow the option of parallel bazel build
followed by serial (--jobs=1) bazel test."
fix minor filename typofix minor filename typo
Example code for SummaryIterator using `tf.train.summary_iterator`.I couldn't find tensorflow.summary_iterator but found it under tensorflow.train. I've updated the documentation to match this test which also calls it by tf.train.summary_iterator.
Minor comment spelling fix.Changing excerpt spelling in the mnist_with_summaries.py file.
"TensorFlow: fix word2vec timeouts on GPU by pinning model on CPURight now word2vec is not well supported on GPU (missing
scatter sub, etc).  We can remove this limitation later when
ScatterSub and other ops are all available on GPU."
Fixing more tests in Python3Fixing more tests in Python3
Add workspace root to the list of include path for swig compilationNo description provided.
"Strip out external/XXXX/ prefix from GetPath in cc_op_genGetPath was not stripping external/XXX/ which make C++ compilation
of the generated header fail. All external repositories are added
to the include path in C++ compilation by Bazel."
Update README.mdNA
"Set visibility of all targets to //visibilty:publicBazel has a bug that prevent correct resolution of visibility labels
and this change is using //visiblity:* targets to be able to
load tensorflow as a remote repository."
"Script for Jenkins parameterized matrix buildThe script takes a few environment variables as input and invoke
ci_build.sh in the same directory in the proper way. It takes
information about the build type (cpu | gpu | android), Python version,
whether ""-c opt"" is used and whether PIP install-test is to be
performed. It automatically examines the parameters to determine the
correct build script to call and the argument flags to use with it. It
also examines whether Docker is available on the system to determine
whether the build will be done inside Docker or not. If GPU Docker build
is detectd, it'll map the CUDA devices and libraries automatically.
In addition, it looks at some optional environment variables to set
additional command flags for Docker and the build command."
"Python3 tests: getting easy ones out of the wayAdding PY2AND3 label for a Python test file. Getting rid some obvious Python 2-3 compatibility issues that cause test errors, including comparing lists with integers, string-byte array difference, and use of xrange. After this CL, there are still 11 tests that fail in Python3. Those are more involved issues and will be addressed separately."
"Make python_check relocatableUses $location in the genrule and a path that's relative to the
script to find expected files so that this works both as a local
rule and if tensorflow is used as a remote repository."
Added a link to some tutorial examples.No description provided.
Fix typos in strings and comments of core/kernels.No description provided.
Made the fixed point code compile when AVX2 instructions ar enabledNo description provided.
"Update 1_notmnist.ipynbIf download fails, force delete on file by default"
fix a typoI fixed a typo.
Fix 952No description provided.
Shuffling letters before assigning them to training and validation datasetsNo description provided.
Silenced some bogus compilation warning generated by nvccNo description provided.
"Print `tags` instead of `tag` since `tag` doesn't exist in funtion `Run`.Otherwise, in order to print exception info for each tag,
we also are able to declare local variable tag, and
set it with the value of t in for statement."
Add FillFunctor definition for boolNo description provided.
"Fix directory_watcher_test on mac.  Fixes #964Keeps track of seek position and seeks to current byte offset prior to reading
from the file.  Apparently this is necessary on Mac, because once you've read EOF,
you need to seek to your current position to read new data that has since been
appended to the file."
Adding build info print-out for Jenkins Description SetterThis is addressing issue #736
Register ZerosLikeOp for all number types and boolFixes #952
"Fix wrong variable name (pickle_name) in 1_notmnist.ipynbWhen raise Exception at line 327, 'pickle_file' is not predefined and raise error."
"Fix wrong variable name (pickle_name) in 1_notmnist.ipynbWhen raise Exception at line 327, 'pickle_file' at line 328 is not predefined and raise error."
"Added missing PY2AND3 build annotationWithout this line pip package cannot be built in python3, similar to #901"
Remove external/<repositoryName>/ prefix from C includes statementsThis prefix is invalid when using TensorFlow as a remote repository.
"add distributed, non-blocking thread pool implementationCurrent thread pool implementation is centralized and non-scalable.
This change adds distributed, non-blocking thread pool implementation.
Both implementations co-exist and can be chosen using
TF_THREAD_POOL env var."
Add a .gitignore entry and a missing srcs_version specNo description provided.
"Autoload folders and pickle files if already exist (avoid extract)improved extract(filename) and load(data_folders, min_num_images_per_class) to avoid extractions of .tar.gz if folders already exist and  the creation of already dumped pickle files is also avoided"
Add a missing `import` statement to show correct error messages._googletest.py uses sys.stderr.write and sys.exit without importing sys.
fix gradient of tf.floorFix #897 .
typo in xw_plus_bNo description provided.
Improved 1_notmnistCan one of the admins verify this patch?
"Change types of constant numeric literals.This PR fixes mismatched types in numeric literals usages.
For examples, use 'size_t{0}' and '1u' instead of '0' and '1' respectively.
This removes 26 simple compiler warnings in 20 files
on 'signed' and 'unsigned' comparisons on CHECK_* and DCHECK_* macros."
"Udacity word2vec notebook: more explicit examples for batch generation algo@vincentvanhoucke As I struggled a bit (with pen & paper) to make sense of what's really happening in the generate_batch function of the word2vec notebook, I'd like to offer this revision, with examples which make it a bit more explicit IMO. Here's a link to the rendered version of what I'm proposing:"
"Notmnist lowmemAs explained in this Udacity thread and as requested by Vincent in Issue #936, I am issuing this PR to update the way the notMNIST dataset is loaded into memory, so that it requires less memory."
Python PIP test-on-installPIP package is built and installed in a Docker container. Then the Python unit tests in the TF source are moved to a separate folder and ran with the plain Python environment without Blaze.
Python PIP test-on-installPIP package is built and installed in a Docker container. Then the Python unit tests in the TF source are moved to a separate folder and ran with the plain Python environment without Blaze.
Adding --recurse-submodules flag to git clone in ci_bulid READMEThis simple doc fix is related to issue: #896
installation shell script Improvementmerge improve and master
ci_build: support gpu build and interactive workflow bettermount cuda devices and libraries into container
"Add the code to request the runtime permission for the camera.Note that this change requires the bazel to be able to import v13 support
library. Until this issue (bazelbuild/bazel#827) is
fixed, thisc change doesn't build.
(I tested by changing my local bazel setting)"
Fix/udacity notebooks py3@vincentvanhoucke In reference to #871 (comment)
Upgraded to a newer version of Eigen that fixes a compilation error when compiling with nvcc and clangNo description provided.
Fixes SummaryWriter namespace in TensorBoard warning messagesNo description provided.
"Remove compiler warnings on CHECK_* and DCHECK_* macros.This removes lots of simple compiler warnings on 'signed' and 'unsigned'
comparisons on CHECK_* and DCHECK_* macros (reported in #128).
In most cases, static_cast<> is used to remove the warnings."
"Adding instructions for wheel on python3.5The current python3 wheel installation instructions doesn't work for python3.5, since the pip3 (python3.5) is unable to recognize the wheel file ""tensorflow-0.6.0-cp34-none-linux_x86_64.whl"" due to the version information contained in the file name ""cp34-none"". See issue #468"
Remove unused importNo description provided.
Update CROSSTOOL with Toolchain for ARMUpdate CROSSTOOL that it uses the local_linux toolchain for arm as some people managed to build tensor flow on raspberrypi2 and jetson. Otherwise it would fail with:
Fixed Momentum Optimization EquationNo description provided.
"Use the same types in `for` statements.This removes lots of simple compiler warnings on 'signed' and 'unsigned'
comparisons (reported in #128). Please note that there are two types of
changes. It is because this does not change any function signatures."
"Added missing PY2AND3 build annotationAs @martinwicke commented, building for python 3 was failing due to missing srcs_version=""PY2AND3"" annotations. This single addition of the annotation allowed the build to complete successfully for me using python 3.5.1 on OS X 10.11.2."
"Note that master is installed with plain git cloneSince the docs are versioned, and the latest stable version is the default visible docset on the website, we should point out that the installation instructions actually install master, and also give instructions on how to install a specific branch. This change doesn't mention which branch it is on because we don't want to have to change this text in each release."
"Udacity example 1: import urllib for downloadReally minor, import urllib so the dataset download below just works the first time."
"added //tensorflow/cc:cc_ops to //tensorflow:libtensorflow.soHey, I've wrapped tensorflow into openframeworks (http://openframeworks.cc/ ) was a massive PITA but more on that later :)"
"While doing the assignment, I noticed that my train_dataset was getting trampledMy laptop loads the original data very slowly"
"Corrected bug in Python code, wrong variable being used.Corrected variable usage."
Clone 0.6.0 branch to use 0.6 branchMaster head is not bazel 0.1.1-compatible any more.
Use portable code in stringpiece.ccA new pull request. It only has new commit.
"Some error checking and user output notesHi,"
Keeps optional question format consistenAdded a newline to keep separation of optional questions from required tasks consistent and easier to read.
"Some error checking and user output notesHi,"
"Fix training of decoder embeddings.When loop_function is provided, rnn_decoder and attention_decoder do not propagate gradients over the loop function. However,  when feed_previous for embedding_rnn_decoder, embedding_tied_rnn_seq2seq and embedding_attention_decoder is True, the output symbols are embedded by the loop function extract_argmax_and_embed. The embedding for output symbols will learning nothing if there is no gradient propagating over the loop function."
Fix typo in Problem 1Simple typo in the description.
"Recover NumPy License Header in `numpy.i`.The original numpy.i file has own NumPy License Header.
The copyright header should be retained."
Mount notebooks into a mounted fs volume to avoid data lossThe current way this is done:
"Use portable code in stringpiece.ccstd::min is defined in [1].
memmem is a GNU extension, std::search is standard."
fix: notebooks were made python3 compatible.Minor modifications were made to the code so that everything is python3 compatible.
"Make data_folders have only foldersOn OS X the system created .DS_Store files in every folder. As a result running the same notebook twice
leads to the exception being thrown.
Really, |data_folders| should be gated behind  a check for folder type."
Fix small missing [by]I think there is the word by missing:
SessionOptions should be declared as defined. <numeric> should be included to use itoa.Some minor issues found while porting the code to Windows.
".DS_Store in OSX is not an image file and gives error. So skip over t…his file.
Am not sure if the patch captured the indentation. Pl check."
Variable num_classes than num_folders in exception codeNo description provided.
Avoids an extra copy of the graph def.No description provided.
fix typos in docstringsNo description provided.
"Add links to new tensorflow Udacity courses #852Hey TF-Team,"
"Fix Undefined Error on Exceptionnum_folders is undefined and probably num_classes is meant. But as the UndefinedError happens in an exception, the program fails anyway."
Fix typo in ops.pytypo. see PR844
Ensure the code compiles when AVX2 instructions are enabled.This fixes issue #580
"Improved the performance of spatial convolutions on CPU:Moved some checks out of inner loops
Split the mapper in 2: a base mapper, and a sub-mapper. This reduces the number of variables that are contained in the base mapper and helps reduce register spills"
Improved the performance of convolutions on CPUNo description provided.
Fix typo in framework.mdtypo
"Added check for hidden files in list comprehensionWhen invoking os.listdir() on OS X the hidden file "".DS_Store"" will be included which breaks the check if there are as many folders as classes."
Sorting now runs in tensorboards image grid.Some other changes from previous commits were also added to compiled file through gulp vulcanize.
#NAME?
upgrade bazel in docker containers to 0.1.4No description provided.
upgrade bazel in docker containersNo description provided.
"Changed non-public ops to public ones in tutorialsReplace non-public tf.nn.relu_layer and tf.nn.xw_plus_b by a combination of tf.nn.relu, tf.matmul and tf.add."
Add --spawn_strategy=standalone to os_setup.mdIt seems to solve more problems than it causes. Also fixes some formatting/grammar nits.
Fix typos in comments.No description provided.
ci_build: fix bash array usagefixes the ci_build part of python3 build
fix docs of 'Saver.max_to_keep'No description provided.
ci_build updatesmerged.
Improved the performance of the contrast adjustment codeImproved the performance of the contrast adjustment code by enabling nvcc to optimize the broadcast of scalars
"Remove mutable default value.Up to now, it's not a problem since unigrams is always given.
However, it might cause a problem in the future because
a mutable default parameter value is created once and shared."
Add missing arguments.Can one of the admins verify this patch?
"Off-by-one-error in shapes table docA rank n tensor's shapes should be [D0, D1, ..., Dn-1]"
Fix typos in core/framework.No description provided.
Update license year range to 2016No description provided.
Fix typos in python/training module.No description provided.
"Fix syntax error when executing setup.py using python 3.4When I execute python3 ./tensorflow/tools/pip_package/setup.py install on raspberry pi 2, I encountered syntax error message at these two code snippets. This commit is for fixing such error."
"Print the correct host information instead of `localhost` alias.If a user specify a host ip by using --host option,
any connections to http://localhost:6006 are refused."
Small document fixesCan one of the admins verify this patch?
Fix missing dependency declarations error #469 #772No description provided.
Fix typos in a testcase name and comments of core/common_runtime module.Please note that this PR renames the following test case.
"Adds GPU CUDA kernel for scatter opsThis adds GPU CUDA kernels for scatter_add, scatter_sub, and scatter_update."
Use augmented assignment statements and fix typos in mnist/word2vec python codeNo description provided.
"Added generate_checkpoint_state() which returns a checkpoint protowith model_checkpoint_path containing absolute path or path relative
to save_dir."
Fix typos in a string and comments of python and C++ code in `models`No description provided.
fix error in coordinator documentationThere is a missing comma in the Coordinator() documentation.
Added generate_checkpoint_state_proto().Added generate_checkpoint_state_proto() which returns a checkpoint proto with model_checkpoint_path containing absolute path or path relative to save_dir.
rnn_cell.py: Allow user to explicitly set forget bias in LSTMCellNo description provided.
Fix typos in tutorialsNo description provided.
Fix Python 3 compilation issuesThis fixes the build error when using Python 3 as the return types for import array operations are int in Python 3 and void in Python 2 (as discussed in #733).
Non-blocking queuing and running on thread poolAddresses #551 and should address #583
Also checking if all_model_checkpoint_paths is an empty listFixes #755
Delete the local copy of eigen that is shipped with tensorflowTensorFlow now pulls the eigen code directly from the eigen upstream repository. There is no need to keep a local copy anymore.
"Adding Python 3 support to TensorboardThis PR implements Python 3 support into Tensorboard in a portable way, by importing packages from six when possible and converting strings into the correct encoding whenever necessary."
Fix typos in tensorboard and toolsNo description provided.
Fix broken reference to TensorBase::SerializeI spent a few hours trying to track down this reference. Hopefully future readers won't have to!
fix misspells.No description provided.
Added some examples to the doc strings.This is related to the issue #618.
Added some missing examples to the doc strings.This is related to the issue #618.
Speeds up the bidirectional RNN by providing the sequence length to e…ach RNN. Also fixes shape inference when using the sequence length.
Fix typos in tensorboard/componentsNo description provided.
Fix unmatched html tagsNo description provided.
Replace javascript function name `isNodeAuxilliary` with `isNodeAuxiliary`No description provided.
Fix typos in strings and docs in CUDA moduleNo description provided.
"Adding basic CMake supportThis PR adds very basic CMake support, to unblock people who can't use Bazel (eg. Windows users)."
ci_build: improve user handling inside the containercreate user home with .bazelrc (this is needed for slaves)
CSV file loading example using packThe example code to read CSV files raised the exception:
Delete most of the local copy of eigen that is shipped with tensorflowTensorFlow now pulls the eigen code directly from the eigen upstream repository. There is no need to keep a local copy anymore.
"Fix documentation typos in ops.Since this PR does not include the fixes on generated docs,
the corresponding md files need to be regenerated after merging this PR."
ConcatOp error text changeI think this message was meant to be ended with a ] but I am uncertain if that notation is clear.
ci_build updatesA few ci_build changes:
"Test the TensorFlow installation location using inspectWhile testing an installation I executed python -c 'import site; print(""\n"".join(site.getsitepackages()))' from within a virtualenv environment. This raised the same error mentioned in #392."
"Test the TensorFlow installation location using inspectWhile testing an installation I executed python -c 'import site; print(""\n"".join(site.getsitepackages()))' from within a virtualenv environment. This raised the same error mentioned in #392."
Deleted the TF copy of the tensor codeSince  we're now pulling the tensor code directly from the eigen repository we don't need to keep a local copy anymore.
"Check if logdir already exists before trying to create itCurrently, running something like this:"
Add BUILD rule to create a shared library#108 (#108 (comment))
"Fix file exists errorIn function tf.train.write_graph, first check if logdir exists, then write file in ""w"" or ""wb"" mode depends on as_text"
Fix typos of sample python code and docs in howtosNo description provided.
"Pass on a default if debug_name is not set in parse_single_sequence_exampleIf left None, debug_name is set to 'SequenceExample'. Fixes #680."
Fixes two minor anchor link issues.I think these were missed by PR #660
Fix typoFix typo
"PoolAlloc: Remove div by zero, demote WARN->INFONo description provided."
Fix IPython case in MNIST tutorialQuick fix to respect the will of IPython developers.
"Added citations to the relevant papers for Adam, AdaGrad, and RMSpropAdded citations to the relevant papers for Adam, AdaGrad, and RMSprop keeping with the documentation style used in the RNN docstrings. I think this would be helpful, especially for lesser known optimizers like Adam."
Fix a few typos in convolutional.py and os_setup.md.No description provided.
Enable building with CUDA support on Mac OS XNice! I think this is clearly and improvement over the existing one. I tried on my macbook with cuda and it works. I also published a small tutorial on how to use this patch]. Hope it can be merged soon. @vrv @mrry thoughts ?
"optimize slice_input_producerWhen shuffle=False, input_slice_producer can be implemented directly with FIFOQueue.
The original implementation using range and array indexing is slower."
Remove all {#anchor} tags in non-API Markdown docsThis commit does two things:
Fix typoFix typo
Tiny fix to API docsOne piece of example code in train.md is incorrect.
"Fixes anchor links in installation instructionsThe header anchor links in the docs (inside the directory g3doc) is using a {#anchor} format that github's Markdown does not understand.  This PR primarily fixes the anchor text in the installation instructions, which I assume is fairly popular."
Add Adadelta optimizerThis is my attempt at #516 . Looking for some early feedback as is my first attempt.
Using cuda_kernel_helpers in average pooling.This removes some code duplication.
"Fix small typo: python/training/moving_averages.pyQuick fix to typos in comments:
tensorflow/python/training/moving_averages.py"
Added info about how to run TensorBoard for the Deep CNN example.The CIFAR tutorial talks a bit about the TensorBoard and I think it'd be nice if the command to run it was mentioned explicitly in the tutorial. Otherwise you have to look the documentation for the TensorBoard and open cifar10_train.py to see where the log files are being saved.
ADB Install Instructions for Android Example (tiny fix)The ADB installation command in the documentation for the Android app threw this error when I tried it:
Update index.mdPro tutorial edit - Updating import input_data to full tensorflow path from tensorflow.examples.tutorials.mnist import input_data
Fix apk path in the docWhen following the instructions build rule doesn't produce that incremental APK
"TENSOR-566: Fix for verbose messagingAfter doing a bit of digging on various logging.h used in tensorflow, while some provide facility of silencing logs via LogSilencer and some use re2 package with flags like FLAGS_minlogLevel, the flow for local_device.cc and direct_session.cc only hit the core platform default logging (tensorflow/core/platform/default/logging.h) which neither has facility to silence log nor is capable of interpreting command line flag setting. One way is to make it verbose logging at level 1 for these messages are truly not messages a user needs to know  every time, but only if interested.Please review and let me know if this is ok.Also long term if there is log suppressing on this flow.thanks."
fix wrong variable reference error descriptionNo description provided.
fix typoNo description provided.
Keep screen on during camera preview.Prevent display off during the demonstration.
"Fix TensorBoard not displaying any imagesThe Convolutional Neural Networks/CIFAR-10 tutorial describes how TensorBoard is able to display preprocessed images that have been output through tf.image_summary. However, when viewing the resulting TensorBoard site, the 'Images' tab displays no images at all, and Chrome reports invalid javascript."
Fix syntax error in input.pyMentioned in #480
Update os_setup.md to point to 0.6.0 releaseFixes #603
"improved array_ops.mdIn my environment, the documentation of reverse_sequence looks like this:"
Fixed typo in image.mdNo description provided.
"add default decay value for RMSPropOptimizerSet RMSPropOptimizer decay parameter default value to 0.9, for simplicity."
add identity_initializerAdd identity initializer to initiate a variable with custom values.
Added GPU implementation for resize nearest neighbor.Also added appropriate tests/benchmarks. Implementation for backwards step is still missing and will follow in another PR. I tried to model it after the code used for maxpooling.
"[doc] Add anchor links to headers in api_doc filesCurrently, there is no good way to link to sections of the API
documentation. While there are links to sections/methods in the sidebar
and in 'table of contents'-like areas of the doc, it would be better if
there was a way to grab a link directly from the section header/method
name itself."
Fixed random_contrast link in the Deep CNN tutorialThe random_contrast link was pointing to an older location that seems to no longer exist. Fixed it to point to the right location.
"558: Markdown to html, titlesHi,
Most of projects I have worked on were based on Jekyll, pigments of markdown to webpages and used title/layout based on .yml/css/layouts file.In other python projects, providing title on the link itself works.Both variants done as example on Contributing.md to seek inputs.thanks."
Typo fixFix citation to Bahdanau et al. in sequence to sequence documentation
"Fixed saver relative paths for `latest_checkpoint`This would be cleaner if we made all paths listed in the ""latest""
file relative to the its directory, allowing the removal of the
added os.path.isabs checks."
"Update README.md to remove stale install instructions, instead pointing to os_setup.md.Change README.md to point to install instructions, since the install instructions were stale (mentioned 0.5.0), and are likely to continue to be stale with respect to os_setup.md."
Small fixes for Python 3 supportQuestion: what is the procedure to run the Python tests? The documentation does not mention them.
"Modified `coordinator.py`  to be Python 2/3 compatibleThere was a line that was throwing an error when building for Python 3 (as in Issue #560), but which can be fixed in a way that is Python 2/3 compatible."
"resolved syntax error on python3Exception, -> Exception as, tested running tensorflow/models/image/mnist/convolutional.py on both python2.7 and python3.4 with GPU support."
"DO NOT MERGE - pull request builder testThanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA)."
"Recursively copying elements from one graph to anotherAllows for easy portability of elements (Variables and Ops) from one Tensorflow Graph to another. If called on a top-level root in a dataflow graph, automatically copies all required instances."
typo on np.random.rand()No description provided.
"Registering all real number types for resize operations.Simplifies code and only adds int16 and int64 as additional compatible
types, which might come in handy at some point."
"Force embedding_lookup onto CPU in basic word2vec example - #514Should fix #514. Of course the ideal solution would be to implement ScatterSub on the GPU, but I think this is a reasonable short-term fix so that help don't run into errors when running the script on a machine with GPU."
Allows IndexedSlices to be fed and fetched.Addresses issue #518.
Update contribution section in README.mdWe now accept pull requests.
Create convolutional.pyAn example from expert MNIST tutorial
Update mnist_softmax.pyClosing the interactive session in the end
Enable building with GPU support under OS X.These changes add GPU/CUDA support when building under OS X. Cuda and CuDNN library directories and file extensions are set based on the current build platform and library versions are stored in easily modifiable variables.
Change needed in indexThe url to mnist.py here is https://tensorflow.googlesource.com/tensorflow/+/master/tensorflow/examples/tutorials/mnist/mnist.py which works.
"Update MNIST Beginner tutorialThe MNIST data is actually split into 3 parts: train, test, and validation. Validation was missing from the description."
Fix array padding typo in docsNo description provided.
Add targets to build libtensorflow.so and libtensorflow.dylibUsing these build targets to build libtensorflow for use with node.js.
fix typo in docNo description provided.
"Fix compatibility with CUDA Compute Capability <3.2 (issue #320).The current code is not compatible with CUDA devices withe CC <3.2 due to the use of __ldg intrinsic. A  preprocessor check for CC>=3.2, such as the one proposed here resolves the issue."
Fix for issue #117: allow relative paths for tensorboard logdirThis fixes issues #117 and #321.
Replace cuda R2 references with R3pulling hack to compile tf against cuda R3 on GPU with 3.0 capability
Correct links to rnn and sequence-to-sequence tutorialsNo description provided.
Fix typoThere's a comma missing in the list of languages we hope the community will develop front ends for.
"Minor change for tutorial.Added a session close to the Interactive Session, so that no exceptions are thrown when a user tests later examples in the same kernel."
"Minor change for read consistency. (Highlight MD Fix)Changed {'t[i, j, k]'} to {t[i, j, k]} on line 21 to highlight text."
Switch int to uint to remove some warningseliminate some compiler warnings.
Change test set in mnist demo to use batches to avoid being OOM (>4GB) on gpu.I feel like most potential enthusiasts don't really have access to >4GB gpu.
"Complete the loop before returning the wordsThe loop now completes before returning the words, 'with' is used to make sure the file closes and the description of the function now describes that it returns a list of words, not a string."
"Changes to word2vec_basic.pyThe routine returns now after performing the full loop, and uses with to ensure the file is properly closed."
"AlexNet with FC layers: backward is very slow?(I know PRs are not the way to contribute to TensorFlow -- I'm just posting this for discussion, though I'm happy to submit this patch via the official means if desired.)"
Fix 'Fetches' example in basic_usageneed 窶和s sess窶 to be executed.
Fix when installation on OSXUpdate the instruction to fix installation on OSX for exception like below
Fix #89No description provided.
fixed link to tutorial and some typosNo description provided.
Try to convert to readable latexI'm sure what processor you use for http://www.tensorflow.org/tutorials/mnist/beginners/index.md but this is my guess at how to make those symbols translate to something better than it is now
Javascript -> JavaScriptNo description provided.
Updated links in documentation.No description provided.
"[doc] typoIts JavaScript, google"